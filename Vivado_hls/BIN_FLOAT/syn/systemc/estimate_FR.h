// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_FR_HH_
#define _estimate_FR_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "estimate_FR_ddiv_64ns_64ns_64_31_1.h"
#include "estimate_FR_sitodp_32ns_64_6_1.h"
#include "estimate_FR_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 12,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct estimate_FR : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    estimate_FR(sc_module_name name);
    SC_HAS_PROCESS(estimate_FR);

    ~estimate_FR();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    estimate_FR_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* estimate_FR_AXILiteS_s_axi_U;
    estimate_FR_ddiv_64ns_64ns_64_31_1<1,31,64,64,64>* estimate_FR_ddiv_64ns_64ns_64_31_1_U1;
    estimate_FR_sitodp_32ns_64_6_1<1,6,32,64>* estimate_FR_sitodp_32ns_64_6_1_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<44> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<7> > spks_address0;
    sc_signal< sc_logic > spks_ce0;
    sc_signal< sc_lv<32> > spks_q0;
    sc_signal< sc_lv<32> > update;
    sc_signal< sc_lv<7> > counts_address0;
    sc_signal< sc_logic > counts_ce0;
    sc_signal< sc_logic > counts_we0;
    sc_signal< sc_lv<32> > counts_d0;
    sc_signal< sc_lv<32> > counts_q0;
    sc_signal< sc_lv<7> > outputs_address0;
    sc_signal< sc_logic > outputs_ce0;
    sc_signal< sc_logic > outputs_we0;
    sc_signal< sc_lv<32> > outputs_d0;
    sc_signal< sc_lv<1> > icmp_ln10_fu_162_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_339;
    sc_signal< sc_lv<7> > i_fu_174_p2;
    sc_signal< sc_lv<7> > i_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln7_fu_180_p1;
    sc_signal< sc_lv<64> > zext_ln7_reg_351;
    sc_signal< sc_lv<1> > icmp_ln6_fu_168_p2;
    sc_signal< sc_lv<1> > icmp_ln7_fu_185_p2;
    sc_signal< sc_lv<1> > icmp_ln7_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > counts_addr_reg_367;
    sc_signal< sc_lv<7> > counts_addr_1_gep_fu_120_p3;
    sc_signal< sc_lv<7> > counts_addr_1_reg_372;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > grp_fu_158_p1;
    sc_signal< sc_lv<64> > tmp_reg_382;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > grp_fu_153_p2;
    sc_signal< sc_lv<64> > x_assign_reg_387;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<1> > p_Result_s_reg_392;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<32> > p_Val2_5_fu_319_p3;
    sc_signal< sc_lv<32> > p_Val2_5_reg_397;
    sc_signal< sc_lv<7> > i_0_reg_142;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > add_ln8_fu_191_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > p_Val2_s_fu_198_p1;
    sc_signal< sc_lv<52> > tmp_V_1_fu_219_p1;
    sc_signal< sc_lv<54> > mantissa_V_fu_223_p4;
    sc_signal< sc_lv<11> > tmp_V_fu_209_p4;
    sc_signal< sc_lv<12> > zext_ln502_fu_237_p1;
    sc_signal< sc_lv<12> > add_ln502_fu_241_p2;
    sc_signal< sc_lv<11> > sub_ln1311_fu_255_p2;
    sc_signal< sc_lv<1> > isNeg_fu_247_p3;
    sc_signal< sc_lv<12> > sext_ln1311_fu_261_p1;
    sc_signal< sc_lv<12> > ush_fu_265_p3;
    sc_signal< sc_lv<32> > sext_ln1311_1_fu_273_p1;
    sc_signal< sc_lv<54> > zext_ln1285_fu_281_p1;
    sc_signal< sc_lv<137> > zext_ln682_fu_233_p1;
    sc_signal< sc_lv<137> > zext_ln1287_fu_277_p1;
    sc_signal< sc_lv<54> > r_V_fu_285_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_297_p3;
    sc_signal< sc_lv<137> > r_V_1_fu_291_p2;
    sc_signal< sc_lv<32> > zext_ln662_fu_305_p1;
    sc_signal< sc_lv<32> > tmp_2_fu_309_p4;
    sc_signal< sc_lv<32> > result_V_1_fu_327_p2;
    sc_signal< sc_lv<44> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<44> ap_ST_fsm_state1;
    static const sc_lv<44> ap_ST_fsm_state2;
    static const sc_lv<44> ap_ST_fsm_state3;
    static const sc_lv<44> ap_ST_fsm_state4;
    static const sc_lv<44> ap_ST_fsm_state5;
    static const sc_lv<44> ap_ST_fsm_state6;
    static const sc_lv<44> ap_ST_fsm_state7;
    static const sc_lv<44> ap_ST_fsm_state8;
    static const sc_lv<44> ap_ST_fsm_state9;
    static const sc_lv<44> ap_ST_fsm_state10;
    static const sc_lv<44> ap_ST_fsm_state11;
    static const sc_lv<44> ap_ST_fsm_state12;
    static const sc_lv<44> ap_ST_fsm_state13;
    static const sc_lv<44> ap_ST_fsm_state14;
    static const sc_lv<44> ap_ST_fsm_state15;
    static const sc_lv<44> ap_ST_fsm_state16;
    static const sc_lv<44> ap_ST_fsm_state17;
    static const sc_lv<44> ap_ST_fsm_state18;
    static const sc_lv<44> ap_ST_fsm_state19;
    static const sc_lv<44> ap_ST_fsm_state20;
    static const sc_lv<44> ap_ST_fsm_state21;
    static const sc_lv<44> ap_ST_fsm_state22;
    static const sc_lv<44> ap_ST_fsm_state23;
    static const sc_lv<44> ap_ST_fsm_state24;
    static const sc_lv<44> ap_ST_fsm_state25;
    static const sc_lv<44> ap_ST_fsm_state26;
    static const sc_lv<44> ap_ST_fsm_state27;
    static const sc_lv<44> ap_ST_fsm_state28;
    static const sc_lv<44> ap_ST_fsm_state29;
    static const sc_lv<44> ap_ST_fsm_state30;
    static const sc_lv<44> ap_ST_fsm_state31;
    static const sc_lv<44> ap_ST_fsm_state32;
    static const sc_lv<44> ap_ST_fsm_state33;
    static const sc_lv<44> ap_ST_fsm_state34;
    static const sc_lv<44> ap_ST_fsm_state35;
    static const sc_lv<44> ap_ST_fsm_state36;
    static const sc_lv<44> ap_ST_fsm_state37;
    static const sc_lv<44> ap_ST_fsm_state38;
    static const sc_lv<44> ap_ST_fsm_state39;
    static const sc_lv<44> ap_ST_fsm_state40;
    static const sc_lv<44> ap_ST_fsm_state41;
    static const sc_lv<44> ap_ST_fsm_state42;
    static const sc_lv<44> ap_ST_fsm_state43;
    static const sc_lv<44> ap_ST_fsm_state44;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_3FC999999999999A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_54;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln502_fu_241_p2();
    void thread_add_ln8_fu_191_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_counts_addr_1_gep_fu_120_p3();
    void thread_counts_address0();
    void thread_counts_ce0();
    void thread_counts_d0();
    void thread_counts_we0();
    void thread_i_fu_174_p2();
    void thread_icmp_ln10_fu_162_p2();
    void thread_icmp_ln6_fu_168_p2();
    void thread_icmp_ln7_fu_185_p2();
    void thread_isNeg_fu_247_p3();
    void thread_mantissa_V_fu_223_p4();
    void thread_outputs_address0();
    void thread_outputs_ce0();
    void thread_outputs_d0();
    void thread_outputs_we0();
    void thread_p_Val2_5_fu_319_p3();
    void thread_p_Val2_s_fu_198_p1();
    void thread_r_V_1_fu_291_p2();
    void thread_r_V_fu_285_p2();
    void thread_result_V_1_fu_327_p2();
    void thread_sext_ln1311_1_fu_273_p1();
    void thread_sext_ln1311_fu_261_p1();
    void thread_spks_address0();
    void thread_spks_ce0();
    void thread_sub_ln1311_fu_255_p2();
    void thread_tmp_2_fu_309_p4();
    void thread_tmp_4_fu_297_p3();
    void thread_tmp_V_1_fu_219_p1();
    void thread_tmp_V_fu_209_p4();
    void thread_ush_fu_265_p3();
    void thread_zext_ln1285_fu_281_p1();
    void thread_zext_ln1287_fu_277_p1();
    void thread_zext_ln502_fu_237_p1();
    void thread_zext_ln662_fu_305_p1();
    void thread_zext_ln682_fu_233_p1();
    void thread_zext_ln7_fu_180_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
