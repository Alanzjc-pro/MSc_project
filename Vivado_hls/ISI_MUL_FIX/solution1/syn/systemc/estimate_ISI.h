// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_ISI_HH_
#define _estimate_ISI_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "estimate_ISI_mul_mul_10ns_10ns_13_1_1.h"

namespace ap_rtl {

struct estimate_ISI : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > spksTime_V_address0;
    sc_out< sc_logic > spksTime_V_ce0;
    sc_in< sc_lv<18> > spksTime_V_q0;
    sc_out< sc_lv<7> > spksPre_V_address0;
    sc_out< sc_logic > spksPre_V_ce0;
    sc_out< sc_logic > spksPre_V_we0;
    sc_out< sc_lv<18> > spksPre_V_d0;
    sc_in< sc_lv<18> > spksPre_V_q0;
    sc_out< sc_lv<7> > ISI_V_address0;
    sc_out< sc_logic > ISI_V_ce0;
    sc_out< sc_logic > ISI_V_we0;
    sc_out< sc_lv<10> > ISI_V_d0;
    sc_in< sc_lv<10> > ISI_V_q0;
    sc_out< sc_lv<7> > ISIpre_V_address0;
    sc_out< sc_logic > ISIpre_V_ce0;
    sc_out< sc_logic > ISIpre_V_we0;
    sc_out< sc_lv<10> > ISIpre_V_d0;
    sc_in< sc_lv<10> > ISIpre_V_q0;
    sc_out< sc_lv<7> > elements_V_address0;
    sc_out< sc_logic > elements_V_ce0;
    sc_in< sc_lv<6> > elements_V_q0;


    // Module declarations
    estimate_ISI(sc_module_name name);
    SC_HAS_PROCESS(estimate_ISI);

    ~estimate_ISI();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    estimate_ISI_mul_mul_10ns_10ns_13_1_1<1,1,10,10,13>* estimate_ISI_mul_mul_10ns_10ns_13_1_1_U1;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_V_fu_169_p2;
    sc_signal< sc_lv<7> > i_V_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > add_ln1498_fu_207_p2;
    sc_signal< sc_lv<13> > add_ln1498_reg_357;
    sc_signal< sc_lv<1> > icmp_ln7_fu_163_p2;
    sc_signal< sc_lv<7> > elements_V_addr_reg_362;
    sc_signal< sc_lv<7> > ISI_V_addr_reg_367;
    sc_signal< sc_lv<7> > spksPre_V_addr_reg_372;
    sc_signal< sc_lv<7> > ISIpre_V_addr_reg_377;
    sc_signal< sc_lv<6> > j_V_fu_219_p2;
    sc_signal< sc_lv<6> > j_V_reg_385;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln887_fu_213_p2;
    sc_signal< sc_lv<18> > p_Val2_s_reg_395;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln1498_fu_239_p2;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_401;
    sc_signal< sc_lv<14> > trunc_ln703_1_fu_245_p1;
    sc_signal< sc_lv<14> > trunc_ln703_1_reg_405;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<14> > ret_V_2_fu_252_p2;
    sc_signal< sc_lv<14> > ret_V_2_reg_410;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<10> > p_Val2_4_fu_257_p4;
    sc_signal< sc_lv<10> > p_Val2_4_reg_415;
    sc_signal< sc_lv<10> > p_Val2_3_reg_421;
    sc_signal< sc_lv<10> > trunc_ln1_reg_428;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_299_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_reg_433;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<10> > sub_ln703_1_fu_336_p2;
    sc_signal< sc_lv<10> > sub_ln703_1_reg_437;
    sc_signal< sc_lv<7> > t_V_reg_141;
    sc_signal< sc_lv<6> > t_V_1_reg_152;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > zext_ln544_fu_175_p1;
    sc_signal< sc_lv<64> > zext_ln1498_3_fu_234_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<12> > tmp_1_fu_183_p3;
    sc_signal< sc_lv<10> > tmp_2_fu_195_p3;
    sc_signal< sc_lv<13> > zext_ln1498_1_fu_203_p1;
    sc_signal< sc_lv<13> > zext_ln1498_fu_191_p1;
    sc_signal< sc_lv<13> > zext_ln1498_2_fu_225_p1;
    sc_signal< sc_lv<13> > add_ln1498_1_fu_229_p2;
    sc_signal< sc_lv<14> > trunc_ln703_fu_249_p1;
    sc_signal< sc_lv<13> > r_V_fu_342_p2;
    sc_signal< sc_lv<11> > lhs_V_fu_284_p1;
    sc_signal< sc_lv<11> > rhs_V_fu_287_p1;
    sc_signal< sc_lv<11> > ret_V_fu_290_p2;
    sc_signal< sc_lv<11> > zext_ln1496_fu_296_p1;
    sc_signal< sc_lv<5> > r_V_3_fu_305_p4;
    sc_signal< sc_lv<5> > trunc_ln2_fu_318_p4;
    sc_signal< sc_lv<10> > r_V_5_fu_327_p1;
    sc_signal< sc_lv<10> > sub_ln703_fu_331_p2;
    sc_signal< sc_lv<10> > r_V_4_fu_314_p1;
    sc_signal< sc_lv<10> > r_V_fu_342_p0;
    sc_signal< sc_lv<10> > r_V_fu_342_p1;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_lv<13> > r_V_fu_342_p00;
    sc_signal< sc_lv<13> > r_V_fu_342_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<10> ap_const_lv10_100;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_C;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ISI_V_address0();
    void thread_ISI_V_ce0();
    void thread_ISI_V_d0();
    void thread_ISI_V_we0();
    void thread_ISIpre_V_address0();
    void thread_ISIpre_V_ce0();
    void thread_ISIpre_V_d0();
    void thread_ISIpre_V_we0();
    void thread_add_ln1498_1_fu_229_p2();
    void thread_add_ln1498_fu_207_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_elements_V_address0();
    void thread_elements_V_ce0();
    void thread_i_V_fu_169_p2();
    void thread_icmp_ln1496_fu_299_p2();
    void thread_icmp_ln1498_fu_239_p2();
    void thread_icmp_ln7_fu_163_p2();
    void thread_icmp_ln887_fu_213_p2();
    void thread_j_V_fu_219_p2();
    void thread_lhs_V_fu_284_p1();
    void thread_p_Val2_4_fu_257_p4();
    void thread_r_V_3_fu_305_p4();
    void thread_r_V_4_fu_314_p1();
    void thread_r_V_5_fu_327_p1();
    void thread_r_V_fu_342_p0();
    void thread_r_V_fu_342_p00();
    void thread_r_V_fu_342_p1();
    void thread_r_V_fu_342_p10();
    void thread_ret_V_2_fu_252_p2();
    void thread_ret_V_fu_290_p2();
    void thread_rhs_V_fu_287_p1();
    void thread_spksPre_V_address0();
    void thread_spksPre_V_ce0();
    void thread_spksPre_V_d0();
    void thread_spksPre_V_we0();
    void thread_spksTime_V_address0();
    void thread_spksTime_V_ce0();
    void thread_sub_ln703_1_fu_336_p2();
    void thread_sub_ln703_fu_331_p2();
    void thread_tmp_1_fu_183_p3();
    void thread_tmp_2_fu_195_p3();
    void thread_trunc_ln2_fu_318_p4();
    void thread_trunc_ln703_1_fu_245_p1();
    void thread_trunc_ln703_fu_249_p1();
    void thread_zext_ln1496_fu_296_p1();
    void thread_zext_ln1498_1_fu_203_p1();
    void thread_zext_ln1498_2_fu_225_p1();
    void thread_zext_ln1498_3_fu_234_p1();
    void thread_zext_ln1498_fu_191_p1();
    void thread_zext_ln544_fu_175_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
