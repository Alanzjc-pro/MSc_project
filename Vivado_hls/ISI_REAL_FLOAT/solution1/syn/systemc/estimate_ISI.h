// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_ISI_HH_
#define _estimate_ISI_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "estimate_ISI_dsub_64ns_64ns_64_5_full_dsp_1.h"
#include "estimate_ISI_dmul_64ns_64ns_64_6_max_dsp_1.h"
#include "estimate_ISI_dcmp_64ns_64ns_1_2_1.h"

namespace ap_rtl {

struct estimate_ISI : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > spksTime;
    sc_in< sc_lv<64> > spksPre_i;
    sc_out< sc_lv<64> > spksPre_o;
    sc_out< sc_logic > spksPre_o_ap_vld;
    sc_out< sc_lv<64> > ISI;
    sc_out< sc_logic > ISI_ap_vld;
    sc_in< sc_lv<64> > ISIpre_i;
    sc_out< sc_lv<64> > ISIpre_o;
    sc_out< sc_logic > ISIpre_o_ap_vld;
    sc_in< sc_lv<64> > penalty;
    sc_in< sc_lv<32> > num;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    estimate_ISI(sc_module_name name);
    SC_HAS_PROCESS(estimate_ISI);

    ~estimate_ISI();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    estimate_ISI_dsub_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>* estimate_ISI_dsub_64ns_64ns_64_5_full_dsp_1_U1;
    estimate_ISI_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>* estimate_ISI_dmul_64ns_64ns_64_6_max_dsp_1_U2;
    estimate_ISI_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* estimate_ISI_dcmp_64ns_64ns_1_2_1_U3;
    sc_signal< sc_lv<27> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_99_p2;
    sc_signal< sc_lv<64> > reg_110;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln5_reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<1> > and_ln9_2_reg_290;
    sc_signal< sc_lv<64> > grp_fu_93_p2;
    sc_signal< sc_lv<64> > reg_117;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<1> > icmp_ln5_fu_122_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > ISI_assign_reg_262;
    sc_signal< sc_lv<1> > icmp_ln9_fu_164_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_270;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > icmp_ln9_1_fu_170_p2;
    sc_signal< sc_lv<1> > icmp_ln9_1_reg_275;
    sc_signal< sc_lv<1> > icmp_ln9_2_fu_176_p2;
    sc_signal< sc_lv<1> > icmp_ln9_2_reg_280;
    sc_signal< sc_lv<1> > icmp_ln9_3_fu_182_p2;
    sc_signal< sc_lv<1> > icmp_ln9_3_reg_285;
    sc_signal< sc_lv<1> > and_ln9_2_fu_213_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<64> > select_ln5_fu_225_p3;
    sc_signal< sc_lv<64> > grp_fu_93_p0;
    sc_signal< sc_lv<64> > grp_fu_93_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<64> > grp_fu_99_p0;
    sc_signal< sc_lv<64> > grp_fu_99_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > bitcast_ln9_fu_128_p1;
    sc_signal< sc_lv<64> > bitcast_ln9_1_fu_146_p1;
    sc_signal< sc_lv<11> > tmp_3_fu_132_p4;
    sc_signal< sc_lv<52> > trunc_ln9_fu_142_p1;
    sc_signal< sc_lv<11> > tmp_6_fu_150_p4;
    sc_signal< sc_lv<52> > trunc_ln9_1_fu_160_p1;
    sc_signal< sc_lv<1> > or_ln9_fu_188_p2;
    sc_signal< sc_lv<1> > or_ln9_1_fu_192_p2;
    sc_signal< sc_lv<1> > and_ln9_fu_196_p2;
    sc_signal< sc_lv<1> > grp_fu_106_p2;
    sc_signal< sc_lv<1> > and_ln9_1_fu_202_p2;
    sc_signal< sc_lv<1> > xor_ln5_fu_208_p2;
    sc_signal< sc_lv<64> > select_ln9_fu_219_p3;
    sc_signal< sc_lv<27> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<27> ap_ST_fsm_state1;
    static const sc_lv<27> ap_ST_fsm_state2;
    static const sc_lv<27> ap_ST_fsm_state3;
    static const sc_lv<27> ap_ST_fsm_state4;
    static const sc_lv<27> ap_ST_fsm_state5;
    static const sc_lv<27> ap_ST_fsm_state6;
    static const sc_lv<27> ap_ST_fsm_state7;
    static const sc_lv<27> ap_ST_fsm_state8;
    static const sc_lv<27> ap_ST_fsm_state9;
    static const sc_lv<27> ap_ST_fsm_state10;
    static const sc_lv<27> ap_ST_fsm_state11;
    static const sc_lv<27> ap_ST_fsm_state12;
    static const sc_lv<27> ap_ST_fsm_state13;
    static const sc_lv<27> ap_ST_fsm_state14;
    static const sc_lv<27> ap_ST_fsm_state15;
    static const sc_lv<27> ap_ST_fsm_state16;
    static const sc_lv<27> ap_ST_fsm_state17;
    static const sc_lv<27> ap_ST_fsm_state18;
    static const sc_lv<27> ap_ST_fsm_state19;
    static const sc_lv<27> ap_ST_fsm_state20;
    static const sc_lv<27> ap_ST_fsm_state21;
    static const sc_lv<27> ap_ST_fsm_state22;
    static const sc_lv<27> ap_ST_fsm_state23;
    static const sc_lv<27> ap_ST_fsm_state24;
    static const sc_lv<27> ap_ST_fsm_state25;
    static const sc_lv<27> ap_ST_fsm_state26;
    static const sc_lv<27> ap_ST_fsm_state27;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<64> ap_const_lv64_3FA0000000000000;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ISI();
    void thread_ISI_ap_vld();
    void thread_ISIpre_o();
    void thread_ISIpre_o_ap_vld();
    void thread_and_ln9_1_fu_202_p2();
    void thread_and_ln9_2_fu_213_p2();
    void thread_and_ln9_fu_196_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln9_1_fu_146_p1();
    void thread_bitcast_ln9_fu_128_p1();
    void thread_grp_fu_93_p0();
    void thread_grp_fu_93_p1();
    void thread_grp_fu_99_p0();
    void thread_grp_fu_99_p1();
    void thread_icmp_ln5_fu_122_p2();
    void thread_icmp_ln9_1_fu_170_p2();
    void thread_icmp_ln9_2_fu_176_p2();
    void thread_icmp_ln9_3_fu_182_p2();
    void thread_icmp_ln9_fu_164_p2();
    void thread_or_ln9_1_fu_192_p2();
    void thread_or_ln9_fu_188_p2();
    void thread_select_ln5_fu_225_p3();
    void thread_select_ln9_fu_219_p3();
    void thread_spksPre_o();
    void thread_spksPre_o_ap_vld();
    void thread_tmp_3_fu_132_p4();
    void thread_tmp_6_fu_150_p4();
    void thread_trunc_ln9_1_fu_160_p1();
    void thread_trunc_ln9_fu_142_p1();
    void thread_xor_ln5_fu_208_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
