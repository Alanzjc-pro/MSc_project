// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_FR_HH_
#define _estimate_FR_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct estimate_FR : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > spksTime_V;
    sc_out< sc_lv<8> > FR_V;
    sc_out< sc_logic > FR_V_ap_vld;
    sc_in< sc_lv<8> > c_V_i;
    sc_out< sc_lv<8> > c_V_o;
    sc_out< sc_logic > c_V_o_ap_vld;
    sc_in< sc_lv<32> > Num;
    sc_in< sc_logic > finish_i;
    sc_out< sc_logic > finish_o;
    sc_out< sc_logic > finish_o_ap_vld;


    // Module declarations
    estimate_FR(sc_module_name name);
    SC_HAS_PROCESS(estimate_FR);

    ~estimate_FR();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > finish_read_read_fu_56_p2;
    sc_signal< sc_lv<1> > finish_read_reg_170;
    sc_signal< sc_lv<8> > c_V_read_reg_174;
    sc_signal< sc_lv<45> > mul_ln1118_fu_95_p2;
    sc_signal< sc_lv<45> > mul_ln1118_reg_179;
    sc_signal< sc_lv<45> > zext_ln1496_fu_127_p1;
    sc_signal< sc_lv<45> > zext_ln1496_reg_184;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_131_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_reg_189;
    sc_signal< sc_lv<32> > tmp_V_fu_136_p2;
    sc_signal< sc_lv<32> > tmp_V_reg_193;
    sc_signal< sc_lv<45> > mul_ln1118_1_fu_144_p2;
    sc_signal< sc_lv<45> > mul_ln1118_1_reg_198;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > add_ln214_fu_154_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln1497_fu_150_p2;
    sc_signal< sc_lv<32> > sext_ln1118_fu_91_p0;
    sc_signal< sc_lv<32> > mul_ln1118_fu_95_p0;
    sc_signal< sc_lv<8> > shl_ln703_fu_101_p2;
    sc_signal< sc_lv<8> > shl_ln703_1_fu_107_p2;
    sc_signal< sc_lv<22> > shl_ln1_fu_120_p3;
    sc_signal< sc_lv<32> > tmp_V_fu_136_p0;
    sc_signal< sc_lv<32> > mul_ln1118_1_fu_144_p0;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<45> ap_const_lv45_1999;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_FR_V();
    void thread_FR_V_ap_vld();
    void thread_add_ln214_fu_154_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V_o();
    void thread_c_V_o_ap_vld();
    void thread_finish_o();
    void thread_finish_o_ap_vld();
    void thread_finish_read_read_fu_56_p2();
    void thread_icmp_ln1496_fu_131_p2();
    void thread_icmp_ln1497_fu_150_p2();
    void thread_mul_ln1118_1_fu_144_p0();
    void thread_mul_ln1118_1_fu_144_p2();
    void thread_mul_ln1118_fu_95_p0();
    void thread_mul_ln1118_fu_95_p2();
    void thread_sext_ln1118_fu_91_p0();
    void thread_shl_ln1_fu_120_p3();
    void thread_shl_ln703_1_fu_107_p2();
    void thread_shl_ln703_fu_101_p2();
    void thread_tmp_V_fu_136_p0();
    void thread_tmp_V_fu_136_p2();
    void thread_zext_ln1496_fu_127_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
