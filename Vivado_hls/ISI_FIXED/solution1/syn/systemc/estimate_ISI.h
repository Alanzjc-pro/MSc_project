// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_ISI_HH_
#define _estimate_ISI_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "estimate_ISI_mul_mul_17s_22s_39_1_1.h"

namespace ap_rtl {

struct estimate_ISI : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > spksTime_V_address0;
    sc_out< sc_logic > spksTime_V_ce0;
    sc_in< sc_lv<20> > spksTime_V_q0;
    sc_out< sc_lv<7> > spksTime_V_address1;
    sc_out< sc_logic > spksTime_V_ce1;
    sc_in< sc_lv<20> > spksTime_V_q1;
    sc_out< sc_lv<7> > ISI_V_address0;
    sc_out< sc_logic > ISI_V_ce0;
    sc_out< sc_logic > ISI_V_we0;
    sc_out< sc_lv<17> > ISI_V_d0;
    sc_in< sc_lv<17> > ISI_V_q0;
    sc_out< sc_lv<7> > ISI_V_address1;
    sc_out< sc_logic > ISI_V_ce1;
    sc_out< sc_logic > ISI_V_we1;
    sc_out< sc_lv<17> > ISI_V_d1;
    sc_in< sc_lv<17> > ISI_V_q1;


    // Module declarations
    estimate_ISI(sc_module_name name);
    SC_HAS_PROCESS(estimate_ISI);

    ~estimate_ISI();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    estimate_ISI_mul_mul_17s_22s_39_1_1<1,1,17,22,39>* estimate_ISI_mul_mul_17s_22s_39_1_1_U1;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_fu_135_p2;
    sc_signal< sc_lv<7> > i_reg_282;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln8_fu_141_p1;
    sc_signal< sc_lv<64> > zext_ln8_reg_287;
    sc_signal< sc_lv<1> > icmp_ln7_fu_129_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln10_fu_166_p2;
    sc_signal< sc_lv<7> > ISI_V_addr_2_reg_310;
    sc_signal< sc_lv<17> > p_Val2_2_reg_315;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<17> > p_Val2_3_reg_322;
    sc_signal< sc_lv<39> > r_V_2_fu_273_p2;
    sc_signal< sc_lv<39> > r_V_2_reg_330;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > j_fu_267_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > i_0_reg_106;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > j_0_reg_117;
    sc_signal< sc_lv<64> > zext_ln8_1_fu_146_p1;
    sc_signal< sc_lv<64> > zext_ln11_fu_178_p1;
    sc_signal< sc_lv<64> > zext_ln11_1_fu_183_p1;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_243_p2;
    sc_signal< sc_lv<17> > trunc_ln703_fu_151_p1;
    sc_signal< sc_lv<17> > trunc_ln703_1_fu_155_p1;
    sc_signal< sc_lv<7> > add_ln11_fu_172_p2;
    sc_signal< sc_lv<18> > shl_ln1118_1_fu_195_p3;
    sc_signal< sc_lv<22> > shl_ln_fu_188_p3;
    sc_signal< sc_lv<22> > sext_ln1118_fu_202_p1;
    sc_signal< sc_lv<22> > r_V_fu_206_p2;
    sc_signal< sc_lv<18> > lhs_V_fu_219_p1;
    sc_signal< sc_lv<18> > rhs_V_fu_222_p1;
    sc_signal< sc_lv<18> > ret_V_fu_225_p2;
    sc_signal< sc_lv<32> > shl_ln1_fu_231_p3;
    sc_signal< sc_lv<39> > sext_ln1494_fu_239_p1;
    sc_signal< sc_lv<15> > trunc_ln1_fu_248_p4;
    sc_signal< sc_lv<17> > r_V_4_fu_257_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_4A;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ISI_V_address0();
    void thread_ISI_V_address1();
    void thread_ISI_V_ce0();
    void thread_ISI_V_ce1();
    void thread_ISI_V_d0();
    void thread_ISI_V_d1();
    void thread_ISI_V_we0();
    void thread_ISI_V_we1();
    void thread_add_ln11_fu_172_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_135_p2();
    void thread_icmp_ln10_fu_166_p2();
    void thread_icmp_ln1494_fu_243_p2();
    void thread_icmp_ln7_fu_129_p2();
    void thread_j_fu_267_p2();
    void thread_lhs_V_fu_219_p1();
    void thread_r_V_4_fu_257_p1();
    void thread_r_V_fu_206_p2();
    void thread_ret_V_fu_225_p2();
    void thread_rhs_V_fu_222_p1();
    void thread_sext_ln1118_fu_202_p1();
    void thread_sext_ln1494_fu_239_p1();
    void thread_shl_ln1118_1_fu_195_p3();
    void thread_shl_ln1_fu_231_p3();
    void thread_shl_ln_fu_188_p3();
    void thread_spksTime_V_address0();
    void thread_spksTime_V_address1();
    void thread_spksTime_V_ce0();
    void thread_spksTime_V_ce1();
    void thread_trunc_ln1_fu_248_p4();
    void thread_trunc_ln703_1_fu_155_p1();
    void thread_trunc_ln703_fu_151_p1();
    void thread_zext_ln11_1_fu_183_p1();
    void thread_zext_ln11_fu_178_p1();
    void thread_zext_ln8_1_fu_146_p1();
    void thread_zext_ln8_fu_141_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
