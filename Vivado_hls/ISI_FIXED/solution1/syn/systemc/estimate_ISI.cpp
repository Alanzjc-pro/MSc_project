// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "estimate_ISI.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic estimate_ISI::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic estimate_ISI::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> estimate_ISI::ap_ST_fsm_state1 = "1";
const sc_lv<7> estimate_ISI::ap_ST_fsm_state2 = "10";
const sc_lv<7> estimate_ISI::ap_ST_fsm_state3 = "100";
const sc_lv<7> estimate_ISI::ap_ST_fsm_state4 = "1000";
const sc_lv<7> estimate_ISI::ap_ST_fsm_state5 = "10000";
const sc_lv<7> estimate_ISI::ap_ST_fsm_state6 = "100000";
const sc_lv<7> estimate_ISI::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> estimate_ISI::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> estimate_ISI::ap_const_lv32_1 = "1";
const sc_lv<1> estimate_ISI::ap_const_lv1_0 = "0";
const sc_lv<32> estimate_ISI::ap_const_lv32_3 = "11";
const sc_lv<32> estimate_ISI::ap_const_lv32_4 = "100";
const sc_lv<32> estimate_ISI::ap_const_lv32_5 = "101";
const sc_lv<32> estimate_ISI::ap_const_lv32_6 = "110";
const sc_lv<7> estimate_ISI::ap_const_lv7_0 = "0000000";
const sc_lv<32> estimate_ISI::ap_const_lv32_2 = "10";
const sc_lv<7> estimate_ISI::ap_const_lv7_1 = "1";
const sc_lv<1> estimate_ISI::ap_const_lv1_1 = "1";
const sc_lv<7> estimate_ISI::ap_const_lv7_4A = "1001010";
const sc_lv<7> estimate_ISI::ap_const_lv7_7F = "1111111";
const sc_lv<5> estimate_ISI::ap_const_lv5_0 = "00000";
const sc_lv<14> estimate_ISI::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> estimate_ISI::ap_const_lv32_10 = "10000";
const bool estimate_ISI::ap_const_boolean_1 = true;

estimate_ISI::estimate_ISI(sc_module_name name) : sc_module(name), mVcdFile(0) {
    estimate_ISI_mul_mul_17s_22s_39_1_1_U1 = new estimate_ISI_mul_mul_17s_22s_39_1_1<1,1,17,22,39>("estimate_ISI_mul_mul_17s_22s_39_1_1_U1");
    estimate_ISI_mul_mul_17s_22s_39_1_1_U1->din0(p_Val2_2_reg_315);
    estimate_ISI_mul_mul_17s_22s_39_1_1_U1->din1(r_V_fu_206_p2);
    estimate_ISI_mul_mul_17s_22s_39_1_1_U1->dout(r_V_2_fu_273_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ISI_V_address0);
    sensitive << ( zext_ln8_reg_287 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln11_fu_178_p1 );

    SC_METHOD(thread_ISI_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ISI_V_addr_2_reg_310 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln11_1_fu_183_p1 );

    SC_METHOD(thread_ISI_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ISI_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ISI_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln703_fu_151_p1 );
    sensitive << ( trunc_ln703_1_fu_155_p1 );

    SC_METHOD(thread_ISI_V_d1);
    sensitive << ( p_Val2_2_reg_315 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( r_V_4_fu_257_p1 );

    SC_METHOD(thread_ISI_V_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ISI_V_we1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln1494_fu_243_p2 );

    SC_METHOD(thread_add_ln11_fu_172_p2);
    sensitive << ( j_0_reg_117 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln10_fu_166_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln10_fu_166_p2 );

    SC_METHOD(thread_i_fu_135_p2);
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_icmp_ln10_fu_166_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_117 );

    SC_METHOD(thread_icmp_ln1494_fu_243_p2);
    sensitive << ( r_V_2_reg_330 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln1494_fu_239_p1 );

    SC_METHOD(thread_icmp_ln7_fu_129_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_j_fu_267_p2);
    sensitive << ( j_0_reg_117 );

    SC_METHOD(thread_lhs_V_fu_219_p1);
    sensitive << ( p_Val2_2_reg_315 );

    SC_METHOD(thread_r_V_4_fu_257_p1);
    sensitive << ( trunc_ln1_fu_248_p4 );

    SC_METHOD(thread_r_V_fu_206_p2);
    sensitive << ( shl_ln_fu_188_p3 );
    sensitive << ( sext_ln1118_fu_202_p1 );

    SC_METHOD(thread_ret_V_fu_225_p2);
    sensitive << ( lhs_V_fu_219_p1 );
    sensitive << ( rhs_V_fu_222_p1 );

    SC_METHOD(thread_rhs_V_fu_222_p1);
    sensitive << ( p_Val2_3_reg_322 );

    SC_METHOD(thread_sext_ln1118_fu_202_p1);
    sensitive << ( shl_ln1118_1_fu_195_p3 );

    SC_METHOD(thread_sext_ln1494_fu_239_p1);
    sensitive << ( shl_ln1_fu_231_p3 );

    SC_METHOD(thread_shl_ln1118_1_fu_195_p3);
    sensitive << ( p_Val2_3_reg_322 );

    SC_METHOD(thread_shl_ln1_fu_231_p3);
    sensitive << ( ret_V_fu_225_p2 );

    SC_METHOD(thread_shl_ln_fu_188_p3);
    sensitive << ( p_Val2_3_reg_322 );

    SC_METHOD(thread_spksTime_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln8_1_fu_146_p1 );

    SC_METHOD(thread_spksTime_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln8_fu_141_p1 );

    SC_METHOD(thread_spksTime_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_spksTime_V_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_trunc_ln1_fu_248_p4);
    sensitive << ( p_Val2_3_reg_322 );

    SC_METHOD(thread_trunc_ln703_1_fu_155_p1);
    sensitive << ( spksTime_V_q1 );

    SC_METHOD(thread_trunc_ln703_fu_151_p1);
    sensitive << ( spksTime_V_q0 );

    SC_METHOD(thread_zext_ln11_1_fu_183_p1);
    sensitive << ( j_0_reg_117 );

    SC_METHOD(thread_zext_ln11_fu_178_p1);
    sensitive << ( add_ln11_fu_172_p2 );

    SC_METHOD(thread_zext_ln8_1_fu_146_p1);
    sensitive << ( i_fu_135_p2 );

    SC_METHOD(thread_zext_ln8_fu_141_p1);
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln7_fu_129_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln10_fu_166_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "estimate_ISI_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, spksTime_V_address0, "(port)spksTime_V_address0");
    sc_trace(mVcdFile, spksTime_V_ce0, "(port)spksTime_V_ce0");
    sc_trace(mVcdFile, spksTime_V_q0, "(port)spksTime_V_q0");
    sc_trace(mVcdFile, spksTime_V_address1, "(port)spksTime_V_address1");
    sc_trace(mVcdFile, spksTime_V_ce1, "(port)spksTime_V_ce1");
    sc_trace(mVcdFile, spksTime_V_q1, "(port)spksTime_V_q1");
    sc_trace(mVcdFile, ISI_V_address0, "(port)ISI_V_address0");
    sc_trace(mVcdFile, ISI_V_ce0, "(port)ISI_V_ce0");
    sc_trace(mVcdFile, ISI_V_we0, "(port)ISI_V_we0");
    sc_trace(mVcdFile, ISI_V_d0, "(port)ISI_V_d0");
    sc_trace(mVcdFile, ISI_V_q0, "(port)ISI_V_q0");
    sc_trace(mVcdFile, ISI_V_address1, "(port)ISI_V_address1");
    sc_trace(mVcdFile, ISI_V_ce1, "(port)ISI_V_ce1");
    sc_trace(mVcdFile, ISI_V_we1, "(port)ISI_V_we1");
    sc_trace(mVcdFile, ISI_V_d1, "(port)ISI_V_d1");
    sc_trace(mVcdFile, ISI_V_q1, "(port)ISI_V_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_135_p2, "i_fu_135_p2");
    sc_trace(mVcdFile, i_reg_282, "i_reg_282");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln8_fu_141_p1, "zext_ln8_fu_141_p1");
    sc_trace(mVcdFile, zext_ln8_reg_287, "zext_ln8_reg_287");
    sc_trace(mVcdFile, icmp_ln7_fu_129_p2, "icmp_ln7_fu_129_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln10_fu_166_p2, "icmp_ln10_fu_166_p2");
    sc_trace(mVcdFile, ISI_V_addr_2_reg_310, "ISI_V_addr_2_reg_310");
    sc_trace(mVcdFile, p_Val2_2_reg_315, "p_Val2_2_reg_315");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_Val2_3_reg_322, "p_Val2_3_reg_322");
    sc_trace(mVcdFile, r_V_2_fu_273_p2, "r_V_2_fu_273_p2");
    sc_trace(mVcdFile, r_V_2_reg_330, "r_V_2_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, j_fu_267_p2, "j_fu_267_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_0_reg_106, "i_0_reg_106");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_0_reg_117, "j_0_reg_117");
    sc_trace(mVcdFile, zext_ln8_1_fu_146_p1, "zext_ln8_1_fu_146_p1");
    sc_trace(mVcdFile, zext_ln11_fu_178_p1, "zext_ln11_fu_178_p1");
    sc_trace(mVcdFile, zext_ln11_1_fu_183_p1, "zext_ln11_1_fu_183_p1");
    sc_trace(mVcdFile, icmp_ln1494_fu_243_p2, "icmp_ln1494_fu_243_p2");
    sc_trace(mVcdFile, trunc_ln703_fu_151_p1, "trunc_ln703_fu_151_p1");
    sc_trace(mVcdFile, trunc_ln703_1_fu_155_p1, "trunc_ln703_1_fu_155_p1");
    sc_trace(mVcdFile, add_ln11_fu_172_p2, "add_ln11_fu_172_p2");
    sc_trace(mVcdFile, shl_ln1118_1_fu_195_p3, "shl_ln1118_1_fu_195_p3");
    sc_trace(mVcdFile, shl_ln_fu_188_p3, "shl_ln_fu_188_p3");
    sc_trace(mVcdFile, sext_ln1118_fu_202_p1, "sext_ln1118_fu_202_p1");
    sc_trace(mVcdFile, r_V_fu_206_p2, "r_V_fu_206_p2");
    sc_trace(mVcdFile, lhs_V_fu_219_p1, "lhs_V_fu_219_p1");
    sc_trace(mVcdFile, rhs_V_fu_222_p1, "rhs_V_fu_222_p1");
    sc_trace(mVcdFile, ret_V_fu_225_p2, "ret_V_fu_225_p2");
    sc_trace(mVcdFile, shl_ln1_fu_231_p3, "shl_ln1_fu_231_p3");
    sc_trace(mVcdFile, sext_ln1494_fu_239_p1, "sext_ln1494_fu_239_p1");
    sc_trace(mVcdFile, trunc_ln1_fu_248_p4, "trunc_ln1_fu_248_p4");
    sc_trace(mVcdFile, r_V_4_fu_257_p1, "r_V_4_fu_257_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("estimate_ISI.hdltvin.dat");
    mHdltvoutHandle.open("estimate_ISI.hdltvout.dat");
}

estimate_ISI::~estimate_ISI() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete estimate_ISI_mul_mul_17s_22s_39_1_1_U1;
}

void estimate_ISI::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_106 = i_reg_282.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_106 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_fu_129_p2.read(), ap_const_lv1_1))) {
        j_0_reg_117 = ap_const_lv7_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_0_reg_117 = j_fu_267_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln10_fu_166_p2.read()))) {
        ISI_V_addr_2_reg_310 =  (sc_lv<7>) (zext_ln11_1_fu_183_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_282 = i_fu_135_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        p_Val2_2_reg_315 = ISI_V_q0.read();
        p_Val2_3_reg_322 = ISI_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_V_2_reg_330 = r_V_2_fu_273_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln7_fu_129_p2.read(), ap_const_lv1_0))) {
        zext_ln8_reg_287 = zext_ln8_fu_141_p1.read();
    }
}

void estimate_ISI::thread_ISI_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ISI_V_address0 =  (sc_lv<7>) (zext_ln11_fu_178_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ISI_V_address0 =  (sc_lv<7>) (zext_ln8_reg_287.read());
    } else {
        ISI_V_address0 = "XXXXXXX";
    }
}

void estimate_ISI::thread_ISI_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISI_V_address1 = ISI_V_addr_2_reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ISI_V_address1 =  (sc_lv<7>) (zext_ln11_1_fu_183_p1.read());
    } else {
        ISI_V_address1 = "XXXXXXX";
    }
}

void estimate_ISI::thread_ISI_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        ISI_V_ce0 = ap_const_logic_1;
    } else {
        ISI_V_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ISI_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ISI_V_ce1 = ap_const_logic_1;
    } else {
        ISI_V_ce1 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ISI_V_d0() {
    ISI_V_d0 = (!trunc_ln703_fu_151_p1.read().is_01() || !trunc_ln703_1_fu_155_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln703_fu_151_p1.read()) - sc_biguint<17>(trunc_ln703_1_fu_155_p1.read()));
}

void estimate_ISI::thread_ISI_V_d1() {
    ISI_V_d1 = (!p_Val2_2_reg_315.read().is_01() || !r_V_4_fu_257_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(p_Val2_2_reg_315.read()) - sc_bigint<17>(r_V_4_fu_257_p1.read()));
}

void estimate_ISI::thread_ISI_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ISI_V_we0 = ap_const_logic_1;
    } else {
        ISI_V_we0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ISI_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln1494_fu_243_p2.read()))) {
        ISI_V_we1 = ap_const_logic_1;
    } else {
        ISI_V_we1 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_add_ln11_fu_172_p2() {
    add_ln11_fu_172_p2 = (!j_0_reg_117.read().is_01() || !ap_const_lv7_7F.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_117.read()) + sc_bigint<7>(ap_const_lv7_7F));
}

void estimate_ISI::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void estimate_ISI::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void estimate_ISI::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void estimate_ISI::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void estimate_ISI::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void estimate_ISI::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void estimate_ISI::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void estimate_ISI::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_166_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_166_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void estimate_ISI::thread_i_fu_135_p2() {
    i_fu_135_p2 = (!i_0_reg_106.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_106.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_ISI::thread_icmp_ln10_fu_166_p2() {
    icmp_ln10_fu_166_p2 = (!j_0_reg_117.read().is_01() || !ap_const_lv7_4A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_117.read() == ap_const_lv7_4A);
}

void estimate_ISI::thread_icmp_ln1494_fu_243_p2() {
    icmp_ln1494_fu_243_p2 = (!sext_ln1494_fu_239_p1.read().is_01() || !r_V_2_reg_330.read().is_01())? sc_lv<1>(): (sc_bigint<39>(sext_ln1494_fu_239_p1.read()) > sc_bigint<39>(r_V_2_reg_330.read()));
}

void estimate_ISI::thread_icmp_ln7_fu_129_p2() {
    icmp_ln7_fu_129_p2 = (!i_0_reg_106.read().is_01() || !ap_const_lv7_4A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_106.read() == ap_const_lv7_4A);
}

void estimate_ISI::thread_j_fu_267_p2() {
    j_fu_267_p2 = (!j_0_reg_117.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_117.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_ISI::thread_lhs_V_fu_219_p1() {
    lhs_V_fu_219_p1 = esl_sext<18,17>(p_Val2_2_reg_315.read());
}

void estimate_ISI::thread_r_V_4_fu_257_p1() {
    r_V_4_fu_257_p1 = esl_sext<17,15>(trunc_ln1_fu_248_p4.read());
}

void estimate_ISI::thread_r_V_fu_206_p2() {
    r_V_fu_206_p2 = (!shl_ln_fu_188_p3.read().is_01() || !sext_ln1118_fu_202_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(shl_ln_fu_188_p3.read()) - sc_bigint<22>(sext_ln1118_fu_202_p1.read()));
}

void estimate_ISI::thread_ret_V_fu_225_p2() {
    ret_V_fu_225_p2 = (!lhs_V_fu_219_p1.read().is_01() || !rhs_V_fu_222_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(lhs_V_fu_219_p1.read()) - sc_bigint<18>(rhs_V_fu_222_p1.read()));
}

void estimate_ISI::thread_rhs_V_fu_222_p1() {
    rhs_V_fu_222_p1 = esl_sext<18,17>(p_Val2_3_reg_322.read());
}

void estimate_ISI::thread_sext_ln1118_fu_202_p1() {
    sext_ln1118_fu_202_p1 = esl_sext<22,18>(shl_ln1118_1_fu_195_p3.read());
}

void estimate_ISI::thread_sext_ln1494_fu_239_p1() {
    sext_ln1494_fu_239_p1 = esl_sext<39,32>(shl_ln1_fu_231_p3.read());
}

void estimate_ISI::thread_shl_ln1118_1_fu_195_p3() {
    shl_ln1118_1_fu_195_p3 = esl_concat<17,1>(p_Val2_3_reg_322.read(), ap_const_lv1_0);
}

void estimate_ISI::thread_shl_ln1_fu_231_p3() {
    shl_ln1_fu_231_p3 = esl_concat<18,14>(ret_V_fu_225_p2.read(), ap_const_lv14_0);
}

void estimate_ISI::thread_shl_ln_fu_188_p3() {
    shl_ln_fu_188_p3 = esl_concat<17,5>(p_Val2_3_reg_322.read(), ap_const_lv5_0);
}

void estimate_ISI::thread_spksTime_V_address0() {
    spksTime_V_address0 =  (sc_lv<7>) (zext_ln8_1_fu_146_p1.read());
}

void estimate_ISI::thread_spksTime_V_address1() {
    spksTime_V_address1 =  (sc_lv<7>) (zext_ln8_fu_141_p1.read());
}

void estimate_ISI::thread_spksTime_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        spksTime_V_ce0 = ap_const_logic_1;
    } else {
        spksTime_V_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_spksTime_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        spksTime_V_ce1 = ap_const_logic_1;
    } else {
        spksTime_V_ce1 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_trunc_ln1_fu_248_p4() {
    trunc_ln1_fu_248_p4 = p_Val2_3_reg_322.read().range(16, 2);
}

void estimate_ISI::thread_trunc_ln703_1_fu_155_p1() {
    trunc_ln703_1_fu_155_p1 = spksTime_V_q1.read().range(17-1, 0);
}

void estimate_ISI::thread_trunc_ln703_fu_151_p1() {
    trunc_ln703_fu_151_p1 = spksTime_V_q0.read().range(17-1, 0);
}

void estimate_ISI::thread_zext_ln11_1_fu_183_p1() {
    zext_ln11_1_fu_183_p1 = esl_zext<64,7>(j_0_reg_117.read());
}

void estimate_ISI::thread_zext_ln11_fu_178_p1() {
    zext_ln11_fu_178_p1 = esl_zext<64,7>(add_ln11_fu_172_p2.read());
}

void estimate_ISI::thread_zext_ln8_1_fu_146_p1() {
    zext_ln8_1_fu_146_p1 = esl_zext<64,7>(i_fu_135_p2.read());
}

void estimate_ISI::thread_zext_ln8_fu_141_p1() {
    zext_ln8_fu_141_p1 = esl_zext<64,7>(i_0_reg_106.read());
}

void estimate_ISI::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln7_fu_129_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_166_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

void estimate_ISI::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_V_address0\" :  \"" << spksTime_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_V_ce0\" :  \"" << spksTime_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"spksTime_V_q0\" :  \"" << spksTime_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_V_address1\" :  \"" << spksTime_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_V_ce1\" :  \"" << spksTime_V_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"spksTime_V_q1\" :  \"" << spksTime_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_address0\" :  \"" << ISI_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_ce0\" :  \"" << ISI_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_we0\" :  \"" << ISI_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_d0\" :  \"" << ISI_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ISI_V_q0\" :  \"" << ISI_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_address1\" :  \"" << ISI_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_ce1\" :  \"" << ISI_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_we1\" :  \"" << ISI_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ISI_V_d1\" :  \"" << ISI_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ISI_V_q1\" :  \"" << ISI_V_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

