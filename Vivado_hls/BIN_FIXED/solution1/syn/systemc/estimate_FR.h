// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_FR_HH_
#define _estimate_FR_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "estimate_FR_mul_80ns_82ns_161_5_1.h"
#include "estimate_FR_mul_mul_8ns_14ns_22_1_1.h"

namespace ap_rtl {

struct estimate_FR : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > spksTime_V_address0;
    sc_out< sc_logic > spksTime_V_ce0;
    sc_in< sc_lv<12> > spksTime_V_q0;
    sc_out< sc_lv<8> > FR_V_address0;
    sc_out< sc_logic > FR_V_ce0;
    sc_out< sc_logic > FR_V_we0;
    sc_out< sc_lv<8> > FR_V_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    estimate_FR(sc_module_name name);
    SC_HAS_PROCESS(estimate_FR);

    ~estimate_FR();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    estimate_FR_mul_80ns_82ns_161_5_1<1,5,80,82,161>* estimate_FR_mul_80ns_82ns_161_5_1_U1;
    estimate_FR_mul_mul_8ns_14ns_22_1_1<1,1,8,14,22>* estimate_FR_mul_mul_8ns_14ns_22_1_1_U2;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<22> > zext_ln8_fu_126_p1;
    sc_signal< sc_lv<22> > zext_ln8_reg_248;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<21> > add_ln8_fu_130_p2;
    sc_signal< sc_lv<21> > add_ln8_reg_253;
    sc_signal< sc_lv<8> > tmp_V_2_fu_142_p2;
    sc_signal< sc_lv<8> > tmp_V_2_reg_261;
    sc_signal< sc_lv<22> > mul_ln1118_fu_242_p2;
    sc_signal< sc_lv<22> > mul_ln1118_reg_266;
    sc_signal< sc_lv<1> > icmp_ln8_fu_136_p2;
    sc_signal< sc_lv<7> > j_fu_158_p2;
    sc_signal< sc_lv<7> > j_reg_274;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln9_fu_152_p2;
    sc_signal< sc_lv<64> > select_ln1496_fu_219_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > trunc_ln_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > tmp_V_reg_80;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<21> > r_V_reg_92;
    sc_signal< sc_lv<64> > t_V_2_reg_103;
    sc_signal< sc_lv<7> > j_0_reg_115;
    sc_signal< sc_lv<64> > zext_ln10_fu_164_p1;
    sc_signal< sc_lv<64> > zext_ln14_fu_237_p1;
    sc_signal< sc_lv<80> > t_V_fu_169_p3;
    sc_signal< sc_lv<80> > grp_fu_181_p0;
    sc_signal< sc_lv<82> > grp_fu_181_p1;
    sc_signal< sc_lv<22> > shl_ln_fu_187_p3;
    sc_signal< sc_lv<1> > icmp_ln1497_fu_200_p2;
    sc_signal< sc_lv<64> > count_V_fu_205_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_195_p2;
    sc_signal< sc_lv<64> > select_ln10_fu_211_p3;
    sc_signal< sc_lv<161> > grp_fu_181_p2;
    sc_signal< sc_lv<8> > mul_ln1118_fu_242_p0;
    sc_signal< sc_lv<14> > mul_ln1118_fu_242_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<161> > grp_fu_181_p00;
    sc_signal< sc_lv<22> > mul_ln1118_fu_242_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<21> ap_const_lv21_1999;
    static const sc_lv<8> ap_const_lv8_C8;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<7> ap_const_lv7_4B;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<161> ap_const_lv161_lc_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_5D;
    static const sc_lv<32> ap_const_lv32_64;
    static const sc_lv<22> ap_const_lv22_1999;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_FR_V_address0();
    void thread_FR_V_ce0();
    void thread_FR_V_d0();
    void thread_FR_V_we0();
    void thread_add_ln8_fu_130_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_count_V_fu_205_p2();
    void thread_grp_fu_181_p0();
    void thread_grp_fu_181_p00();
    void thread_grp_fu_181_p1();
    void thread_icmp_ln1496_fu_195_p2();
    void thread_icmp_ln1497_fu_200_p2();
    void thread_icmp_ln8_fu_136_p2();
    void thread_icmp_ln9_fu_152_p2();
    void thread_j_fu_158_p2();
    void thread_mul_ln1118_fu_242_p0();
    void thread_mul_ln1118_fu_242_p00();
    void thread_mul_ln1118_fu_242_p1();
    void thread_select_ln10_fu_211_p3();
    void thread_select_ln1496_fu_219_p3();
    void thread_shl_ln_fu_187_p3();
    void thread_spksTime_V_address0();
    void thread_spksTime_V_ce0();
    void thread_t_V_fu_169_p3();
    void thread_tmp_V_2_fu_142_p2();
    void thread_zext_ln10_fu_164_p1();
    void thread_zext_ln14_fu_237_p1();
    void thread_zext_ln8_fu_126_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
