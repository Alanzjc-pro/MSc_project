// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _estimate_FR_HH_
#define _estimate_FR_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "estimate_FR_c_V.h"

namespace ap_rtl {

struct estimate_FR : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > spksTime_V_address0;
    sc_out< sc_logic > spksTime_V_ce0;
    sc_in< sc_lv<19> > spksTime_V_q0;
    sc_out< sc_lv<7> > elements_V_address0;
    sc_out< sc_logic > elements_V_ce0;
    sc_in< sc_lv<8> > elements_V_q0;
    sc_out< sc_lv<7> > FR_V_address0;
    sc_out< sc_logic > FR_V_ce0;
    sc_out< sc_logic > FR_V_we0;
    sc_out< sc_lv<8> > FR_V_d0;


    // Module declarations
    estimate_FR(sc_module_name name);
    SC_HAS_PROCESS(estimate_FR);

    ~estimate_FR();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    estimate_FR_c_V* c_V_U;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_fu_173_p2;
    sc_signal< sc_lv<7> > i_reg_271;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln10_fu_179_p1;
    sc_signal< sc_lv<64> > zext_ln10_reg_276;
    sc_signal< sc_lv<1> > icmp_ln9_fu_167_p2;
    sc_signal< sc_lv<13> > add_ln1498_fu_208_p2;
    sc_signal< sc_lv<13> > add_ln1498_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > c_V_addr_1_reg_293;
    sc_signal< sc_lv<8> > elements_V_load_reg_298;
    sc_signal< sc_lv<8> > j_fu_219_p2;
    sc_signal< sc_lv<8> > j_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln10_fu_214_p2;
    sc_signal< sc_lv<7> > c_V_address0;
    sc_signal< sc_logic > c_V_ce0;
    sc_signal< sc_logic > c_V_we0;
    sc_signal< sc_lv<8> > c_V_d0;
    sc_signal< sc_lv<8> > c_V_q0;
    sc_signal< sc_lv<7> > i_0_reg_139;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > i_op_assign_reg_151;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln1498_3_fu_235_p1;
    sc_signal< sc_lv<1> > nospikes_0_load_load_fu_251_p1;
    sc_signal< sc_lv<7> > FR_V_addr_gep_fu_130_p3;
    sc_signal< sc_lv<1> > nospikes_0_fu_62;
    sc_signal< sc_lv<1> > icmp_ln1498_fu_240_p2;
    sc_signal< sc_lv<8> > r_V_fu_254_p2;
    sc_signal< sc_lv<12> > tmp_2_fu_184_p3;
    sc_signal< sc_lv<10> > tmp_3_fu_196_p3;
    sc_signal< sc_lv<13> > zext_ln1498_1_fu_204_p1;
    sc_signal< sc_lv<13> > zext_ln1498_fu_192_p1;
    sc_signal< sc_lv<13> > zext_ln1498_2_fu_226_p1;
    sc_signal< sc_lv<13> > add_ln1498_1_fu_230_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<8> ap_const_lv8_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_FR_V_addr_gep_fu_130_p3();
    void thread_FR_V_address0();
    void thread_FR_V_ce0();
    void thread_FR_V_d0();
    void thread_FR_V_we0();
    void thread_add_ln1498_1_fu_230_p2();
    void thread_add_ln1498_fu_208_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V_address0();
    void thread_c_V_ce0();
    void thread_c_V_d0();
    void thread_c_V_we0();
    void thread_elements_V_address0();
    void thread_elements_V_ce0();
    void thread_i_fu_173_p2();
    void thread_icmp_ln10_fu_214_p2();
    void thread_icmp_ln1498_fu_240_p2();
    void thread_icmp_ln9_fu_167_p2();
    void thread_j_fu_219_p2();
    void thread_nospikes_0_load_load_fu_251_p1();
    void thread_r_V_fu_254_p2();
    void thread_spksTime_V_address0();
    void thread_spksTime_V_ce0();
    void thread_tmp_2_fu_184_p3();
    void thread_tmp_3_fu_196_p3();
    void thread_zext_ln10_fu_179_p1();
    void thread_zext_ln1498_1_fu_204_p1();
    void thread_zext_ln1498_2_fu_226_p1();
    void thread_zext_ln1498_3_fu_235_p1();
    void thread_zext_ln1498_fu_192_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
