-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity estimate_FR_2 is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 10;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of estimate_FR_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "estimate_FR_2,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.469000,HLS_SYN_LAT=81,HLS_SYN_TPT=none,HLS_SYN_MEM=28,HLS_SYN_DSP=0,HLS_SYN_FF=1287,HLS_SYN_LUT=2053,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inputs_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_0_ce0 : STD_LOGIC;
    signal inputs_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_1_ce0 : STD_LOGIC;
    signal inputs_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_2_ce0 : STD_LOGIC;
    signal inputs_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_3_ce0 : STD_LOGIC;
    signal inputs_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal counts_0_ce0 : STD_LOGIC;
    signal counts_0_we0 : STD_LOGIC;
    signal counts_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal counts_1_ce0 : STD_LOGIC;
    signal counts_1_we0 : STD_LOGIC;
    signal counts_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal counts_2_ce0 : STD_LOGIC;
    signal counts_2_we0 : STD_LOGIC;
    signal counts_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal counts_3_ce0 : STD_LOGIC;
    signal counts_3_we0 : STD_LOGIC;
    signal counts_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal counts_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputs_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal outputs_0_ce0 : STD_LOGIC;
    signal outputs_0_we0 : STD_LOGIC;
    signal outputs_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputs_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal outputs_1_ce0 : STD_LOGIC;
    signal outputs_1_we0 : STD_LOGIC;
    signal outputs_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputs_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal outputs_2_ce0 : STD_LOGIC;
    signal outputs_2_we0 : STD_LOGIC;
    signal outputs_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputs_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal outputs_3_ce0 : STD_LOGIC;
    signal outputs_3_we0 : STD_LOGIC;
    signal outputs_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_0_reg_882 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_090_0217_0_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_0_reg_906 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_0_0_reg_917 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln12_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_reg_1637 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln301_6_fu_1051_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln301_6_reg_1661 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_ln321_1_fu_1055_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln321_1_reg_1666 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln301_7_reg_1671 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln301_8_reg_1676 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln302_2_reg_1681 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln301_9_fu_1091_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln301_9_reg_1686 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln321_2_fu_1095_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln321_2_reg_1691 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln301_s_reg_1696 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln301_10_reg_1701 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln302_3_reg_1706 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln12_fu_1131_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln12_reg_1711 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln19_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_reg_1716 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln19_reg_1716_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln20_fu_1167_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln20_reg_1720 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln20_reg_1720_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln19_fu_1175_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln19_reg_1756 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln301_11_fu_1181_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_11_reg_1761 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state7_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal tmp_10_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1765_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_0_V_addr_5_reg_1769 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln301_12_fu_1193_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_12_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1778 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1778_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_1_V_addr_6_reg_1782 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln301_13_fu_1205_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_13_reg_1787 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1791 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1791_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_2_V_addr_7_reg_1795 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln301_14_fu_1217_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_14_reg_1800 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1804 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1804_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_3_V_addr_8_reg_1809 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_0_V_addr_6_reg_1814 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_1_V_addr_7_reg_1819 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_2_V_addr_8_reg_1824 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_3_V_addr_9_reg_1829 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln31_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1834 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state12_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal zext_ln36_1_fu_1369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_1_reg_1858 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_1_reg_1858_pp2_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state13_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state15_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal add_ln31_fu_1535_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln31_reg_2010 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal FR_0_V_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_0_V_load_2_reg_2015 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal FR_1_V_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_1_V_load_2_reg_2020 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_2_V_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_2_V_load_2_reg_2025 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_3_V_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_3_V_load_2_reg_2030 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_0_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_0_V_load_3_reg_2035 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_1_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_1_V_load_3_reg_2040 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_2_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_2_V_load_3_reg_2045 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_3_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_3_V_load_3_reg_2050 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state12 : STD_LOGIC;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal cnt_0_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_0_V_ce0 : STD_LOGIC;
    signal cnt_0_V_we0 : STD_LOGIC;
    signal cnt_0_V_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_0_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_0_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_0_V_ce1 : STD_LOGIC;
    signal cnt_0_V_we1 : STD_LOGIC;
    signal cnt_0_V_d1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_0_V_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_1_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_1_V_ce0 : STD_LOGIC;
    signal cnt_1_V_we0 : STD_LOGIC;
    signal cnt_1_V_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_1_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_1_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_1_V_ce1 : STD_LOGIC;
    signal cnt_1_V_we1 : STD_LOGIC;
    signal cnt_1_V_d1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_1_V_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_2_V_ce0 : STD_LOGIC;
    signal cnt_2_V_we0 : STD_LOGIC;
    signal cnt_2_V_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_2_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_2_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_2_V_ce1 : STD_LOGIC;
    signal cnt_2_V_we1 : STD_LOGIC;
    signal cnt_2_V_d1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_2_V_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_3_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_3_V_ce0 : STD_LOGIC;
    signal cnt_3_V_we0 : STD_LOGIC;
    signal cnt_3_V_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_3_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_3_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnt_3_V_ce1 : STD_LOGIC;
    signal cnt_3_V_we1 : STD_LOGIC;
    signal cnt_3_V_d1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cnt_3_V_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal FR_0_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_0_V_ce0 : STD_LOGIC;
    signal FR_0_V_we0 : STD_LOGIC;
    signal FR_0_V_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_0_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_0_V_ce1 : STD_LOGIC;
    signal FR_1_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_1_V_ce0 : STD_LOGIC;
    signal FR_1_V_we0 : STD_LOGIC;
    signal FR_1_V_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_1_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_1_V_ce1 : STD_LOGIC;
    signal FR_2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_2_V_ce0 : STD_LOGIC;
    signal FR_2_V_we0 : STD_LOGIC;
    signal FR_2_V_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_2_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_2_V_ce1 : STD_LOGIC;
    signal FR_3_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_3_V_ce0 : STD_LOGIC;
    signal FR_3_V_we0 : STD_LOGIC;
    signal FR_3_V_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal FR_3_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal FR_3_V_ce1 : STD_LOGIC;
    signal ap_phi_mux_j_0_0_phi_fu_886_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_0_0_phi_fu_910_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_k_0_0_phi_fu_921_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln13_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln321_1_fu_1010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_2_fu_1137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_3_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal zext_ln555_fu_1347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln555_1_fu_1383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal zext_ln555_2_fu_1505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln555_3_fu_1523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln301_fu_953_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln301_3_fu_999_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln700_fu_1229_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln700_1_fu_1236_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln700_2_fu_1243_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln700_3_fu_1250_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln42_fu_1442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln42_1_fu_1494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln42_2_fu_1607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln42_3_fu_1632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_935_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln321_fu_1004_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln1_fu_1157_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1503_fu_1257_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln209_fu_1263_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln209_1_fu_1267_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1503_1_fu_1278_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln209_2_fu_1284_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln209_3_fu_1288_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1503_2_fu_1299_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln209_4_fu_1305_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln209_5_fu_1309_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1503_3_fu_1320_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln209_6_fu_1326_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln209_7_fu_1330_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln2_fu_1359_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln555_fu_1377_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_1395_p8 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln555_6_fu_1426_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_5_fu_1422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_4_fu_1418_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1430_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_1447_p8 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln555_9_fu_1478_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_8_fu_1474_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_7_fu_1470_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1482_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal or_ln555_1_fu_1499_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln555_2_fu_1517_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_1541_p8 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_6_fu_1564_p8 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln555_12_fu_1593_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_11_fu_1590_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_10_fu_1587_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1596_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln555_15_fu_1618_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_14_fu_1615_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln555_13_fu_1612_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1621_p5 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component estimate_FR_2_cnt_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (5 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component estimate_FR_2_FR_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component estimate_FR_2_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        inputs_0_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_0_ce0 : IN STD_LOGIC;
        inputs_0_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_1_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_1_ce0 : IN STD_LOGIC;
        inputs_1_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_2_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_2_ce0 : IN STD_LOGIC;
        inputs_2_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_3_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_3_ce0 : IN STD_LOGIC;
        inputs_3_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        counts_0_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        counts_0_ce0 : IN STD_LOGIC;
        counts_0_we0 : IN STD_LOGIC;
        counts_0_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        counts_0_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        counts_1_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        counts_1_ce0 : IN STD_LOGIC;
        counts_1_we0 : IN STD_LOGIC;
        counts_1_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        counts_1_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        counts_2_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        counts_2_ce0 : IN STD_LOGIC;
        counts_2_we0 : IN STD_LOGIC;
        counts_2_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        counts_2_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        counts_3_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        counts_3_ce0 : IN STD_LOGIC;
        counts_3_we0 : IN STD_LOGIC;
        counts_3_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        counts_3_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        outputs_0_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        outputs_0_ce0 : IN STD_LOGIC;
        outputs_0_we0 : IN STD_LOGIC;
        outputs_0_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outputs_1_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        outputs_1_ce0 : IN STD_LOGIC;
        outputs_1_we0 : IN STD_LOGIC;
        outputs_1_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outputs_2_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        outputs_2_ce0 : IN STD_LOGIC;
        outputs_2_we0 : IN STD_LOGIC;
        outputs_2_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outputs_3_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        outputs_3_ce0 : IN STD_LOGIC;
        outputs_3_we0 : IN STD_LOGIC;
        outputs_3_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    estimate_FR_2_AXILiteS_s_axi_U : component estimate_FR_2_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        inputs_0_address0 => inputs_0_address0,
        inputs_0_ce0 => inputs_0_ce0,
        inputs_0_q0 => inputs_0_q0,
        inputs_1_address0 => inputs_1_address0,
        inputs_1_ce0 => inputs_1_ce0,
        inputs_1_q0 => inputs_1_q0,
        inputs_2_address0 => inputs_2_address0,
        inputs_2_ce0 => inputs_2_ce0,
        inputs_2_q0 => inputs_2_q0,
        inputs_3_address0 => inputs_3_address0,
        inputs_3_ce0 => inputs_3_ce0,
        inputs_3_q0 => inputs_3_q0,
        counts_0_address0 => counts_0_address0,
        counts_0_ce0 => counts_0_ce0,
        counts_0_we0 => counts_0_we0,
        counts_0_d0 => counts_0_d0,
        counts_0_q0 => counts_0_q0,
        counts_1_address0 => counts_1_address0,
        counts_1_ce0 => counts_1_ce0,
        counts_1_we0 => counts_1_we0,
        counts_1_d0 => counts_1_d0,
        counts_1_q0 => counts_1_q0,
        counts_2_address0 => counts_2_address0,
        counts_2_ce0 => counts_2_ce0,
        counts_2_we0 => counts_2_we0,
        counts_2_d0 => counts_2_d0,
        counts_2_q0 => counts_2_q0,
        counts_3_address0 => counts_3_address0,
        counts_3_ce0 => counts_3_ce0,
        counts_3_we0 => counts_3_we0,
        counts_3_d0 => counts_3_d0,
        counts_3_q0 => counts_3_q0,
        outputs_0_address0 => outputs_0_address0,
        outputs_0_ce0 => outputs_0_ce0,
        outputs_0_we0 => outputs_0_we0,
        outputs_0_d0 => outputs_0_d0,
        outputs_1_address0 => outputs_1_address0,
        outputs_1_ce0 => outputs_1_ce0,
        outputs_1_we0 => outputs_1_we0,
        outputs_1_d0 => outputs_1_d0,
        outputs_2_address0 => outputs_2_address0,
        outputs_2_ce0 => outputs_2_ce0,
        outputs_2_we0 => outputs_2_we0,
        outputs_2_d0 => outputs_2_d0,
        outputs_3_address0 => outputs_3_address0,
        outputs_3_ce0 => outputs_3_ce0,
        outputs_3_we0 => outputs_3_we0,
        outputs_3_d0 => outputs_3_d0);

    cnt_0_V_U : component estimate_FR_2_cnt_0_V
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cnt_0_V_address0,
        ce0 => cnt_0_V_ce0,
        we0 => cnt_0_V_we0,
        d0 => cnt_0_V_d0,
        q0 => cnt_0_V_q0,
        address1 => cnt_0_V_address1,
        ce1 => cnt_0_V_ce1,
        we1 => cnt_0_V_we1,
        d1 => cnt_0_V_d1,
        q1 => cnt_0_V_q1);

    cnt_1_V_U : component estimate_FR_2_cnt_0_V
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cnt_1_V_address0,
        ce0 => cnt_1_V_ce0,
        we0 => cnt_1_V_we0,
        d0 => cnt_1_V_d0,
        q0 => cnt_1_V_q0,
        address1 => cnt_1_V_address1,
        ce1 => cnt_1_V_ce1,
        we1 => cnt_1_V_we1,
        d1 => cnt_1_V_d1,
        q1 => cnt_1_V_q1);

    cnt_2_V_U : component estimate_FR_2_cnt_0_V
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cnt_2_V_address0,
        ce0 => cnt_2_V_ce0,
        we0 => cnt_2_V_we0,
        d0 => cnt_2_V_d0,
        q0 => cnt_2_V_q0,
        address1 => cnt_2_V_address1,
        ce1 => cnt_2_V_ce1,
        we1 => cnt_2_V_we1,
        d1 => cnt_2_V_d1,
        q1 => cnt_2_V_q1);

    cnt_3_V_U : component estimate_FR_2_cnt_0_V
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cnt_3_V_address0,
        ce0 => cnt_3_V_ce0,
        we0 => cnt_3_V_we0,
        d0 => cnt_3_V_d0,
        q0 => cnt_3_V_q0,
        address1 => cnt_3_V_address1,
        ce1 => cnt_3_V_ce1,
        we1 => cnt_3_V_we1,
        d1 => cnt_3_V_d1,
        q1 => cnt_3_V_q1);

    FR_0_V_U : component estimate_FR_2_FR_0_V
    generic map (
        DataWidth => 7,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => FR_0_V_address0,
        ce0 => FR_0_V_ce0,
        we0 => FR_0_V_we0,
        d0 => FR_0_V_d0,
        q0 => FR_0_V_q0,
        address1 => FR_0_V_address1,
        ce1 => FR_0_V_ce1,
        q1 => FR_0_V_q1);

    FR_1_V_U : component estimate_FR_2_FR_0_V
    generic map (
        DataWidth => 7,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => FR_1_V_address0,
        ce0 => FR_1_V_ce0,
        we0 => FR_1_V_we0,
        d0 => FR_1_V_d0,
        q0 => FR_1_V_q0,
        address1 => FR_1_V_address1,
        ce1 => FR_1_V_ce1,
        q1 => FR_1_V_q1);

    FR_2_V_U : component estimate_FR_2_FR_0_V
    generic map (
        DataWidth => 7,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => FR_2_V_address0,
        ce0 => FR_2_V_ce0,
        we0 => FR_2_V_we0,
        d0 => FR_2_V_d0,
        q0 => FR_2_V_q0,
        address1 => FR_2_V_address1,
        ce1 => FR_2_V_ce1,
        q1 => FR_2_V_q1);

    FR_3_V_U : component estimate_FR_2_FR_0_V
    generic map (
        DataWidth => 7,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => FR_3_V_address0,
        ce0 => FR_3_V_ce0,
        we0 => FR_3_V_we0,
        d0 => FR_3_V_d0,
        q0 => FR_3_V_q0,
        address1 => FR_3_V_address1,
        ce1 => FR_3_V_ce1,
        q1 => FR_3_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_0_reg_906_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_0_0_reg_906 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then 
                i_0_0_reg_906 <= add_ln19_reg_1756;
            end if; 
        end if;
    end process;

    j_0_0_reg_882_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0))) then 
                j_0_0_reg_882 <= add_ln12_reg_1711;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_0_0_reg_882 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k_0_0_reg_917_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                k_0_0_reg_917 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_reg_1834 = ap_const_lv1_0))) then 
                k_0_0_reg_917 <= add_ln31_reg_2010;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (p_090_0217_0_reg_894 = ap_const_lv1_1))) then
                FR_0_V_load_2_reg_2015 <= FR_0_V_q1;
                FR_0_V_load_3_reg_2035 <= FR_0_V_q0;
                FR_1_V_load_2_reg_2020 <= FR_1_V_q1;
                FR_1_V_load_3_reg_2040 <= FR_1_V_q0;
                FR_2_V_load_2_reg_2025 <= FR_2_V_q1;
                FR_2_V_load_3_reg_2045 <= FR_2_V_q0;
                FR_3_V_load_2_reg_2030 <= FR_3_V_q1;
                FR_3_V_load_3_reg_2050 <= FR_3_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0))) then
                add_ln12_reg_1711 <= add_ln12_fu_1131_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln19_fu_1151_p2 = ap_const_lv1_0))) then
                add_ln19_reg_1756 <= add_ln19_fu_1175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln31_reg_1834 = ap_const_lv1_0))) then
                add_ln31_reg_2010 <= add_ln31_fu_1535_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (trunc_ln301_11_fu_1181_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then
                cnt_0_V_addr_5_reg_1769 <= zext_ln20_reg_1720(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_10_reg_1765 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                cnt_0_V_addr_6_reg_1814 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln301_12_fu_1193_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then
                cnt_1_V_addr_6_reg_1782 <= zext_ln20_reg_1720(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1778 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                cnt_1_V_addr_7_reg_1819 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln301_13_fu_1205_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then
                cnt_2_V_addr_7_reg_1795 <= zext_ln20_reg_1720(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_1791 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                cnt_2_V_addr_8_reg_1824 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln301_14_fu_1217_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then
                cnt_3_V_addr_8_reg_1809 <= zext_ln20_reg_1720(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_13_reg_1804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                cnt_3_V_addr_9_reg_1829 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln12_reg_1637 <= icmp_ln12_fu_929_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln19_reg_1716 <= icmp_ln19_fu_1151_p2;
                icmp_ln19_reg_1716_pp1_iter1_reg <= icmp_ln19_reg_1716;
                    zext_ln20_reg_1720_pp1_iter1_reg(4 downto 0) <= zext_ln20_reg_1720(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln31_reg_1834 <= icmp_ln31_fu_1341_p2;
                    zext_ln36_1_reg_1858_pp2_iter1_reg(2 downto 0) <= zext_ln36_1_reg_1858(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0))) then
                    or_ln321_1_reg_1666(0) <= or_ln321_1_fu_1055_p2(0);    or_ln321_1_reg_1666(4 downto 2) <= or_ln321_1_fu_1055_p2(4 downto 2);
                    or_ln321_2_reg_1691(4 downto 2) <= or_ln321_2_fu_1095_p2(4 downto 2);
                trunc_ln301_10_reg_1701 <= counts_3_q0(21 downto 16);
                trunc_ln301_6_reg_1661 <= trunc_ln301_6_fu_1051_p1;
                trunc_ln301_7_reg_1671 <= counts_2_q0(13 downto 8);
                trunc_ln301_8_reg_1676 <= counts_2_q0(21 downto 16);
                trunc_ln301_9_reg_1686 <= trunc_ln301_9_fu_1091_p1;
                trunc_ln301_s_reg_1696 <= counts_3_q0(13 downto 8);
                trunc_ln302_2_reg_1681 <= counts_2_q0(29 downto 24);
                trunc_ln302_3_reg_1706 <= counts_3_q0(29 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln19_reg_1716_pp1_iter1_reg = ap_const_lv1_0))) then
                p_090_0217_0_reg_894 <= tmp_13_reg_1804_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then
                tmp_10_reg_1765 <= inputs_0_q0(1 downto 1);
                tmp_11_reg_1778 <= inputs_1_q0(1 downto 1);
                tmp_12_reg_1791 <= inputs_2_q0(1 downto 1);
                trunc_ln301_11_reg_1761 <= trunc_ln301_11_fu_1181_p1;
                trunc_ln301_12_reg_1774 <= trunc_ln301_12_fu_1193_p1;
                trunc_ln301_13_reg_1787 <= trunc_ln301_13_fu_1205_p1;
                trunc_ln301_14_reg_1800 <= trunc_ln301_14_fu_1217_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                tmp_10_reg_1765_pp1_iter1_reg <= tmp_10_reg_1765;
                tmp_11_reg_1778_pp1_iter1_reg <= tmp_11_reg_1778;
                tmp_12_reg_1791_pp1_iter1_reg <= tmp_12_reg_1791;
                tmp_13_reg_1804_pp1_iter1_reg <= tmp_13_reg_1804;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then
                tmp_13_reg_1804 <= inputs_3_q0(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln19_fu_1151_p2 = ap_const_lv1_0))) then
                    zext_ln20_reg_1720(4 downto 0) <= zext_ln20_fu_1167_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_0))) then
                    zext_ln36_1_reg_1858(2 downto 0) <= zext_ln36_1_fu_1369_p1(2 downto 0);
            end if;
        end if;
    end process;
    or_ln321_1_reg_1666(1) <= '1';
    or_ln321_2_reg_1691(1 downto 0) <= "11";
    zext_ln20_reg_1720(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln20_reg_1720_pp1_iter1_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln36_1_reg_1858(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln36_1_reg_1858_pp2_iter1_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln12_fu_929_p2, ap_enable_reg_pp0_iter0, icmp_ln19_fu_1151_p2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln31_fu_1341_p2, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp1_stage1_subdone, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln12_fu_929_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln12_fu_929_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln19_fu_1151_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln19_fu_1151_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    FR_0_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            FR_0_V_address0 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            FR_0_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_0_V_address0 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        else 
            FR_0_V_address0 <= "XXXXX";
        end if; 
    end process;


    FR_0_V_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                FR_0_V_address1 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                FR_0_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
            else 
                FR_0_V_address1 <= "XXXXX";
            end if;
        else 
            FR_0_V_address1 <= "XXXXX";
        end if; 
    end process;


    FR_0_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            FR_0_V_ce0 <= ap_const_logic_1;
        else 
            FR_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_0_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            FR_0_V_ce1 <= ap_const_logic_1;
        else 
            FR_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    FR_0_V_d0 <= std_logic_vector(unsigned(zext_ln209_fu_1263_p1) + unsigned(zext_ln209_1_fu_1267_p1));

    FR_0_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_10_reg_1765_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((tmp_10_reg_1765_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_0_V_we0 <= ap_const_logic_1;
        else 
            FR_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_1_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            FR_1_V_address0 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            FR_1_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_1_V_address0 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        else 
            FR_1_V_address0 <= "XXXXX";
        end if; 
    end process;


    FR_1_V_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                FR_1_V_address1 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                FR_1_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
            else 
                FR_1_V_address1 <= "XXXXX";
            end if;
        else 
            FR_1_V_address1 <= "XXXXX";
        end if; 
    end process;


    FR_1_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            FR_1_V_ce0 <= ap_const_logic_1;
        else 
            FR_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_1_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            FR_1_V_ce1 <= ap_const_logic_1;
        else 
            FR_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    FR_1_V_d0 <= std_logic_vector(unsigned(zext_ln209_2_fu_1284_p1) + unsigned(zext_ln209_3_fu_1288_p1));

    FR_1_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_11_reg_1778_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((tmp_11_reg_1778_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_1_V_we0 <= ap_const_logic_1;
        else 
            FR_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_2_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            FR_2_V_address0 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            FR_2_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_2_V_address0 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        else 
            FR_2_V_address0 <= "XXXXX";
        end if; 
    end process;


    FR_2_V_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                FR_2_V_address1 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                FR_2_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
            else 
                FR_2_V_address1 <= "XXXXX";
            end if;
        else 
            FR_2_V_address1 <= "XXXXX";
        end if; 
    end process;


    FR_2_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            FR_2_V_ce0 <= ap_const_logic_1;
        else 
            FR_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_2_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            FR_2_V_ce1 <= ap_const_logic_1;
        else 
            FR_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    FR_2_V_d0 <= std_logic_vector(unsigned(zext_ln209_4_fu_1305_p1) + unsigned(zext_ln209_5_fu_1309_p1));

    FR_2_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_12_reg_1791_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((tmp_12_reg_1791_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_2_V_we0 <= ap_const_logic_1;
        else 
            FR_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_3_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            FR_3_V_address0 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            FR_3_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_3_V_address0 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        else 
            FR_3_V_address0 <= "XXXXX";
        end if; 
    end process;


    FR_3_V_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                FR_3_V_address1 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                FR_3_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
            else 
                FR_3_V_address1 <= "XXXXX";
            end if;
        else 
            FR_3_V_address1 <= "XXXXX";
        end if; 
    end process;


    FR_3_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            FR_3_V_ce0 <= ap_const_logic_1;
        else 
            FR_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    FR_3_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            FR_3_V_ce1 <= ap_const_logic_1;
        else 
            FR_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    FR_3_V_d0 <= std_logic_vector(unsigned(zext_ln209_6_fu_1326_p1) + unsigned(zext_ln209_7_fu_1330_p1));

    FR_3_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_13_reg_1804_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((tmp_13_reg_1804_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            FR_3_V_we0 <= ap_const_logic_1;
        else 
            FR_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln12_fu_1131_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(j_0_0_reg_882));
    add_ln19_fu_1175_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_0_phi_fu_910_p4) + unsigned(ap_const_lv7_4));
    add_ln31_fu_1535_p2 <= std_logic_vector(unsigned(k_0_0_reg_917) + unsigned(ap_const_lv5_4));
    add_ln700_1_fu_1236_p2 <= std_logic_vector(unsigned(cnt_1_V_q0) + unsigned(ap_const_lv6_1));
    add_ln700_2_fu_1243_p2 <= std_logic_vector(unsigned(cnt_2_V_q0) + unsigned(ap_const_lv6_1));
    add_ln700_3_fu_1250_p2 <= std_logic_vector(unsigned(cnt_3_V_q0) + unsigned(ap_const_lv6_1));
    add_ln700_fu_1229_p2 <= std_logic_vector(unsigned(cnt_0_V_q0) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(5);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(6);
    ap_CS_fsm_state16 <= ap_CS_fsm(9);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln12_fu_929_p2)
    begin
        if ((icmp_ln12_fu_929_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln19_fu_1151_p2)
    begin
        if ((icmp_ln19_fu_1151_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state12_assign_proc : process(icmp_ln31_fu_1341_p2)
    begin
        if ((icmp_ln31_fu_1341_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_0_phi_fu_910_p4_assign_proc : process(i_0_0_reg_906, icmp_ln19_reg_1716, ap_CS_fsm_pp1_stage0, add_ln19_reg_1756, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln19_reg_1716 = ap_const_lv1_0))) then 
            ap_phi_mux_i_0_0_phi_fu_910_p4 <= add_ln19_reg_1756;
        else 
            ap_phi_mux_i_0_0_phi_fu_910_p4 <= i_0_0_reg_906;
        end if; 
    end process;


    ap_phi_mux_j_0_0_phi_fu_886_p4_assign_proc : process(j_0_0_reg_882, icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, add_ln12_reg_1711, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln12_reg_1637 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_0_phi_fu_886_p4 <= add_ln12_reg_1711;
        else 
            ap_phi_mux_j_0_0_phi_fu_886_p4 <= j_0_0_reg_882;
        end if; 
    end process;


    ap_phi_mux_k_0_0_phi_fu_921_p4_assign_proc : process(k_0_0_reg_917, icmp_ln31_reg_1834, ap_CS_fsm_pp2_stage0, add_ln31_reg_2010, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_reg_1834 = ap_const_lv1_0))) then 
            ap_phi_mux_k_0_0_phi_fu_921_p4 <= add_ln31_reg_2010;
        else 
            ap_phi_mux_k_0_0_phi_fu_921_p4 <= k_0_0_reg_917;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    cnt_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, cnt_0_V_addr_5_reg_1769, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln321_fu_958_p1, ap_block_pp0_stage1, zext_ln321_2_fu_1137_p1, ap_block_pp1_stage1, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_0_V_address0 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_0_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_0_V_address0 <= cnt_0_V_addr_5_reg_1769;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            cnt_0_V_address0 <= zext_ln20_reg_1720(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_0_V_address0 <= zext_ln321_2_fu_1137_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_0_V_address0 <= zext_ln321_fu_958_p1(5 - 1 downto 0);
        else 
            cnt_0_V_address0 <= "XXXXX";
        end if; 
    end process;


    cnt_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp1_stage1, cnt_0_V_addr_6_reg_1814, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage1, zext_ln321_1_fu_1010_p1, zext_ln321_3_fu_1144_p1, ap_block_pp1_stage1, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_0_V_address1 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_0_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_0_V_address1 <= cnt_0_V_addr_6_reg_1814;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            cnt_0_V_address1 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_0_V_address1 <= zext_ln321_3_fu_1144_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_0_V_address1 <= zext_ln321_1_fu_1010_p1(5 - 1 downto 0);
        else 
            cnt_0_V_address1 <= "XXXXX";
        end if; 
    end process;


    cnt_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_0_V_ce0 <= ap_const_logic_1;
        else 
            cnt_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_0_V_ce1 <= ap_const_logic_1;
        else 
            cnt_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_0_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, trunc_ln301_6_reg_1661, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, trunc_ln301_fu_953_p1, add_ln700_fu_1229_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_0_V_d0 <= add_ln700_fu_1229_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_0_V_d0 <= trunc_ln301_6_reg_1661;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_0_V_d0 <= trunc_ln301_fu_953_p1;
        else 
            cnt_0_V_d0 <= "XXXXXX";
        end if; 
    end process;


    cnt_0_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln301_9_reg_1686, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, trunc_ln301_3_fu_999_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_0_V_d1 <= ap_const_lv6_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_0_V_d1 <= trunc_ln301_9_reg_1686;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_0_V_d1 <= trunc_ln301_3_fu_999_p1;
        else 
            cnt_0_V_d1 <= "XXXXXX";
        end if; 
    end process;


    cnt_0_V_we0_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln301_11_reg_1761, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((trunc_ln301_11_reg_1761 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_0_V_we0 <= ap_const_logic_1;
        else 
            cnt_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_0_V_we1_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_10_reg_1765_pp1_iter1_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_10_reg_1765_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_0_V_we1 <= ap_const_logic_1;
        else 
            cnt_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, cnt_1_V_addr_6_reg_1782, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln321_fu_958_p1, ap_block_pp0_stage1, zext_ln321_2_fu_1137_p1, ap_block_pp1_stage1, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_1_V_address0 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_1_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_1_V_address0 <= cnt_1_V_addr_6_reg_1782;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            cnt_1_V_address0 <= zext_ln20_reg_1720(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_1_V_address0 <= zext_ln321_2_fu_1137_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_1_V_address0 <= zext_ln321_fu_958_p1(5 - 1 downto 0);
        else 
            cnt_1_V_address0 <= "XXXXX";
        end if; 
    end process;


    cnt_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp1_stage1, cnt_1_V_addr_7_reg_1819, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage1, zext_ln321_1_fu_1010_p1, zext_ln321_3_fu_1144_p1, ap_block_pp1_stage1, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_1_V_address1 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_1_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_1_V_address1 <= cnt_1_V_addr_7_reg_1819;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            cnt_1_V_address1 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_1_V_address1 <= zext_ln321_3_fu_1144_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_1_V_address1 <= zext_ln321_1_fu_1010_p1(5 - 1 downto 0);
        else 
            cnt_1_V_address1 <= "XXXXX";
        end if; 
    end process;


    cnt_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_1_V_ce0 <= ap_const_logic_1;
        else 
            cnt_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_1_V_ce1 <= ap_const_logic_1;
        else 
            cnt_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_1_V_d0_assign_proc : process(counts_0_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln301_7_reg_1671, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, add_ln700_1_fu_1236_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_1_V_d0 <= add_ln700_1_fu_1236_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_1_V_d0 <= trunc_ln301_7_reg_1671;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_1_V_d0 <= counts_0_q0(13 downto 8);
        else 
            cnt_1_V_d0 <= "XXXXXX";
        end if; 
    end process;


    cnt_1_V_d1_assign_proc : process(counts_1_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln301_s_reg_1696, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_1_V_d1 <= ap_const_lv6_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_1_V_d1 <= trunc_ln301_s_reg_1696;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_1_V_d1 <= counts_1_q0(13 downto 8);
        else 
            cnt_1_V_d1 <= "XXXXXX";
        end if; 
    end process;


    cnt_1_V_we0_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln301_12_reg_1774, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((trunc_ln301_12_reg_1774 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_1_V_we0 <= ap_const_logic_1;
        else 
            cnt_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_1_V_we1_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_11_reg_1778_pp1_iter1_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_11_reg_1778_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_1_V_we1 <= ap_const_logic_1;
        else 
            cnt_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, cnt_2_V_addr_7_reg_1795, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln321_fu_958_p1, ap_block_pp0_stage1, zext_ln321_2_fu_1137_p1, ap_block_pp1_stage1, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_2_V_address0 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_2_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_2_V_address0 <= cnt_2_V_addr_7_reg_1795;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            cnt_2_V_address0 <= zext_ln20_reg_1720(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_2_V_address0 <= zext_ln321_2_fu_1137_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_2_V_address0 <= zext_ln321_fu_958_p1(5 - 1 downto 0);
        else 
            cnt_2_V_address0 <= "XXXXX";
        end if; 
    end process;


    cnt_2_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp1_stage1, cnt_2_V_addr_8_reg_1824, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage1, zext_ln321_1_fu_1010_p1, zext_ln321_3_fu_1144_p1, ap_block_pp1_stage1, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_2_V_address1 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_2_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_2_V_address1 <= cnt_2_V_addr_8_reg_1824;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            cnt_2_V_address1 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_2_V_address1 <= zext_ln321_3_fu_1144_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_2_V_address1 <= zext_ln321_1_fu_1010_p1(5 - 1 downto 0);
        else 
            cnt_2_V_address1 <= "XXXXX";
        end if; 
    end process;


    cnt_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_2_V_ce0 <= ap_const_logic_1;
        else 
            cnt_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_2_V_ce1 <= ap_const_logic_1;
        else 
            cnt_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_2_V_d0_assign_proc : process(counts_0_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln301_8_reg_1676, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, add_ln700_2_fu_1243_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_2_V_d0 <= add_ln700_2_fu_1243_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_2_V_d0 <= trunc_ln301_8_reg_1676;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_2_V_d0 <= counts_0_q0(21 downto 16);
        else 
            cnt_2_V_d0 <= "XXXXXX";
        end if; 
    end process;


    cnt_2_V_d1_assign_proc : process(counts_1_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln301_10_reg_1701, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_2_V_d1 <= ap_const_lv6_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_2_V_d1 <= trunc_ln301_10_reg_1701;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_2_V_d1 <= counts_1_q0(21 downto 16);
        else 
            cnt_2_V_d1 <= "XXXXXX";
        end if; 
    end process;


    cnt_2_V_we0_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln301_13_reg_1787, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((trunc_ln301_13_reg_1787 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_2_V_we0 <= ap_const_logic_1;
        else 
            cnt_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_2_V_we1_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_12_reg_1791_pp1_iter1_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_12_reg_1791_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_2_V_we1 <= ap_const_logic_1;
        else 
            cnt_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_3_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, cnt_3_V_addr_8_reg_1809, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln321_fu_958_p1, ap_block_pp0_stage1, zext_ln321_2_fu_1137_p1, ap_block_pp1_stage1, zext_ln555_fu_1347_p1, ap_block_pp2_stage1, zext_ln555_2_fu_1505_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_3_V_address0 <= zext_ln555_2_fu_1505_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_3_V_address0 <= zext_ln555_fu_1347_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_3_V_address0 <= cnt_3_V_addr_8_reg_1809;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            cnt_3_V_address0 <= zext_ln20_reg_1720(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_3_V_address0 <= zext_ln321_2_fu_1137_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_3_V_address0 <= zext_ln321_fu_958_p1(5 - 1 downto 0);
        else 
            cnt_3_V_address0 <= "XXXXX";
        end if; 
    end process;


    cnt_3_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, zext_ln20_reg_1720_pp1_iter1_reg, ap_CS_fsm_pp1_stage1, cnt_3_V_addr_9_reg_1829, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage1, zext_ln321_1_fu_1010_p1, zext_ln321_3_fu_1144_p1, ap_block_pp1_stage1, zext_ln555_1_fu_1383_p1, ap_block_pp2_stage1, zext_ln555_3_fu_1523_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            cnt_3_V_address1 <= zext_ln555_3_fu_1523_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            cnt_3_V_address1 <= zext_ln555_1_fu_1383_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_3_V_address1 <= cnt_3_V_addr_9_reg_1829;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            cnt_3_V_address1 <= zext_ln20_reg_1720_pp1_iter1_reg(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_3_V_address1 <= zext_ln321_3_fu_1144_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_3_V_address1 <= zext_ln321_1_fu_1010_p1(5 - 1 downto 0);
        else 
            cnt_3_V_address1 <= "XXXXX";
        end if; 
    end process;


    cnt_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_3_V_ce0 <= ap_const_logic_1;
        else 
            cnt_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_3_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cnt_3_V_ce1 <= ap_const_logic_1;
        else 
            cnt_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_3_V_d0_assign_proc : process(counts_0_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln302_2_reg_1681, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, add_ln700_3_fu_1250_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_3_V_d0 <= add_ln700_3_fu_1250_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_3_V_d0 <= trunc_ln302_2_reg_1681;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_3_V_d0 <= counts_0_q0(29 downto 24);
        else 
            cnt_3_V_d0 <= "XXXXXX";
        end if; 
    end process;


    cnt_3_V_d1_assign_proc : process(counts_1_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, trunc_ln302_3_reg_1706, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cnt_3_V_d1 <= ap_const_lv6_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cnt_3_V_d1 <= trunc_ln302_3_reg_1706;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cnt_3_V_d1 <= counts_1_q0(29 downto 24);
        else 
            cnt_3_V_d1 <= "XXXXXX";
        end if; 
    end process;


    cnt_3_V_we0_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln301_14_reg_1800, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((trunc_ln301_14_reg_1800 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_3_V_we0 <= ap_const_logic_1;
        else 
            cnt_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_3_V_we1_assign_proc : process(icmp_ln12_reg_1637, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_13_reg_1804_pp1_iter1_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_13_reg_1804_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln12_reg_1637 = ap_const_lv1_0)))) then 
            cnt_3_V_we1 <= ap_const_logic_1;
        else 
            cnt_3_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    counts_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln36_1_reg_1858, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp0_stage0, zext_ln13_fu_945_p1, ap_block_pp2_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            counts_0_address0 <= zext_ln36_1_reg_1858(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            counts_0_address0 <= zext_ln13_fu_945_p1(3 - 1 downto 0);
        else 
            counts_0_address0 <= "XXX";
        end if; 
    end process;


    counts_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            counts_0_ce0 <= ap_const_logic_1;
        else 
            counts_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    counts_0_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1395_p8),32));

    counts_0_we0_assign_proc : process(icmp_ln31_reg_1834, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln31_reg_1834 = ap_const_lv1_0))) then 
            counts_0_we0 <= ap_const_logic_1;
        else 
            counts_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    counts_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln36_1_reg_1858, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp0_stage0, zext_ln13_fu_945_p1, ap_block_pp2_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            counts_1_address0 <= zext_ln36_1_reg_1858(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            counts_1_address0 <= zext_ln13_fu_945_p1(3 - 1 downto 0);
        else 
            counts_1_address0 <= "XXX";
        end if; 
    end process;


    counts_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            counts_1_ce0 <= ap_const_logic_1;
        else 
            counts_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    counts_1_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1447_p8),32));

    counts_1_we0_assign_proc : process(icmp_ln31_reg_1834, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln31_reg_1834 = ap_const_lv1_0))) then 
            counts_1_we0 <= ap_const_logic_1;
        else 
            counts_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    counts_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage0, zext_ln36_1_reg_1858, ap_enable_reg_pp2_iter1, ap_block_pp0_stage0, ap_block_pp2_stage0, zext_ln13_fu_945_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            counts_2_address0 <= zext_ln36_1_reg_1858(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            counts_2_address0 <= zext_ln13_fu_945_p1(3 - 1 downto 0);
        else 
            counts_2_address0 <= "XXX";
        end if; 
    end process;


    counts_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            counts_2_ce0 <= ap_const_logic_1;
        else 
            counts_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    counts_2_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1541_p8),32));

    counts_2_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            counts_2_we0 <= ap_const_logic_1;
        else 
            counts_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    counts_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage0, zext_ln36_1_reg_1858, ap_enable_reg_pp2_iter1, ap_block_pp0_stage0, ap_block_pp2_stage0, zext_ln13_fu_945_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            counts_3_address0 <= zext_ln36_1_reg_1858(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            counts_3_address0 <= zext_ln13_fu_945_p1(3 - 1 downto 0);
        else 
            counts_3_address0 <= "XXX";
        end if; 
    end process;


    counts_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            counts_3_ce0 <= ap_const_logic_1;
        else 
            counts_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    counts_3_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1564_p8),32));

    counts_3_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            counts_3_we0 <= ap_const_logic_1;
        else 
            counts_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln12_fu_929_p2 <= "1" when (ap_phi_mux_j_0_0_phi_fu_886_p4 = ap_const_lv5_18) else "0";
    icmp_ln19_fu_1151_p2 <= "1" when (ap_phi_mux_i_0_0_phi_fu_910_p4 = ap_const_lv7_60) else "0";
    icmp_ln31_fu_1341_p2 <= "1" when (ap_phi_mux_k_0_0_phi_fu_921_p4 = ap_const_lv5_18) else "0";
    inputs_0_address0 <= zext_ln20_fu_1167_p1(5 - 1 downto 0);

    inputs_0_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            inputs_0_ce0 <= ap_const_logic_1;
        else 
            inputs_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_1_address0 <= zext_ln20_fu_1167_p1(5 - 1 downto 0);

    inputs_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            inputs_1_ce0 <= ap_const_logic_1;
        else 
            inputs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_2_address0 <= zext_ln20_fu_1167_p1(5 - 1 downto 0);

    inputs_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            inputs_2_ce0 <= ap_const_logic_1;
        else 
            inputs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_3_address0 <= zext_ln20_fu_1167_p1(5 - 1 downto 0);

    inputs_3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            inputs_3_ce0 <= ap_const_logic_1;
        else 
            inputs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1_fu_1157_p4 <= ap_phi_mux_i_0_0_phi_fu_910_p4(6 downto 2);
    lshr_ln2_fu_1359_p4 <= ap_phi_mux_k_0_0_phi_fu_921_p4(4 downto 2);
    lshr_ln_fu_935_p4 <= ap_phi_mux_j_0_0_phi_fu_886_p4(4 downto 2);
    or_ln321_1_fu_1055_p2 <= (j_0_0_reg_882 or ap_const_lv5_2);
    or_ln321_2_fu_1095_p2 <= (j_0_0_reg_882 or ap_const_lv5_3);
    or_ln321_fu_1004_p2 <= (j_0_0_reg_882 or ap_const_lv5_1);
    or_ln555_1_fu_1499_p2 <= (k_0_0_reg_917 or ap_const_lv5_2);
    or_ln555_2_fu_1517_p2 <= (k_0_0_reg_917 or ap_const_lv5_3);
    or_ln555_fu_1377_p2 <= (ap_phi_mux_k_0_0_phi_fu_921_p4 or ap_const_lv5_1);

    outputs_0_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, zext_ln36_1_fu_1369_p1, zext_ln36_1_reg_1858, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_block_pp2_stage1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                outputs_0_address0 <= zext_ln36_1_reg_1858(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                outputs_0_address0 <= zext_ln36_1_fu_1369_p1(3 - 1 downto 0);
            else 
                outputs_0_address0 <= "XXX";
            end if;
        else 
            outputs_0_address0 <= "XXX";
        end if; 
    end process;


    outputs_0_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            outputs_0_ce0 <= ap_const_logic_1;
        else 
            outputs_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_0_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_block_pp2_stage1, zext_ln42_fu_1442_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                outputs_0_d0 <= zext_ln42_fu_1442_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                outputs_0_d0 <= ap_const_lv32_1;
            else 
                outputs_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outputs_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outputs_0_we0_assign_proc : process(p_090_0217_0_reg_894, icmp_ln31_fu_1341_p2, icmp_ln31_reg_1834, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln31_reg_1834 = ap_const_lv1_0) and (p_090_0217_0_reg_894 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_0) and (p_090_0217_0_reg_894 = ap_const_lv1_0)))) then 
            outputs_0_we0 <= ap_const_logic_1;
        else 
            outputs_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_1_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, zext_ln36_1_fu_1369_p1, zext_ln36_1_reg_1858, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_block_pp2_stage1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                outputs_1_address0 <= zext_ln36_1_reg_1858(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                outputs_1_address0 <= zext_ln36_1_fu_1369_p1(3 - 1 downto 0);
            else 
                outputs_1_address0 <= "XXX";
            end if;
        else 
            outputs_1_address0 <= "XXX";
        end if; 
    end process;


    outputs_1_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            outputs_1_ce0 <= ap_const_logic_1;
        else 
            outputs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_1_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_block_pp2_stage1, zext_ln42_1_fu_1494_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                outputs_1_d0 <= zext_ln42_1_fu_1494_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                outputs_1_d0 <= ap_const_lv32_1;
            else 
                outputs_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outputs_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outputs_1_we0_assign_proc : process(p_090_0217_0_reg_894, icmp_ln31_fu_1341_p2, icmp_ln31_reg_1834, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln31_reg_1834 = ap_const_lv1_0) and (p_090_0217_0_reg_894 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_0) and (p_090_0217_0_reg_894 = ap_const_lv1_0)))) then 
            outputs_1_we0 <= ap_const_logic_1;
        else 
            outputs_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_2_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, zext_ln36_1_fu_1369_p1, zext_ln36_1_reg_1858_pp2_iter1_reg, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_block_pp2_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            outputs_2_address0 <= zext_ln36_1_reg_1858_pp2_iter1_reg(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            outputs_2_address0 <= zext_ln36_1_fu_1369_p1(3 - 1 downto 0);
        else 
            outputs_2_address0 <= "XXX";
        end if; 
    end process;


    outputs_2_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            outputs_2_ce0 <= ap_const_logic_1;
        else 
            outputs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_2_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_block_pp2_stage1, zext_ln42_2_fu_1607_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            outputs_2_d0 <= zext_ln42_2_fu_1607_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            outputs_2_d0 <= ap_const_lv32_1;
        else 
            outputs_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outputs_2_we0_assign_proc : process(p_090_0217_0_reg_894, icmp_ln31_fu_1341_p2, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (p_090_0217_0_reg_894 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_0) and (p_090_0217_0_reg_894 = ap_const_lv1_0)))) then 
            outputs_2_we0 <= ap_const_logic_1;
        else 
            outputs_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_3_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, zext_ln36_1_fu_1369_p1, zext_ln36_1_reg_1858_pp2_iter1_reg, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_block_pp2_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            outputs_3_address0 <= zext_ln36_1_reg_1858_pp2_iter1_reg(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            outputs_3_address0 <= zext_ln36_1_fu_1369_p1(3 - 1 downto 0);
        else 
            outputs_3_address0 <= "XXX";
        end if; 
    end process;


    outputs_3_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            outputs_3_ce0 <= ap_const_logic_1;
        else 
            outputs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputs_3_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_block_pp2_stage1, zext_ln42_3_fu_1632_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            outputs_3_d0 <= zext_ln42_3_fu_1632_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            outputs_3_d0 <= ap_const_lv32_1;
        else 
            outputs_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outputs_3_we0_assign_proc : process(p_090_0217_0_reg_894, icmp_ln31_fu_1341_p2, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (p_090_0217_0_reg_894 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln31_fu_1341_p2 = ap_const_lv1_0) and (p_090_0217_0_reg_894 = ap_const_lv1_0)))) then 
            outputs_3_we0 <= ap_const_logic_1;
        else 
            outputs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln1503_1_fu_1278_p2 <= std_logic_vector(shift_left(unsigned(cnt_1_V_q1),to_integer(unsigned('0' & ap_const_lv6_2(6-1 downto 0)))));
    shl_ln1503_2_fu_1299_p2 <= std_logic_vector(shift_left(unsigned(cnt_2_V_q1),to_integer(unsigned('0' & ap_const_lv6_2(6-1 downto 0)))));
    shl_ln1503_3_fu_1320_p2 <= std_logic_vector(shift_left(unsigned(cnt_3_V_q1),to_integer(unsigned('0' & ap_const_lv6_2(6-1 downto 0)))));
    shl_ln1503_fu_1257_p2 <= std_logic_vector(shift_left(unsigned(cnt_0_V_q1),to_integer(unsigned('0' & ap_const_lv6_2(6-1 downto 0)))));
    tmp_3_fu_1395_p8 <= ((((((cnt_3_V_q0 & ap_const_lv2_0) & cnt_2_V_q0) & ap_const_lv2_0) & cnt_1_V_q0) & ap_const_lv2_0) & cnt_0_V_q0);
    tmp_4_fu_1447_p8 <= ((((((cnt_3_V_q1 & ap_const_lv2_0) & cnt_2_V_q1) & ap_const_lv2_0) & cnt_1_V_q1) & ap_const_lv2_0) & cnt_0_V_q1);
    tmp_5_fu_1541_p8 <= ((((((cnt_3_V_q0 & ap_const_lv2_0) & cnt_2_V_q0) & ap_const_lv2_0) & cnt_1_V_q0) & ap_const_lv2_0) & cnt_0_V_q0);
    tmp_6_fu_1564_p8 <= ((((((cnt_3_V_q1 & ap_const_lv2_0) & cnt_2_V_q1) & ap_const_lv2_0) & cnt_1_V_q1) & ap_const_lv2_0) & cnt_0_V_q1);
    tmp_7_fu_1430_p5 <= (((FR_3_V_q0 & zext_ln555_6_fu_1426_p1) & zext_ln555_5_fu_1422_p1) & zext_ln555_4_fu_1418_p1);
    tmp_8_fu_1482_p5 <= (((FR_3_V_q1 & zext_ln555_9_fu_1478_p1) & zext_ln555_8_fu_1474_p1) & zext_ln555_7_fu_1470_p1);
    tmp_9_fu_1596_p5 <= (((FR_3_V_load_2_reg_2030 & zext_ln555_12_fu_1593_p1) & zext_ln555_11_fu_1590_p1) & zext_ln555_10_fu_1587_p1);
    tmp_s_fu_1621_p5 <= (((FR_3_V_load_3_reg_2050 & zext_ln555_15_fu_1618_p1) & zext_ln555_14_fu_1615_p1) & zext_ln555_13_fu_1612_p1);
    trunc_ln301_11_fu_1181_p1 <= inputs_0_q0(1 - 1 downto 0);
    trunc_ln301_12_fu_1193_p1 <= inputs_1_q0(1 - 1 downto 0);
    trunc_ln301_13_fu_1205_p1 <= inputs_2_q0(1 - 1 downto 0);
    trunc_ln301_14_fu_1217_p1 <= inputs_3_q0(1 - 1 downto 0);
    trunc_ln301_3_fu_999_p1 <= counts_1_q0(6 - 1 downto 0);
    trunc_ln301_6_fu_1051_p1 <= counts_2_q0(6 - 1 downto 0);
    trunc_ln301_9_fu_1091_p1 <= counts_3_q0(6 - 1 downto 0);
    trunc_ln301_fu_953_p1 <= counts_0_q0(6 - 1 downto 0);
    zext_ln13_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_935_p4),64));
    zext_ln209_1_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_0_V_q1),7));
    zext_ln209_2_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1503_1_fu_1278_p2),7));
    zext_ln209_3_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_1_V_q1),7));
    zext_ln209_4_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1503_2_fu_1299_p2),7));
    zext_ln209_5_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_2_V_q1),7));
    zext_ln209_6_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1503_3_fu_1320_p2),7));
    zext_ln209_7_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_3_V_q1),7));
    zext_ln209_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1503_fu_1257_p2),7));
    zext_ln20_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_1157_p4),64));
    zext_ln321_1_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln321_fu_1004_p2),64));
    zext_ln321_2_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln321_1_reg_1666),64));
    zext_ln321_3_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln321_2_reg_1691),64));
    zext_ln321_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_0_reg_882),64));
    zext_ln36_1_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_fu_1359_p4),64));
    zext_ln42_1_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1482_p5),32));
    zext_ln42_2_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1596_p5),32));
    zext_ln42_3_fu_1632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1621_p5),32));
    zext_ln42_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1430_p5),32));
    zext_ln555_10_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_0_V_load_2_reg_2015),8));
    zext_ln555_11_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_1_V_load_2_reg_2020),8));
    zext_ln555_12_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_2_V_load_2_reg_2025),8));
    zext_ln555_13_fu_1612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_0_V_load_3_reg_2035),8));
    zext_ln555_14_fu_1615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_1_V_load_3_reg_2040),8));
    zext_ln555_15_fu_1618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_2_V_load_3_reg_2045),8));
    zext_ln555_1_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln555_fu_1377_p2),64));
    zext_ln555_2_fu_1505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln555_1_fu_1499_p2),64));
    zext_ln555_3_fu_1523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln555_2_fu_1517_p2),64));
    zext_ln555_4_fu_1418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_0_V_q0),8));
    zext_ln555_5_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_1_V_q0),8));
    zext_ln555_6_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_2_V_q0),8));
    zext_ln555_7_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_0_V_q1),8));
    zext_ln555_8_fu_1474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_1_V_q1),8));
    zext_ln555_9_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FR_2_V_q1),8));
    zext_ln555_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k_0_0_phi_fu_921_p4),64));
end behav;
