// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "estimate_FR_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic estimate_FR_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic estimate_FR_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state1 = "1";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state2 = "10";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state3 = "100";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state4 = "1000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state5 = "10000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state6 = "100000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> estimate_FR_2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> estimate_FR_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const int estimate_FR_2::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> estimate_FR_2::ap_const_lv32_1 = "1";
const sc_lv<1> estimate_FR_2::ap_const_lv1_0 = "0";
const sc_lv<32> estimate_FR_2::ap_const_lv32_2 = "10";
const sc_lv<32> estimate_FR_2::ap_const_lv32_4 = "100";
const sc_lv<32> estimate_FR_2::ap_const_lv32_5 = "101";
const sc_lv<1> estimate_FR_2::ap_const_lv1_1 = "1";
const sc_lv<32> estimate_FR_2::ap_const_lv32_7 = "111";
const sc_lv<32> estimate_FR_2::ap_const_lv32_9 = "1001";
const sc_lv<32> estimate_FR_2::ap_const_lv32_A = "1010";
const sc_lv<32> estimate_FR_2::ap_const_lv32_B = "1011";
const sc_lv<32> estimate_FR_2::ap_const_lv32_C = "1100";
const sc_lv<32> estimate_FR_2::ap_const_lv32_3 = "11";
const sc_lv<5> estimate_FR_2::ap_const_lv5_0 = "00000";
const sc_lv<32> estimate_FR_2::ap_const_lv32_8 = "1000";
const sc_lv<7> estimate_FR_2::ap_const_lv7_0 = "0000000";
const sc_lv<32> estimate_FR_2::ap_const_lv32_D = "1101";
const sc_lv<32> estimate_FR_2::ap_const_lv32_6 = "110";
const sc_lv<6> estimate_FR_2::ap_const_lv6_0 = "000000";
const sc_lv<5> estimate_FR_2::ap_const_lv5_18 = "11000";
const sc_lv<5> estimate_FR_2::ap_const_lv5_1 = "1";
const sc_lv<2> estimate_FR_2::ap_const_lv2_0 = "00";
const sc_lv<7> estimate_FR_2::ap_const_lv7_1 = "1";
const sc_lv<32> estimate_FR_2::ap_const_lv32_10 = "10000";
const sc_lv<32> estimate_FR_2::ap_const_lv32_15 = "10101";
const sc_lv<32> estimate_FR_2::ap_const_lv32_18 = "11000";
const sc_lv<32> estimate_FR_2::ap_const_lv32_1D = "11101";
const sc_lv<7> estimate_FR_2::ap_const_lv7_2 = "10";
const sc_lv<7> estimate_FR_2::ap_const_lv7_3 = "11";
const sc_lv<7> estimate_FR_2::ap_const_lv7_60 = "1100000";
const sc_lv<6> estimate_FR_2::ap_const_lv6_1 = "1";
const sc_lv<6> estimate_FR_2::ap_const_lv6_2 = "10";
const bool estimate_FR_2::ap_const_boolean_1 = true;

estimate_FR_2::estimate_FR_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    estimate_FR_2_AXILiteS_s_axi_U = new estimate_FR_2_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("estimate_FR_2_AXILiteS_s_axi_U");
    estimate_FR_2_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    estimate_FR_2_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    estimate_FR_2_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    estimate_FR_2_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    estimate_FR_2_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    estimate_FR_2_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    estimate_FR_2_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    estimate_FR_2_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    estimate_FR_2_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    estimate_FR_2_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    estimate_FR_2_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    estimate_FR_2_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    estimate_FR_2_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    estimate_FR_2_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    estimate_FR_2_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    estimate_FR_2_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    estimate_FR_2_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    estimate_FR_2_AXILiteS_s_axi_U->ACLK(ap_clk);
    estimate_FR_2_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    estimate_FR_2_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    estimate_FR_2_AXILiteS_s_axi_U->inputs_address0(inputs_address0);
    estimate_FR_2_AXILiteS_s_axi_U->inputs_ce0(inputs_ce0);
    estimate_FR_2_AXILiteS_s_axi_U->inputs_q0(inputs_q0);
    estimate_FR_2_AXILiteS_s_axi_U->counts_address0(counts_address0);
    estimate_FR_2_AXILiteS_s_axi_U->counts_ce0(counts_ce0);
    estimate_FR_2_AXILiteS_s_axi_U->counts_we0(counts_we0);
    estimate_FR_2_AXILiteS_s_axi_U->counts_d0(counts_d0);
    estimate_FR_2_AXILiteS_s_axi_U->counts_q0(counts_q0);
    estimate_FR_2_AXILiteS_s_axi_U->outputs_address0(outputs_address0);
    estimate_FR_2_AXILiteS_s_axi_U->outputs_ce0(outputs_ce0);
    estimate_FR_2_AXILiteS_s_axi_U->outputs_we0(outputs_we0);
    estimate_FR_2_AXILiteS_s_axi_U->outputs_d0(outputs_d0);
    cnt_V_U = new estimate_FR_2_cnt_V("cnt_V_U");
    cnt_V_U->clk(ap_clk);
    cnt_V_U->reset(ap_rst_n_inv);
    cnt_V_U->address0(cnt_V_address0);
    cnt_V_U->ce0(cnt_V_ce0);
    cnt_V_U->we0(cnt_V_we0);
    cnt_V_U->d0(cnt_V_d0);
    cnt_V_U->q0(cnt_V_q0);
    cnt_V_U->address1(cnt_V_address1);
    cnt_V_U->ce1(cnt_V_ce1);
    cnt_V_U->we1(cnt_V_we1);
    cnt_V_U->d1(cnt_V_d1);
    cnt_V_U->q1(cnt_V_q1);
    FR_V_U = new estimate_FR_2_FR_V("FR_V_U");
    FR_V_U->clk(ap_clk);
    FR_V_U->reset(ap_rst_n_inv);
    FR_V_U->address0(FR_V_address0);
    FR_V_U->ce0(FR_V_ce0);
    FR_V_U->we0(FR_V_we0);
    FR_V_U->d0(FR_V_d0);
    FR_V_U->q0(FR_V_q0);
    FR_V_U->address1(FR_V_address1);
    FR_V_U->ce1(FR_V_ce1);
    FR_V_U->q1(FR_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FR_V_address0);
    sensitive << ( zext_ln20_reg_636 );
    sensitive << ( zext_ln32_reg_683 );
    sensitive << ( zext_ln35_reg_723 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_FR_V_address1);
    sensitive << ( zext_ln33_reg_693 );
    sensitive << ( zext_ln34_reg_713 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_FR_V_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_FR_V_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_FR_V_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln209_fu_474_p1 );
    sensitive << ( zext_ln209_1_fu_478_p1 );

    SC_METHOD(thread_FR_V_we0);
    sensitive << ( update_V_reg_652 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_add_ln700_fu_461_p2);
    sensitive << ( cnt_V_q0 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln31_fu_489_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln31_fu_489_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cnt_V_addr_9_gep_fu_178_p3);
    sensitive << ( zext_ln20_reg_636 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_cnt_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln20_reg_636 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( cnt_V_addr_9_gep_fu_178_p3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln32_fu_509_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln34_fu_530_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln13_fu_360_p1 );
    sensitive << ( zext_ln15_fu_417_p1 );

    SC_METHOD(thread_cnt_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( cnt_V_addr_4_reg_657 );
    sensitive << ( cnt_V_addr_9_reg_663 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln33_fu_520_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln35_fu_540_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln14_fu_376_p1 );
    sensitive << ( zext_ln16_fu_427_p1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_cnt_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cnt_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_cnt_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln301_2_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( trunc_ln301_fu_365_p1 );

    SC_METHOD(thread_cnt_V_d1);
    sensitive << ( counts_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln1_reg_623 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( add_ln700_fu_461_p2 );

    SC_METHOD(thread_cnt_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cnt_V_we1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln301_3_reg_648 );
    sensitive << ( update_V_reg_652 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_counts_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln36_1_fu_566_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln13_1_fu_347_p1 );

    SC_METHOD(thread_counts_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_counts_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_fu_545_p8 );

    SC_METHOD(thread_counts_we0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i_fu_438_p2);
    sensitive << ( i_0_reg_312 );

    SC_METHOD(thread_icmp_ln12_fu_335_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_reg_288 );

    SC_METHOD(thread_icmp_ln19_fu_432_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_reg_312 );

    SC_METHOD(thread_icmp_ln31_fu_489_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( k_0_reg_323 );

    SC_METHOD(thread_inputs_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln20_fu_444_p1 );

    SC_METHOD(thread_inputs_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_j_fu_341_p2);
    sensitive << ( j_0_reg_288 );

    SC_METHOD(thread_k_fu_495_p2);
    sensitive << ( k_0_reg_323 );

    SC_METHOD(thread_or_ln14_fu_370_p2);
    sensitive << ( shl_ln_fu_352_p3 );

    SC_METHOD(thread_or_ln15_fu_412_p2);
    sensitive << ( shl_ln_reg_612 );

    SC_METHOD(thread_or_ln16_fu_422_p2);
    sensitive << ( shl_ln_reg_612 );

    SC_METHOD(thread_or_ln33_fu_514_p2);
    sensitive << ( shl_ln1_fu_501_p3 );

    SC_METHOD(thread_or_ln34_fu_525_p2);
    sensitive << ( shl_ln1_reg_677 );

    SC_METHOD(thread_or_ln35_fu_535_p2);
    sensitive << ( shl_ln1_reg_677 );

    SC_METHOD(thread_outputs_address0);
    sensitive << ( zext_ln36_1_fu_566_p1 );
    sensitive << ( zext_ln36_1_reg_733 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_outputs_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_outputs_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln42_fu_594_p1 );

    SC_METHOD(thread_outputs_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( p_090_0217_reg_300 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_r_V_fu_468_p2);
    sensitive << ( cnt_V_q0 );

    SC_METHOD(thread_shl_ln1_fu_501_p3);
    sensitive << ( k_0_reg_323 );

    SC_METHOD(thread_shl_ln_fu_352_p3);
    sensitive << ( j_0_reg_288 );

    SC_METHOD(thread_tmp_1_fu_582_p5);
    sensitive << ( FR_V_q0 );
    sensitive << ( zext_ln555_2_fu_578_p1 );
    sensitive << ( zext_ln555_1_fu_575_p1 );
    sensitive << ( zext_ln555_fu_572_p1 );

    SC_METHOD(thread_tmp_fu_545_p8);
    sensitive << ( cnt_V_q0 );
    sensitive << ( cnt_V_load_reg_703 );
    sensitive << ( cnt_V_q1 );
    sensitive << ( cnt_V_load_1_reg_708 );

    SC_METHOD(thread_trunc_ln301_3_fu_449_p1);
    sensitive << ( inputs_q0 );

    SC_METHOD(thread_trunc_ln301_fu_365_p1);
    sensitive << ( counts_q0 );

    SC_METHOD(thread_zext_ln13_1_fu_347_p1);
    sensitive << ( j_0_reg_288 );

    SC_METHOD(thread_zext_ln13_fu_360_p1);
    sensitive << ( shl_ln_fu_352_p3 );

    SC_METHOD(thread_zext_ln14_fu_376_p1);
    sensitive << ( or_ln14_fu_370_p2 );

    SC_METHOD(thread_zext_ln15_fu_417_p1);
    sensitive << ( or_ln15_fu_412_p2 );

    SC_METHOD(thread_zext_ln16_fu_427_p1);
    sensitive << ( or_ln16_fu_422_p2 );

    SC_METHOD(thread_zext_ln209_1_fu_478_p1);
    sensitive << ( cnt_V_q0 );

    SC_METHOD(thread_zext_ln209_fu_474_p1);
    sensitive << ( r_V_fu_468_p2 );

    SC_METHOD(thread_zext_ln20_fu_444_p1);
    sensitive << ( i_0_reg_312 );

    SC_METHOD(thread_zext_ln32_fu_509_p1);
    sensitive << ( shl_ln1_fu_501_p3 );

    SC_METHOD(thread_zext_ln33_fu_520_p1);
    sensitive << ( or_ln33_fu_514_p2 );

    SC_METHOD(thread_zext_ln34_fu_530_p1);
    sensitive << ( or_ln34_fu_525_p2 );

    SC_METHOD(thread_zext_ln35_fu_540_p1);
    sensitive << ( or_ln35_fu_535_p2 );

    SC_METHOD(thread_zext_ln36_1_fu_566_p1);
    sensitive << ( k_0_reg_323 );

    SC_METHOD(thread_zext_ln42_fu_594_p1);
    sensitive << ( tmp_1_fu_582_p5 );

    SC_METHOD(thread_zext_ln555_1_fu_575_p1);
    sensitive << ( FR_V_load_1_reg_753 );

    SC_METHOD(thread_zext_ln555_2_fu_578_p1);
    sensitive << ( FR_V_q1 );

    SC_METHOD(thread_zext_ln555_fu_572_p1);
    sensitive << ( FR_V_load_reg_748 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln12_fu_335_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln19_fu_432_p2 );
    sensitive << ( update_V_reg_652 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln31_fu_489_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( p_090_0217_reg_300 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "estimate_FR_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inputs_address0, "inputs_address0");
    sc_trace(mVcdFile, inputs_ce0, "inputs_ce0");
    sc_trace(mVcdFile, inputs_q0, "inputs_q0");
    sc_trace(mVcdFile, counts_address0, "counts_address0");
    sc_trace(mVcdFile, counts_ce0, "counts_ce0");
    sc_trace(mVcdFile, counts_we0, "counts_we0");
    sc_trace(mVcdFile, counts_d0, "counts_d0");
    sc_trace(mVcdFile, counts_q0, "counts_q0");
    sc_trace(mVcdFile, outputs_address0, "outputs_address0");
    sc_trace(mVcdFile, outputs_ce0, "outputs_ce0");
    sc_trace(mVcdFile, outputs_we0, "outputs_we0");
    sc_trace(mVcdFile, outputs_d0, "outputs_d0");
    sc_trace(mVcdFile, j_fu_341_p2, "j_fu_341_p2");
    sc_trace(mVcdFile, j_reg_602, "j_reg_602");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln12_fu_335_p2, "icmp_ln12_fu_335_p2");
    sc_trace(mVcdFile, shl_ln_fu_352_p3, "shl_ln_fu_352_p3");
    sc_trace(mVcdFile, shl_ln_reg_612, "shl_ln_reg_612");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln301_2_reg_618, "trunc_ln301_2_reg_618");
    sc_trace(mVcdFile, trunc_ln1_reg_623, "trunc_ln1_reg_623");
    sc_trace(mVcdFile, i_fu_438_p2, "i_fu_438_p2");
    sc_trace(mVcdFile, i_reg_631, "i_reg_631");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln20_fu_444_p1, "zext_ln20_fu_444_p1");
    sc_trace(mVcdFile, zext_ln20_reg_636, "zext_ln20_reg_636");
    sc_trace(mVcdFile, icmp_ln19_fu_432_p2, "icmp_ln19_fu_432_p2");
    sc_trace(mVcdFile, trunc_ln301_3_fu_449_p1, "trunc_ln301_3_fu_449_p1");
    sc_trace(mVcdFile, trunc_ln301_3_reg_648, "trunc_ln301_3_reg_648");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, update_V_reg_652, "update_V_reg_652");
    sc_trace(mVcdFile, cnt_V_addr_4_reg_657, "cnt_V_addr_4_reg_657");
    sc_trace(mVcdFile, cnt_V_addr_9_gep_fu_178_p3, "cnt_V_addr_9_gep_fu_178_p3");
    sc_trace(mVcdFile, cnt_V_addr_9_reg_663, "cnt_V_addr_9_reg_663");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, k_fu_495_p2, "k_fu_495_p2");
    sc_trace(mVcdFile, k_reg_672, "k_reg_672");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, shl_ln1_fu_501_p3, "shl_ln1_fu_501_p3");
    sc_trace(mVcdFile, shl_ln1_reg_677, "shl_ln1_reg_677");
    sc_trace(mVcdFile, icmp_ln31_fu_489_p2, "icmp_ln31_fu_489_p2");
    sc_trace(mVcdFile, zext_ln32_fu_509_p1, "zext_ln32_fu_509_p1");
    sc_trace(mVcdFile, zext_ln32_reg_683, "zext_ln32_reg_683");
    sc_trace(mVcdFile, zext_ln33_fu_520_p1, "zext_ln33_fu_520_p1");
    sc_trace(mVcdFile, zext_ln33_reg_693, "zext_ln33_reg_693");
    sc_trace(mVcdFile, cnt_V_q0, "cnt_V_q0");
    sc_trace(mVcdFile, cnt_V_load_reg_703, "cnt_V_load_reg_703");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, cnt_V_q1, "cnt_V_q1");
    sc_trace(mVcdFile, cnt_V_load_1_reg_708, "cnt_V_load_1_reg_708");
    sc_trace(mVcdFile, zext_ln34_fu_530_p1, "zext_ln34_fu_530_p1");
    sc_trace(mVcdFile, zext_ln34_reg_713, "zext_ln34_reg_713");
    sc_trace(mVcdFile, zext_ln35_fu_540_p1, "zext_ln35_fu_540_p1");
    sc_trace(mVcdFile, zext_ln35_reg_723, "zext_ln35_reg_723");
    sc_trace(mVcdFile, zext_ln36_1_fu_566_p1, "zext_ln36_1_fu_566_p1");
    sc_trace(mVcdFile, zext_ln36_1_reg_733, "zext_ln36_1_reg_733");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, p_090_0217_reg_300, "p_090_0217_reg_300");
    sc_trace(mVcdFile, FR_V_q0, "FR_V_q0");
    sc_trace(mVcdFile, FR_V_load_reg_748, "FR_V_load_reg_748");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, FR_V_q1, "FR_V_q1");
    sc_trace(mVcdFile, FR_V_load_1_reg_753, "FR_V_load_1_reg_753");
    sc_trace(mVcdFile, cnt_V_address0, "cnt_V_address0");
    sc_trace(mVcdFile, cnt_V_ce0, "cnt_V_ce0");
    sc_trace(mVcdFile, cnt_V_we0, "cnt_V_we0");
    sc_trace(mVcdFile, cnt_V_d0, "cnt_V_d0");
    sc_trace(mVcdFile, cnt_V_address1, "cnt_V_address1");
    sc_trace(mVcdFile, cnt_V_ce1, "cnt_V_ce1");
    sc_trace(mVcdFile, cnt_V_we1, "cnt_V_we1");
    sc_trace(mVcdFile, cnt_V_d1, "cnt_V_d1");
    sc_trace(mVcdFile, FR_V_address0, "FR_V_address0");
    sc_trace(mVcdFile, FR_V_ce0, "FR_V_ce0");
    sc_trace(mVcdFile, FR_V_we0, "FR_V_we0");
    sc_trace(mVcdFile, FR_V_d0, "FR_V_d0");
    sc_trace(mVcdFile, FR_V_address1, "FR_V_address1");
    sc_trace(mVcdFile, FR_V_ce1, "FR_V_ce1");
    sc_trace(mVcdFile, j_0_reg_288, "j_0_reg_288");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_0_reg_312, "i_0_reg_312");
    sc_trace(mVcdFile, k_0_reg_323, "k_0_reg_323");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, zext_ln13_1_fu_347_p1, "zext_ln13_1_fu_347_p1");
    sc_trace(mVcdFile, zext_ln13_fu_360_p1, "zext_ln13_fu_360_p1");
    sc_trace(mVcdFile, zext_ln14_fu_376_p1, "zext_ln14_fu_376_p1");
    sc_trace(mVcdFile, zext_ln15_fu_417_p1, "zext_ln15_fu_417_p1");
    sc_trace(mVcdFile, zext_ln16_fu_427_p1, "zext_ln16_fu_427_p1");
    sc_trace(mVcdFile, trunc_ln301_fu_365_p1, "trunc_ln301_fu_365_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, add_ln700_fu_461_p2, "add_ln700_fu_461_p2");
    sc_trace(mVcdFile, zext_ln42_fu_594_p1, "zext_ln42_fu_594_p1");
    sc_trace(mVcdFile, or_ln14_fu_370_p2, "or_ln14_fu_370_p2");
    sc_trace(mVcdFile, or_ln15_fu_412_p2, "or_ln15_fu_412_p2");
    sc_trace(mVcdFile, or_ln16_fu_422_p2, "or_ln16_fu_422_p2");
    sc_trace(mVcdFile, r_V_fu_468_p2, "r_V_fu_468_p2");
    sc_trace(mVcdFile, zext_ln209_fu_474_p1, "zext_ln209_fu_474_p1");
    sc_trace(mVcdFile, zext_ln209_1_fu_478_p1, "zext_ln209_1_fu_478_p1");
    sc_trace(mVcdFile, or_ln33_fu_514_p2, "or_ln33_fu_514_p2");
    sc_trace(mVcdFile, or_ln34_fu_525_p2, "or_ln34_fu_525_p2");
    sc_trace(mVcdFile, or_ln35_fu_535_p2, "or_ln35_fu_535_p2");
    sc_trace(mVcdFile, tmp_fu_545_p8, "tmp_fu_545_p8");
    sc_trace(mVcdFile, zext_ln555_2_fu_578_p1, "zext_ln555_2_fu_578_p1");
    sc_trace(mVcdFile, zext_ln555_1_fu_575_p1, "zext_ln555_1_fu_575_p1");
    sc_trace(mVcdFile, zext_ln555_fu_572_p1, "zext_ln555_fu_572_p1");
    sc_trace(mVcdFile, tmp_1_fu_582_p5, "tmp_1_fu_582_p5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("estimate_FR_2.hdltvin.dat");
    mHdltvoutHandle.open("estimate_FR_2.hdltvout.dat");
}

estimate_FR_2::~estimate_FR_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete estimate_FR_2_AXILiteS_s_axi_U;
    delete cnt_V_U;
    delete FR_V_U;
}

void estimate_FR_2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void estimate_FR_2::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_335_p2.read(), ap_const_lv1_1))) {
        i_0_reg_312 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_reg_312 = i_reg_631.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_288 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_288 = j_reg_602.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_432_p2.read(), ap_const_lv1_1))) {
        k_0_reg_323 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        k_0_reg_323 = k_reg_672.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        FR_V_load_1_reg_753 = FR_V_q1.read();
        FR_V_load_reg_748 = FR_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(trunc_ln301_3_fu_449_p1.read(), ap_const_lv1_1))) {
        cnt_V_addr_4_reg_657 =  (sc_lv<7>) (zext_ln20_reg_636.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cnt_V_addr_9_reg_663 =  (sc_lv<7>) (zext_ln20_reg_636.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cnt_V_load_1_reg_708 = cnt_V_q1.read();
        cnt_V_load_reg_703 = cnt_V_q0.read();
        zext_ln34_reg_713 = zext_ln34_fu_530_p1.read();
        zext_ln35_reg_723 = zext_ln35_fu_540_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_631 = i_fu_438_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_reg_602 = j_fu_341_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        k_reg_672 = k_fu_495_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_090_0217_reg_300 = update_V_reg_652.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_489_p2.read()))) {
        shl_ln1_reg_677 = shl_ln1_fu_501_p3.read();
        zext_ln32_reg_683 = zext_ln32_fu_509_p1.read();
        zext_ln33_reg_693 = zext_ln33_fu_520_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        shl_ln_reg_612 = shl_ln_fu_352_p3.read();
        trunc_ln1_reg_623 = counts_q0.read().range(29, 24);
        trunc_ln301_2_reg_618 = counts_q0.read().range(21, 16);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        trunc_ln301_3_reg_648 = trunc_ln301_3_fu_449_p1.read();
        update_V_reg_652 = inputs_q0.read().range(1, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_432_p2.read()))) {
        zext_ln20_reg_636 = zext_ln20_fu_444_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        zext_ln36_1_reg_733 = zext_ln36_1_fu_566_p1.read();
    }
}

void estimate_FR_2::thread_FR_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        FR_V_address0 =  (sc_lv<7>) (zext_ln35_reg_723.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        FR_V_address0 =  (sc_lv<7>) (zext_ln32_reg_683.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        FR_V_address0 =  (sc_lv<7>) (zext_ln20_reg_636.read());
    } else {
        FR_V_address0 = "XXXXXXX";
    }
}

void estimate_FR_2::thread_FR_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        FR_V_address1 =  (sc_lv<7>) (zext_ln34_reg_713.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        FR_V_address1 =  (sc_lv<7>) (zext_ln33_reg_693.read());
    } else {
        FR_V_address1 = "XXXXXXX";
    }
}

void estimate_FR_2::thread_FR_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        FR_V_ce0 = ap_const_logic_1;
    } else {
        FR_V_ce0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_FR_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        FR_V_ce1 = ap_const_logic_1;
    } else {
        FR_V_ce1 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_FR_V_d0() {
    FR_V_d0 = (!zext_ln209_fu_474_p1.read().is_01() || !zext_ln209_1_fu_478_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln209_fu_474_p1.read()) + sc_biguint<7>(zext_ln209_1_fu_478_p1.read()));
}

void estimate_FR_2::thread_FR_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(update_V_reg_652.read(), ap_const_lv1_1))) {
        FR_V_we0 = ap_const_logic_1;
    } else {
        FR_V_we0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_add_ln700_fu_461_p2() {
    add_ln700_fu_461_p2 = (!cnt_V_q0.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(cnt_V_q0.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void estimate_FR_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void estimate_FR_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void estimate_FR_2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void estimate_FR_2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void estimate_FR_2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void estimate_FR_2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void estimate_FR_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void estimate_FR_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void estimate_FR_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void estimate_FR_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void estimate_FR_2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void estimate_FR_2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void estimate_FR_2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void estimate_FR_2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void estimate_FR_2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_489_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_489_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void estimate_FR_2::thread_cnt_V_addr_9_gep_fu_178_p3() {
    cnt_V_addr_9_gep_fu_178_p3 =  (sc_lv<7>) (zext_ln20_reg_636.read());
}

void estimate_FR_2::thread_cnt_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cnt_V_address0 =  (sc_lv<7>) (zext_ln34_fu_530_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cnt_V_address0 =  (sc_lv<7>) (zext_ln32_fu_509_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cnt_V_address0 = cnt_V_addr_9_gep_fu_178_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cnt_V_address0 =  (sc_lv<7>) (zext_ln20_reg_636.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cnt_V_address0 =  (sc_lv<7>) (zext_ln15_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cnt_V_address0 =  (sc_lv<7>) (zext_ln13_fu_360_p1.read());
    } else {
        cnt_V_address0 = "XXXXXXX";
    }
}

void estimate_FR_2::thread_cnt_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cnt_V_address1 =  (sc_lv<7>) (zext_ln35_fu_540_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cnt_V_address1 =  (sc_lv<7>) (zext_ln33_fu_520_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cnt_V_address1 = cnt_V_addr_9_reg_663.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cnt_V_address1 = cnt_V_addr_4_reg_657.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cnt_V_address1 =  (sc_lv<7>) (zext_ln16_fu_427_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cnt_V_address1 =  (sc_lv<7>) (zext_ln14_fu_376_p1.read());
    } else {
        cnt_V_address1 = "XXXXXXX";
    }
}

void estimate_FR_2::thread_cnt_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        cnt_V_ce0 = ap_const_logic_1;
    } else {
        cnt_V_ce0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_cnt_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        cnt_V_ce1 = ap_const_logic_1;
    } else {
        cnt_V_ce1 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_cnt_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cnt_V_d0 = trunc_ln301_2_reg_618.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cnt_V_d0 = trunc_ln301_fu_365_p1.read();
    } else {
        cnt_V_d0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void estimate_FR_2::thread_cnt_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cnt_V_d1 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cnt_V_d1 = add_ln700_fu_461_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cnt_V_d1 = trunc_ln1_reg_623.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cnt_V_d1 = counts_q0.read().range(13, 8);
    } else {
        cnt_V_d1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void estimate_FR_2::thread_cnt_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        cnt_V_we0 = ap_const_logic_1;
    } else {
        cnt_V_we0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_cnt_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(update_V_reg_652.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(trunc_ln301_3_reg_648.read(), ap_const_lv1_1)))) {
        cnt_V_we1 = ap_const_logic_1;
    } else {
        cnt_V_we1 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_counts_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        counts_address0 =  (sc_lv<5>) (zext_ln36_1_fu_566_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        counts_address0 =  (sc_lv<5>) (zext_ln13_1_fu_347_p1.read());
    } else {
        counts_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void estimate_FR_2::thread_counts_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        counts_ce0 = ap_const_logic_1;
    } else {
        counts_ce0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_counts_d0() {
    counts_d0 = esl_zext<32,30>(tmp_fu_545_p8.read());
}

void estimate_FR_2::thread_counts_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        counts_we0 = ap_const_logic_1;
    } else {
        counts_we0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_i_fu_438_p2() {
    i_fu_438_p2 = (!i_0_reg_312.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_312.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_FR_2::thread_icmp_ln12_fu_335_p2() {
    icmp_ln12_fu_335_p2 = (!j_0_reg_288.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_288.read() == ap_const_lv5_18);
}

void estimate_FR_2::thread_icmp_ln19_fu_432_p2() {
    icmp_ln19_fu_432_p2 = (!i_0_reg_312.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_312.read() == ap_const_lv7_60);
}

void estimate_FR_2::thread_icmp_ln31_fu_489_p2() {
    icmp_ln31_fu_489_p2 = (!k_0_reg_323.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_323.read() == ap_const_lv5_18);
}

void estimate_FR_2::thread_inputs_address0() {
    inputs_address0 =  (sc_lv<7>) (zext_ln20_fu_444_p1.read());
}

void estimate_FR_2::thread_inputs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        inputs_ce0 = ap_const_logic_1;
    } else {
        inputs_ce0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_j_fu_341_p2() {
    j_fu_341_p2 = (!j_0_reg_288.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_reg_288.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void estimate_FR_2::thread_k_fu_495_p2() {
    k_fu_495_p2 = (!k_0_reg_323.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_0_reg_323.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void estimate_FR_2::thread_or_ln14_fu_370_p2() {
    or_ln14_fu_370_p2 = (shl_ln_fu_352_p3.read() | ap_const_lv7_1);
}

void estimate_FR_2::thread_or_ln15_fu_412_p2() {
    or_ln15_fu_412_p2 = (shl_ln_reg_612.read() | ap_const_lv7_2);
}

void estimate_FR_2::thread_or_ln16_fu_422_p2() {
    or_ln16_fu_422_p2 = (shl_ln_reg_612.read() | ap_const_lv7_3);
}

void estimate_FR_2::thread_or_ln33_fu_514_p2() {
    or_ln33_fu_514_p2 = (shl_ln1_fu_501_p3.read() | ap_const_lv7_1);
}

void estimate_FR_2::thread_or_ln34_fu_525_p2() {
    or_ln34_fu_525_p2 = (shl_ln1_reg_677.read() | ap_const_lv7_2);
}

void estimate_FR_2::thread_or_ln35_fu_535_p2() {
    or_ln35_fu_535_p2 = (shl_ln1_reg_677.read() | ap_const_lv7_3);
}

void estimate_FR_2::thread_outputs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        outputs_address0 =  (sc_lv<5>) (zext_ln36_1_reg_733.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        outputs_address0 =  (sc_lv<5>) (zext_ln36_1_fu_566_p1.read());
    } else {
        outputs_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void estimate_FR_2::thread_outputs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        outputs_ce0 = ap_const_logic_1;
    } else {
        outputs_ce0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_outputs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        outputs_d0 = zext_ln42_fu_594_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        outputs_d0 = ap_const_lv32_1;
    } else {
        outputs_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_FR_2::thread_outputs_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, p_090_0217_reg_300.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, p_090_0217_reg_300.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())))) {
        outputs_we0 = ap_const_logic_1;
    } else {
        outputs_we0 = ap_const_logic_0;
    }
}

void estimate_FR_2::thread_r_V_fu_468_p2() {
    r_V_fu_468_p2 = (!ap_const_lv6_2.is_01())? sc_lv<6>(): cnt_V_q0.read() << (unsigned short)ap_const_lv6_2.to_uint();
}

void estimate_FR_2::thread_shl_ln1_fu_501_p3() {
    shl_ln1_fu_501_p3 = esl_concat<5,2>(k_0_reg_323.read(), ap_const_lv2_0);
}

void estimate_FR_2::thread_shl_ln_fu_352_p3() {
    shl_ln_fu_352_p3 = esl_concat<5,2>(j_0_reg_288.read(), ap_const_lv2_0);
}

void estimate_FR_2::thread_tmp_1_fu_582_p5() {
    tmp_1_fu_582_p5 = esl_concat<23,8>(esl_concat<15,8>(esl_concat<7,8>(FR_V_q0.read(), zext_ln555_2_fu_578_p1.read()), zext_ln555_1_fu_575_p1.read()), zext_ln555_fu_572_p1.read());
}

void estimate_FR_2::thread_tmp_fu_545_p8() {
    tmp_fu_545_p8 = esl_concat<24,6>(esl_concat<22,2>(esl_concat<16,6>(esl_concat<14,2>(esl_concat<8,6>(esl_concat<6,2>(cnt_V_q1.read(), ap_const_lv2_0), cnt_V_q0.read()), ap_const_lv2_0), cnt_V_load_1_reg_708.read()), ap_const_lv2_0), cnt_V_load_reg_703.read());
}

void estimate_FR_2::thread_trunc_ln301_3_fu_449_p1() {
    trunc_ln301_3_fu_449_p1 = inputs_q0.read().range(1-1, 0);
}

void estimate_FR_2::thread_trunc_ln301_fu_365_p1() {
    trunc_ln301_fu_365_p1 = counts_q0.read().range(6-1, 0);
}

void estimate_FR_2::thread_zext_ln13_1_fu_347_p1() {
    zext_ln13_1_fu_347_p1 = esl_zext<64,5>(j_0_reg_288.read());
}

void estimate_FR_2::thread_zext_ln13_fu_360_p1() {
    zext_ln13_fu_360_p1 = esl_zext<64,7>(shl_ln_fu_352_p3.read());
}

void estimate_FR_2::thread_zext_ln14_fu_376_p1() {
    zext_ln14_fu_376_p1 = esl_zext<64,7>(or_ln14_fu_370_p2.read());
}

void estimate_FR_2::thread_zext_ln15_fu_417_p1() {
    zext_ln15_fu_417_p1 = esl_zext<64,7>(or_ln15_fu_412_p2.read());
}

void estimate_FR_2::thread_zext_ln16_fu_427_p1() {
    zext_ln16_fu_427_p1 = esl_zext<64,7>(or_ln16_fu_422_p2.read());
}

void estimate_FR_2::thread_zext_ln209_1_fu_478_p1() {
    zext_ln209_1_fu_478_p1 = esl_zext<7,6>(cnt_V_q0.read());
}

void estimate_FR_2::thread_zext_ln209_fu_474_p1() {
    zext_ln209_fu_474_p1 = esl_zext<7,6>(r_V_fu_468_p2.read());
}

void estimate_FR_2::thread_zext_ln20_fu_444_p1() {
    zext_ln20_fu_444_p1 = esl_zext<64,7>(i_0_reg_312.read());
}

void estimate_FR_2::thread_zext_ln32_fu_509_p1() {
    zext_ln32_fu_509_p1 = esl_zext<64,7>(shl_ln1_fu_501_p3.read());
}

void estimate_FR_2::thread_zext_ln33_fu_520_p1() {
    zext_ln33_fu_520_p1 = esl_zext<64,7>(or_ln33_fu_514_p2.read());
}

void estimate_FR_2::thread_zext_ln34_fu_530_p1() {
    zext_ln34_fu_530_p1 = esl_zext<64,7>(or_ln34_fu_525_p2.read());
}

void estimate_FR_2::thread_zext_ln35_fu_540_p1() {
    zext_ln35_fu_540_p1 = esl_zext<64,7>(or_ln35_fu_535_p2.read());
}

void estimate_FR_2::thread_zext_ln36_1_fu_566_p1() {
    zext_ln36_1_fu_566_p1 = esl_zext<64,5>(k_0_reg_323.read());
}

void estimate_FR_2::thread_zext_ln42_fu_594_p1() {
    zext_ln42_fu_594_p1 = esl_zext<32,31>(tmp_1_fu_582_p5.read());
}

void estimate_FR_2::thread_zext_ln555_1_fu_575_p1() {
    zext_ln555_1_fu_575_p1 = esl_zext<8,7>(FR_V_load_1_reg_753.read());
}

void estimate_FR_2::thread_zext_ln555_2_fu_578_p1() {
    zext_ln555_2_fu_578_p1 = esl_zext<8,7>(FR_V_q1.read());
}

void estimate_FR_2::thread_zext_ln555_fu_572_p1() {
    zext_ln555_fu_572_p1 = esl_zext<8,7>(FR_V_load_reg_748.read());
}

void estimate_FR_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_335_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_432_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, update_V_reg_652.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_489_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, p_090_0217_reg_300.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

void estimate_FR_2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

