// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "estimate_ISI_encode.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic estimate_ISI_encode::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic estimate_ISI_encode::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state1 = "1";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state2 = "10";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state3 = "100";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state4 = "1000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state5 = "10000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state6 = "100000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state7 = "1000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state8 = "10000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state9 = "100000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state10 = "1000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state11 = "10000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state12 = "100000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<40> estimate_ISI_encode::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_0 = "00000000000000000000000000000000";
const int estimate_ISI_encode::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_A = "1010";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_10 = "10000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_16 = "10110";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_1D = "11101";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_1 = "1";
const sc_lv<1> estimate_ISI_encode::ap_const_lv1_0 = "0";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_2 = "10";
const sc_lv<1> estimate_ISI_encode::ap_const_lv1_1 = "1";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_3 = "11";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_4 = "100";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_B = "1011";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_17 = "10111";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_18 = "11000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_22 = "100010";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_23 = "100011";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_26 = "100110";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_0 = "0000000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_27 = "100111";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_F = "1111";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_24 = "100100";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_25 = "100101";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_1E = "11110";
const sc_lv<64> estimate_ISI_encode::ap_const_lv64_3FA0000000000000 = "11111110100000000000000000000000000000000000000000000000000000";
const sc_lv<64> estimate_ISI_encode::ap_const_lv64_3FEF000000000000 = "11111111101111000000000000000000000000000000000000000000000000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_11 = "10001";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_5 = "101";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_60 = "1100000";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_1 = "1";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_34 = "110100";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_3E = "111110";
const sc_lv<11> estimate_ISI_encode::ap_const_lv11_7FF = "11111111111";
const sc_lv<52> estimate_ISI_encode::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_3F = "111111";
const sc_lv<12> estimate_ISI_encode::ap_const_lv12_C01 = "110000000001";
const sc_lv<11> estimate_ISI_encode::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_35 = "110101";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_54 = "1010100";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_1F = "11111";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_9 = "1001";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_65 = "1100101";
const sc_lv<29> estimate_ISI_encode::ap_const_lv29_E = "1110";
const sc_lv<29> estimate_ISI_encode::ap_const_lv29_D = "1101";
const sc_lv<5> estimate_ISI_encode::ap_const_lv5_3 = "11";
const bool estimate_ISI_encode::ap_const_boolean_1 = true;

estimate_ISI_encode::estimate_ISI_encode(sc_module_name name) : sc_module(name), mVcdFile(0) {
    estimate_ISI_encode_AXILiteS_s_axi_U = new estimate_ISI_encode_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("estimate_ISI_encode_AXILiteS_s_axi_U");
    estimate_ISI_encode_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    estimate_ISI_encode_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    estimate_ISI_encode_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    estimate_ISI_encode_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    estimate_ISI_encode_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    estimate_ISI_encode_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    estimate_ISI_encode_AXILiteS_s_axi_U->ACLK(ap_clk);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    estimate_ISI_encode_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_start(ap_start);
    estimate_ISI_encode_AXILiteS_s_axi_U->interrupt(interrupt);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_ready(ap_ready);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_done(ap_done);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_idle(ap_idle);
    estimate_ISI_encode_AXILiteS_s_axi_U->spks_address0(spks_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spks_ce0(spks_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spks_q0(spks_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spksTime(spksTime);
    estimate_ISI_encode_AXILiteS_s_axi_U->update_address0(update_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->update_ce0(update_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->update_q0(update_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ISIPre_address0(ISIPre_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ISIPre_ce0(ISIPre_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ISIPre_we0(ISIPre_we0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ISIPre_d0(ISI_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ISIPre_q0(ISIPre_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spksPre_address0(spksPre_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spksPre_ce0(spksPre_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spksPre_we0(spksPre_we0);
    estimate_ISI_encode_AXILiteS_s_axi_U->spksPre_d0(spksTime_read_reg_595);
    estimate_ISI_encode_AXILiteS_s_axi_U->spksPre_q0(spksPre_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_address0(output_r_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_ce0(output_r_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_we0(output_r_we0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_d0(output_r_d0);
    ISI_U = new estimate_ISI_encode_ISI("ISI_U");
    ISI_U->clk(ap_clk);
    ISI_U->reset(ap_rst_n_inv);
    ISI_U->address0(ISI_address0);
    ISI_U->ce0(ISI_ce0);
    ISI_U->we0(ISI_we0);
    ISI_U->d0(ISI_d0);
    ISI_U->q0(ISI_q0);
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1 = new estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>("estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1");
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1->clk(ap_clk);
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1->din0(reg_256);
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1->din1(tmp_4_reg_669);
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1->ce(ap_var_for_const0);
    estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1->dout(grp_fu_232_p2);
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2 = new estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>("estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2");
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2->clk(ap_clk);
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2->reset(ap_rst_n_inv);
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2->din0(grp_fu_236_p0);
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2->din1(grp_fu_236_p1);
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2->ce(ap_var_for_const0);
    estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2->dout(grp_fu_236_p2);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3 = new estimate_ISI_encode_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>("estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3");
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->clk(ap_clk);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->reset(ap_rst_n_inv);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->din0(tmp_reg_675);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->din1(reg_256);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->ce(ap_var_for_const0);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->opcode(ap_var_for_const1);
    estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3->dout(grp_fu_242_p2);
    estimate_ISI_encode_sitodp_32ns_64_6_1_U4 = new estimate_ISI_encode_sitodp_32ns_64_6_1<1,6,32,64>("estimate_ISI_encode_sitodp_32ns_64_6_1_U4");
    estimate_ISI_encode_sitodp_32ns_64_6_1_U4->clk(ap_clk);
    estimate_ISI_encode_sitodp_32ns_64_6_1_U4->reset(ap_rst_n_inv);
    estimate_ISI_encode_sitodp_32ns_64_6_1_U4->din0(grp_fu_246_p0);
    estimate_ISI_encode_sitodp_32ns_64_6_1_U4->ce(ap_var_for_const0);
    estimate_ISI_encode_sitodp_32ns_64_6_1_U4->dout(grp_fu_246_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ISIPre_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln9_reg_609 );
    sensitive << ( ISIPre_addr_reg_649 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ISIPre_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ISIPre_we0);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ISI_address0);
    sensitive << ( zext_ln9_reg_609 );
    sensitive << ( ISI_addr_reg_654 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ISI_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ISI_d0);
    sensitive << ( sub_ln11_reg_642 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( p_Val2_6_fu_514_p3 );

    SC_METHOD(thread_ISI_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( and_ln14_1_reg_701 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_add_ln502_fu_423_p2);
    sensitive << ( zext_ln502_fu_419_p1 );

    SC_METHOD(thread_and_ln14_1_fu_374_p2);
    sensitive << ( and_ln14_fu_368_p2 );
    sensitive << ( grp_fu_242_p2 );

    SC_METHOD(thread_and_ln14_fu_368_p2);
    sensitive << ( or_ln14_fu_360_p2 );
    sensitive << ( or_ln14_1_fu_364_p2 );

    SC_METHOD(thread_and_ln32_fu_541_p2);
    sensitive << ( icmp_ln32_fu_521_p2 );
    sensitive << ( xor_ln32_fu_535_p2 );

    SC_METHOD(thread_and_ln34_fu_559_p2);
    sensitive << ( icmp_ln34_fu_547_p2 );
    sensitive << ( icmp_ln34_1_fu_553_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_262_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_262_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln14_1_fu_318_p1);
    sensitive << ( reg_256 );

    SC_METHOD(thread_bitcast_ln14_fu_301_p1);
    sensitive << ( tmp_reg_675 );

    SC_METHOD(thread_grp_fu_236_p0);
    sensitive << ( reg_250 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_4_reg_669 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_236_p1);
    sensitive << ( reg_250 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_246_p0);
    sensitive << ( ISIPre_q0 );
    sensitive << ( sub_ln11_reg_642 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sub_ln14_reg_664 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln10_fu_285_p2);
    sensitive << ( spks_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln14_1_fu_342_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( trunc_ln14_fu_314_p1 );

    SC_METHOD(thread_icmp_ln14_2_fu_348_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_2_fu_322_p4 );

    SC_METHOD(thread_icmp_ln14_3_fu_354_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( trunc_ln14_1_fu_332_p1 );

    SC_METHOD(thread_icmp_ln14_fu_336_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_1_fu_304_p4 );

    SC_METHOD(thread_icmp_ln32_fu_521_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ISI_q0 );

    SC_METHOD(thread_icmp_ln34_1_fu_553_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ISI_q0 );

    SC_METHOD(thread_icmp_ln34_fu_547_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ISI_q0 );

    SC_METHOD(thread_icmp_ln8_fu_262_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_reg_221 );

    SC_METHOD(thread_icmp_ln9_fu_279_p2);
    sensitive << ( update_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_isNeg_fu_429_p3);
    sensitive << ( add_ln502_fu_423_p2 );

    SC_METHOD(thread_j_fu_268_p2);
    sensitive << ( j_0_reg_221 );

    SC_METHOD(thread_mantissa_V_fu_405_p4);
    sensitive << ( tmp_V_1_fu_401_p1 );

    SC_METHOD(thread_or_ln14_1_fu_364_p2);
    sensitive << ( icmp_ln14_2_reg_691 );
    sensitive << ( icmp_ln14_3_reg_696 );

    SC_METHOD(thread_or_ln14_fu_360_p2);
    sensitive << ( icmp_ln14_reg_681 );
    sensitive << ( icmp_ln14_1_reg_686 );

    SC_METHOD(thread_output_addr_1_gep_fu_213_p3);
    sensitive << ( zext_ln9_reg_609 );
    sensitive << ( icmp_ln9_reg_624 );
    sensitive << ( icmp_ln10_reg_633 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( zext_ln9_reg_609 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( output_addr_1_gep_fu_213_p3 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( zext_ln32_fu_591_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( icmp_ln9_fu_279_p2 );
    sensitive << ( icmp_ln9_reg_624 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln10_reg_633 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_p_Val2_5_fu_501_p3);
    sensitive << ( isNeg_fu_429_p3 );
    sensitive << ( zext_ln662_fu_487_p1 );
    sensitive << ( tmp_s_fu_491_p4 );

    SC_METHOD(thread_p_Val2_6_fu_514_p3);
    sensitive << ( p_Result_s_reg_710 );
    sensitive << ( p_Val2_5_reg_715 );
    sensitive << ( result_V_1_fu_509_p2 );

    SC_METHOD(thread_p_Val2_s_fu_380_p1);
    sensitive << ( x_assign_reg_705 );

    SC_METHOD(thread_r_V_1_fu_473_p2);
    sensitive << ( zext_ln682_fu_415_p1 );
    sensitive << ( zext_ln1287_fu_459_p1 );

    SC_METHOD(thread_r_V_fu_467_p2);
    sensitive << ( mantissa_V_fu_405_p4 );
    sensitive << ( zext_ln1285_fu_463_p1 );

    SC_METHOD(thread_result_V_1_fu_509_p2);
    sensitive << ( p_Val2_5_reg_715 );

    SC_METHOD(thread_select_ln32_fu_583_p3);
    sensitive << ( and_ln32_fu_541_p2 );
    sensitive << ( select_ln34_fu_575_p3 );

    SC_METHOD(thread_select_ln34_fu_575_p3);
    sensitive << ( and_ln34_fu_559_p2 );
    sensitive << ( trunc_ln1_fu_565_p4 );

    SC_METHOD(thread_sext_ln1311_1_fu_455_p1);
    sensitive << ( ush_fu_447_p3 );

    SC_METHOD(thread_sext_ln1311_fu_443_p1);
    sensitive << ( sub_ln1311_fu_437_p2 );

    SC_METHOD(thread_spksPre_address0);
    sensitive << ( zext_ln9_reg_609 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( spksPre_addr_reg_637 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_spksPre_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_spksPre_we0);
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_spks_address0);
    sensitive << ( zext_ln9_reg_609 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_spks_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sub_ln11_fu_291_p2);
    sensitive << ( spksPre_q0 );
    sensitive << ( spksTime_read_reg_595 );

    SC_METHOD(thread_sub_ln1311_fu_437_p2);
    sensitive << ( tmp_V_fu_391_p4 );

    SC_METHOD(thread_sub_ln14_fu_296_p2);
    sensitive << ( ISIPre_q0 );
    sensitive << ( sub_ln11_reg_642 );

    SC_METHOD(thread_tmp_12_fu_479_p3);
    sensitive << ( r_V_fu_467_p2 );

    SC_METHOD(thread_tmp_13_fu_527_p3);
    sensitive << ( ISI_q0 );

    SC_METHOD(thread_tmp_1_fu_304_p4);
    sensitive << ( bitcast_ln14_fu_301_p1 );

    SC_METHOD(thread_tmp_2_fu_322_p4);
    sensitive << ( bitcast_ln14_1_fu_318_p1 );

    SC_METHOD(thread_tmp_V_1_fu_401_p1);
    sensitive << ( p_Val2_s_fu_380_p1 );

    SC_METHOD(thread_tmp_V_fu_391_p4);
    sensitive << ( p_Val2_s_fu_380_p1 );

    SC_METHOD(thread_tmp_s_fu_491_p4);
    sensitive << ( r_V_1_fu_473_p2 );

    SC_METHOD(thread_trunc_ln14_1_fu_332_p1);
    sensitive << ( bitcast_ln14_1_fu_318_p1 );

    SC_METHOD(thread_trunc_ln14_fu_314_p1);
    sensitive << ( bitcast_ln14_fu_301_p1 );

    SC_METHOD(thread_trunc_ln1_fu_565_p4);
    sensitive << ( ISI_q0 );

    SC_METHOD(thread_update_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln9_fu_274_p1 );

    SC_METHOD(thread_update_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ush_fu_447_p3);
    sensitive << ( add_ln502_fu_423_p2 );
    sensitive << ( isNeg_fu_429_p3 );
    sensitive << ( sext_ln1311_fu_443_p1 );

    SC_METHOD(thread_xor_ln32_fu_535_p2);
    sensitive << ( tmp_13_fu_527_p3 );

    SC_METHOD(thread_zext_ln1285_fu_463_p1);
    sensitive << ( sext_ln1311_1_fu_455_p1 );

    SC_METHOD(thread_zext_ln1287_fu_459_p1);
    sensitive << ( sext_ln1311_1_fu_455_p1 );

    SC_METHOD(thread_zext_ln32_fu_591_p1);
    sensitive << ( select_ln32_reg_721 );

    SC_METHOD(thread_zext_ln502_fu_419_p1);
    sensitive << ( tmp_V_fu_391_p4 );

    SC_METHOD(thread_zext_ln662_fu_487_p1);
    sensitive << ( tmp_12_fu_479_p3 );

    SC_METHOD(thread_zext_ln682_fu_415_p1);
    sensitive << ( mantissa_V_fu_405_p4 );

    SC_METHOD(thread_zext_ln9_fu_274_p1);
    sensitive << ( j_0_reg_221 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_262_p2 );
    sensitive << ( icmp_ln9_fu_279_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln10_fu_285_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln14_1_fu_374_p2 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "estimate_ISI_encode_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, spks_address0, "spks_address0");
    sc_trace(mVcdFile, spks_ce0, "spks_ce0");
    sc_trace(mVcdFile, spks_q0, "spks_q0");
    sc_trace(mVcdFile, spksTime, "spksTime");
    sc_trace(mVcdFile, update_address0, "update_address0");
    sc_trace(mVcdFile, update_ce0, "update_ce0");
    sc_trace(mVcdFile, update_q0, "update_q0");
    sc_trace(mVcdFile, ISIPre_address0, "ISIPre_address0");
    sc_trace(mVcdFile, ISIPre_ce0, "ISIPre_ce0");
    sc_trace(mVcdFile, ISIPre_we0, "ISIPre_we0");
    sc_trace(mVcdFile, ISIPre_q0, "ISIPre_q0");
    sc_trace(mVcdFile, spksPre_address0, "spksPre_address0");
    sc_trace(mVcdFile, spksPre_ce0, "spksPre_ce0");
    sc_trace(mVcdFile, spksPre_we0, "spksPre_we0");
    sc_trace(mVcdFile, spksPre_q0, "spksPre_q0");
    sc_trace(mVcdFile, output_r_address0, "output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "output_r_d0");
    sc_trace(mVcdFile, grp_fu_246_p1, "grp_fu_246_p1");
    sc_trace(mVcdFile, reg_250, "reg_250");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_fu_236_p2, "grp_fu_236_p2");
    sc_trace(mVcdFile, reg_256, "reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, spksTime_read_reg_595, "spksTime_read_reg_595");
    sc_trace(mVcdFile, j_fu_268_p2, "j_fu_268_p2");
    sc_trace(mVcdFile, j_reg_604, "j_reg_604");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln9_fu_274_p1, "zext_ln9_fu_274_p1");
    sc_trace(mVcdFile, zext_ln9_reg_609, "zext_ln9_reg_609");
    sc_trace(mVcdFile, icmp_ln8_fu_262_p2, "icmp_ln8_fu_262_p2");
    sc_trace(mVcdFile, icmp_ln9_fu_279_p2, "icmp_ln9_fu_279_p2");
    sc_trace(mVcdFile, icmp_ln9_reg_624, "icmp_ln9_reg_624");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln10_fu_285_p2, "icmp_ln10_fu_285_p2");
    sc_trace(mVcdFile, icmp_ln10_reg_633, "icmp_ln10_reg_633");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, spksPre_addr_reg_637, "spksPre_addr_reg_637");
    sc_trace(mVcdFile, sub_ln11_fu_291_p2, "sub_ln11_fu_291_p2");
    sc_trace(mVcdFile, sub_ln11_reg_642, "sub_ln11_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ISIPre_addr_reg_649, "ISIPre_addr_reg_649");
    sc_trace(mVcdFile, ISI_addr_reg_654, "ISI_addr_reg_654");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, sub_ln14_fu_296_p2, "sub_ln14_fu_296_p2");
    sc_trace(mVcdFile, sub_ln14_reg_664, "sub_ln14_reg_664");
    sc_trace(mVcdFile, tmp_4_reg_669, "tmp_4_reg_669");
    sc_trace(mVcdFile, tmp_reg_675, "tmp_reg_675");
    sc_trace(mVcdFile, icmp_ln14_fu_336_p2, "icmp_ln14_fu_336_p2");
    sc_trace(mVcdFile, icmp_ln14_reg_681, "icmp_ln14_reg_681");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, icmp_ln14_1_fu_342_p2, "icmp_ln14_1_fu_342_p2");
    sc_trace(mVcdFile, icmp_ln14_1_reg_686, "icmp_ln14_1_reg_686");
    sc_trace(mVcdFile, icmp_ln14_2_fu_348_p2, "icmp_ln14_2_fu_348_p2");
    sc_trace(mVcdFile, icmp_ln14_2_reg_691, "icmp_ln14_2_reg_691");
    sc_trace(mVcdFile, icmp_ln14_3_fu_354_p2, "icmp_ln14_3_fu_354_p2");
    sc_trace(mVcdFile, icmp_ln14_3_reg_696, "icmp_ln14_3_reg_696");
    sc_trace(mVcdFile, and_ln14_1_fu_374_p2, "and_ln14_1_fu_374_p2");
    sc_trace(mVcdFile, and_ln14_1_reg_701, "and_ln14_1_reg_701");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_232_p2, "grp_fu_232_p2");
    sc_trace(mVcdFile, x_assign_reg_705, "x_assign_reg_705");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, p_Result_s_reg_710, "p_Result_s_reg_710");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, p_Val2_5_fu_501_p3, "p_Val2_5_fu_501_p3");
    sc_trace(mVcdFile, p_Val2_5_reg_715, "p_Val2_5_reg_715");
    sc_trace(mVcdFile, select_ln32_fu_583_p3, "select_ln32_fu_583_p3");
    sc_trace(mVcdFile, select_ln32_reg_721, "select_ln32_reg_721");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ISI_address0, "ISI_address0");
    sc_trace(mVcdFile, ISI_ce0, "ISI_ce0");
    sc_trace(mVcdFile, ISI_we0, "ISI_we0");
    sc_trace(mVcdFile, ISI_d0, "ISI_d0");
    sc_trace(mVcdFile, ISI_q0, "ISI_q0");
    sc_trace(mVcdFile, j_0_reg_221, "j_0_reg_221");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, output_addr_1_gep_fu_213_p3, "output_addr_1_gep_fu_213_p3");
    sc_trace(mVcdFile, zext_ln32_fu_591_p1, "zext_ln32_fu_591_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, p_Val2_6_fu_514_p3, "p_Val2_6_fu_514_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_236_p0, "grp_fu_236_p0");
    sc_trace(mVcdFile, grp_fu_236_p1, "grp_fu_236_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_246_p0, "grp_fu_246_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, bitcast_ln14_fu_301_p1, "bitcast_ln14_fu_301_p1");
    sc_trace(mVcdFile, bitcast_ln14_1_fu_318_p1, "bitcast_ln14_1_fu_318_p1");
    sc_trace(mVcdFile, tmp_1_fu_304_p4, "tmp_1_fu_304_p4");
    sc_trace(mVcdFile, trunc_ln14_fu_314_p1, "trunc_ln14_fu_314_p1");
    sc_trace(mVcdFile, tmp_2_fu_322_p4, "tmp_2_fu_322_p4");
    sc_trace(mVcdFile, trunc_ln14_1_fu_332_p1, "trunc_ln14_1_fu_332_p1");
    sc_trace(mVcdFile, or_ln14_fu_360_p2, "or_ln14_fu_360_p2");
    sc_trace(mVcdFile, or_ln14_1_fu_364_p2, "or_ln14_1_fu_364_p2");
    sc_trace(mVcdFile, and_ln14_fu_368_p2, "and_ln14_fu_368_p2");
    sc_trace(mVcdFile, grp_fu_242_p2, "grp_fu_242_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_380_p1, "p_Val2_s_fu_380_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_401_p1, "tmp_V_1_fu_401_p1");
    sc_trace(mVcdFile, mantissa_V_fu_405_p4, "mantissa_V_fu_405_p4");
    sc_trace(mVcdFile, tmp_V_fu_391_p4, "tmp_V_fu_391_p4");
    sc_trace(mVcdFile, zext_ln502_fu_419_p1, "zext_ln502_fu_419_p1");
    sc_trace(mVcdFile, add_ln502_fu_423_p2, "add_ln502_fu_423_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_437_p2, "sub_ln1311_fu_437_p2");
    sc_trace(mVcdFile, isNeg_fu_429_p3, "isNeg_fu_429_p3");
    sc_trace(mVcdFile, sext_ln1311_fu_443_p1, "sext_ln1311_fu_443_p1");
    sc_trace(mVcdFile, ush_fu_447_p3, "ush_fu_447_p3");
    sc_trace(mVcdFile, sext_ln1311_1_fu_455_p1, "sext_ln1311_1_fu_455_p1");
    sc_trace(mVcdFile, zext_ln1285_fu_463_p1, "zext_ln1285_fu_463_p1");
    sc_trace(mVcdFile, zext_ln682_fu_415_p1, "zext_ln682_fu_415_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_459_p1, "zext_ln1287_fu_459_p1");
    sc_trace(mVcdFile, r_V_fu_467_p2, "r_V_fu_467_p2");
    sc_trace(mVcdFile, tmp_12_fu_479_p3, "tmp_12_fu_479_p3");
    sc_trace(mVcdFile, r_V_1_fu_473_p2, "r_V_1_fu_473_p2");
    sc_trace(mVcdFile, zext_ln662_fu_487_p1, "zext_ln662_fu_487_p1");
    sc_trace(mVcdFile, tmp_s_fu_491_p4, "tmp_s_fu_491_p4");
    sc_trace(mVcdFile, result_V_1_fu_509_p2, "result_V_1_fu_509_p2");
    sc_trace(mVcdFile, tmp_13_fu_527_p3, "tmp_13_fu_527_p3");
    sc_trace(mVcdFile, icmp_ln32_fu_521_p2, "icmp_ln32_fu_521_p2");
    sc_trace(mVcdFile, xor_ln32_fu_535_p2, "xor_ln32_fu_535_p2");
    sc_trace(mVcdFile, icmp_ln34_fu_547_p2, "icmp_ln34_fu_547_p2");
    sc_trace(mVcdFile, icmp_ln34_1_fu_553_p2, "icmp_ln34_1_fu_553_p2");
    sc_trace(mVcdFile, and_ln34_fu_559_p2, "and_ln34_fu_559_p2");
    sc_trace(mVcdFile, trunc_ln1_fu_565_p4, "trunc_ln1_fu_565_p4");
    sc_trace(mVcdFile, and_ln32_fu_541_p2, "and_ln32_fu_541_p2");
    sc_trace(mVcdFile, select_ln34_fu_575_p3, "select_ln34_fu_575_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("estimate_ISI_encode.hdltvin.dat");
    mHdltvoutHandle.open("estimate_ISI_encode.hdltvout.dat");
}

estimate_ISI_encode::~estimate_ISI_encode() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete estimate_ISI_encode_AXILiteS_s_axi_U;
    delete ISI_U;
    delete estimate_ISI_encode_dsub_64ns_64ns_64_5_full_dsp_1_U1;
    delete estimate_ISI_encode_dmul_64ns_64ns_64_6_max_dsp_1_U2;
    delete estimate_ISI_encode_dcmp_64ns_64ns_1_2_1_U3;
    delete estimate_ISI_encode_sitodp_32ns_64_6_1_U4;
}

void estimate_ISI_encode::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void estimate_ISI_encode::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_3;
}

void estimate_ISI_encode::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        j_0_reg_221 = j_reg_604.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_221 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ISIPre_addr_reg_649 =  (sc_lv<7>) (zext_ln9_reg_609.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ISI_addr_reg_654 =  (sc_lv<7>) (zext_ln9_reg_609.read());
        sub_ln14_reg_664 = sub_ln14_fu_296_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        and_ln14_1_reg_701 = and_ln14_1_fu_374_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        icmp_ln10_reg_633 = icmp_ln10_fu_285_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        icmp_ln14_1_reg_686 = icmp_ln14_1_fu_342_p2.read();
        icmp_ln14_2_reg_691 = icmp_ln14_2_fu_348_p2.read();
        icmp_ln14_3_reg_696 = icmp_ln14_3_fu_354_p2.read();
        icmp_ln14_reg_681 = icmp_ln14_fu_336_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln9_reg_624 = icmp_ln9_fu_279_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_reg_604 = j_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        p_Result_s_reg_710 = p_Val2_s_fu_380_p1.read().range(63, 63);
        p_Val2_5_reg_715 = p_Val2_5_fu_501_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        reg_250 = grp_fu_246_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        reg_256 = grp_fu_236_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        select_ln32_reg_721 = select_ln32_fu_583_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_285_p2.read()))) {
        spksPre_addr_reg_637 =  (sc_lv<7>) (zext_ln9_reg_609.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        spksTime_read_reg_595 = spksTime.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sub_ln11_reg_642 = sub_ln11_fu_291_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_4_reg_669 = grp_fu_236_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_reg_675 = grp_fu_246_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        x_assign_reg_705 = grp_fu_232_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_262_p2.read(), ap_const_lv1_0))) {
        zext_ln9_reg_609 = zext_ln9_fu_274_p1.read();
    }
}

void estimate_ISI_encode::thread_ISIPre_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        ISIPre_address0 = ISIPre_addr_reg_649.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ISIPre_address0 =  (sc_lv<7>) (zext_ln9_reg_609.read());
    } else {
        ISIPre_address0 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_ISIPre_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        ISIPre_ce0 = ap_const_logic_1;
    } else {
        ISIPre_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ISIPre_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        ISIPre_we0 = ap_const_logic_1;
    } else {
        ISIPre_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ISI_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        ISI_address0 = ISI_addr_reg_654.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ISI_address0 =  (sc_lv<7>) (zext_ln9_reg_609.read());
    } else {
        ISI_address0 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_ISI_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        ISI_ce0 = ap_const_logic_1;
    } else {
        ISI_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ISI_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ISI_d0 = p_Val2_6_fu_514_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ISI_d0 = sub_ln11_reg_642.read();
    } else {
        ISI_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_ISI_encode::thread_ISI_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln14_1_reg_701.read())))) {
        ISI_we0 = ap_const_logic_1;
    } else {
        ISI_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_add_ln502_fu_423_p2() {
    add_ln502_fu_423_p2 = (!ap_const_lv12_C01.is_01() || !zext_ln502_fu_419_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(zext_ln502_fu_419_p1.read()));
}

void estimate_ISI_encode::thread_and_ln14_1_fu_374_p2() {
    and_ln14_1_fu_374_p2 = (and_ln14_fu_368_p2.read() & grp_fu_242_p2.read());
}

void estimate_ISI_encode::thread_and_ln14_fu_368_p2() {
    and_ln14_fu_368_p2 = (or_ln14_fu_360_p2.read() & or_ln14_1_fu_364_p2.read());
}

void estimate_ISI_encode::thread_and_ln32_fu_541_p2() {
    and_ln32_fu_541_p2 = (icmp_ln32_fu_521_p2.read() & xor_ln32_fu_535_p2.read());
}

void estimate_ISI_encode::thread_and_ln34_fu_559_p2() {
    and_ln34_fu_559_p2 = (icmp_ln34_fu_547_p2.read() & icmp_ln34_1_fu_553_p2.read());
}

void estimate_ISI_encode::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void estimate_ISI_encode::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_262_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_262_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void estimate_ISI_encode::thread_bitcast_ln14_1_fu_318_p1() {
    bitcast_ln14_1_fu_318_p1 = reg_256.read();
}

void estimate_ISI_encode::thread_bitcast_ln14_fu_301_p1() {
    bitcast_ln14_fu_301_p1 = tmp_reg_675.read();
}

void estimate_ISI_encode::thread_grp_fu_236_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_236_p0 = tmp_4_reg_669.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        grp_fu_236_p0 = reg_250.read();
    } else {
        grp_fu_236_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_ISI_encode::thread_grp_fu_236_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_fu_236_p1 = ap_const_lv64_3FEF000000000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_236_p1 = reg_250.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_236_p1 = ap_const_lv64_3FA0000000000000;
    } else {
        grp_fu_236_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_ISI_encode::thread_grp_fu_246_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_246_p0 = sub_ln14_reg_664.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_246_p0 = ISIPre_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_246_p0 = sub_ln11_reg_642.read();
    } else {
        grp_fu_246_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_ISI_encode::thread_icmp_ln10_fu_285_p2() {
    icmp_ln10_fu_285_p2 = (!spks_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(spks_q0.read() == ap_const_lv32_1);
}

void estimate_ISI_encode::thread_icmp_ln14_1_fu_342_p2() {
    icmp_ln14_1_fu_342_p2 = (!trunc_ln14_fu_314_p1.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln14_fu_314_p1.read() == ap_const_lv52_0);
}

void estimate_ISI_encode::thread_icmp_ln14_2_fu_348_p2() {
    icmp_ln14_2_fu_348_p2 = (!tmp_2_fu_322_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_322_p4.read() != ap_const_lv11_7FF);
}

void estimate_ISI_encode::thread_icmp_ln14_3_fu_354_p2() {
    icmp_ln14_3_fu_354_p2 = (!trunc_ln14_1_fu_332_p1.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln14_1_fu_332_p1.read() == ap_const_lv52_0);
}

void estimate_ISI_encode::thread_icmp_ln14_fu_336_p2() {
    icmp_ln14_fu_336_p2 = (!tmp_1_fu_304_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_304_p4.read() != ap_const_lv11_7FF);
}

void estimate_ISI_encode::thread_icmp_ln32_fu_521_p2() {
    icmp_ln32_fu_521_p2 = (!ISI_q0.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_bigint<32>(ISI_q0.read()) < sc_bigint<32>(ap_const_lv32_A));
}

void estimate_ISI_encode::thread_icmp_ln34_1_fu_553_p2() {
    icmp_ln34_1_fu_553_p2 = (!ISI_q0.read().is_01() || !ap_const_lv32_65.is_01())? sc_lv<1>(): (sc_bigint<32>(ISI_q0.read()) < sc_bigint<32>(ap_const_lv32_65));
}

void estimate_ISI_encode::thread_icmp_ln34_fu_547_p2() {
    icmp_ln34_fu_547_p2 = (!ISI_q0.read().is_01() || !ap_const_lv32_9.is_01())? sc_lv<1>(): (sc_bigint<32>(ISI_q0.read()) > sc_bigint<32>(ap_const_lv32_9));
}

void estimate_ISI_encode::thread_icmp_ln8_fu_262_p2() {
    icmp_ln8_fu_262_p2 = (!j_0_reg_221.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_221.read() == ap_const_lv7_60);
}

void estimate_ISI_encode::thread_icmp_ln9_fu_279_p2() {
    icmp_ln9_fu_279_p2 = (!update_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(update_q0.read() == ap_const_lv32_1);
}

void estimate_ISI_encode::thread_isNeg_fu_429_p3() {
    isNeg_fu_429_p3 = add_ln502_fu_423_p2.read().range(11, 11);
}

void estimate_ISI_encode::thread_j_fu_268_p2() {
    j_fu_268_p2 = (!j_0_reg_221.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_221.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_ISI_encode::thread_mantissa_V_fu_405_p4() {
    mantissa_V_fu_405_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, tmp_V_1_fu_401_p1.read()), ap_const_lv1_0);
}

void estimate_ISI_encode::thread_or_ln14_1_fu_364_p2() {
    or_ln14_1_fu_364_p2 = (icmp_ln14_3_reg_696.read() | icmp_ln14_2_reg_691.read());
}

void estimate_ISI_encode::thread_or_ln14_fu_360_p2() {
    or_ln14_fu_360_p2 = (icmp_ln14_1_reg_686.read() | icmp_ln14_reg_681.read());
}

void estimate_ISI_encode::thread_output_addr_1_gep_fu_213_p3() {
    output_addr_1_gep_fu_213_p3 =  (sc_lv<7>) (zext_ln9_reg_609.read());
}

void estimate_ISI_encode::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        output_r_address0 = output_addr_1_gep_fu_213_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_address0 =  (sc_lv<7>) (zext_ln9_reg_609.read());
    } else {
        output_r_address0 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        output_r_d0 = zext_ln32_fu_591_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_d0 = ap_const_lv32_F;
    } else {
        output_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_ISI_encode::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln9_fu_279_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(icmp_ln9_reg_624.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_reg_633.read())))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_p_Val2_5_fu_501_p3() {
    p_Val2_5_fu_501_p3 = (!isNeg_fu_429_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_429_p3.read()[0].to_bool())? zext_ln662_fu_487_p1.read(): tmp_s_fu_491_p4.read());
}

void estimate_ISI_encode::thread_p_Val2_6_fu_514_p3() {
    p_Val2_6_fu_514_p3 = (!p_Result_s_reg_710.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_710.read()[0].to_bool())? result_V_1_fu_509_p2.read(): p_Val2_5_reg_715.read());
}

void estimate_ISI_encode::thread_p_Val2_s_fu_380_p1() {
    p_Val2_s_fu_380_p1 = x_assign_reg_705.read();
}

void estimate_ISI_encode::thread_r_V_1_fu_473_p2() {
    r_V_1_fu_473_p2 = (!zext_ln1287_fu_459_p1.read().is_01())? sc_lv<137>(): zext_ln682_fu_415_p1.read() << (unsigned short)zext_ln1287_fu_459_p1.read().to_uint();
}

void estimate_ISI_encode::thread_r_V_fu_467_p2() {
    r_V_fu_467_p2 = (!zext_ln1285_fu_463_p1.read().is_01())? sc_lv<54>(): mantissa_V_fu_405_p4.read() >> (unsigned short)zext_ln1285_fu_463_p1.read().to_uint();
}

void estimate_ISI_encode::thread_result_V_1_fu_509_p2() {
    result_V_1_fu_509_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_5_reg_715.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_5_reg_715.read()));
}

void estimate_ISI_encode::thread_select_ln32_fu_583_p3() {
    select_ln32_fu_583_p3 = (!and_ln32_fu_541_p2.read()[0].is_01())? sc_lv<29>(): ((and_ln32_fu_541_p2.read()[0].to_bool())? ap_const_lv29_D: select_ln34_fu_575_p3.read());
}

void estimate_ISI_encode::thread_select_ln34_fu_575_p3() {
    select_ln34_fu_575_p3 = (!and_ln34_fu_559_p2.read()[0].is_01())? sc_lv<29>(): ((and_ln34_fu_559_p2.read()[0].to_bool())? trunc_ln1_fu_565_p4.read(): ap_const_lv29_E);
}

void estimate_ISI_encode::thread_sext_ln1311_1_fu_455_p1() {
    sext_ln1311_1_fu_455_p1 = esl_sext<32,12>(ush_fu_447_p3.read());
}

void estimate_ISI_encode::thread_sext_ln1311_fu_443_p1() {
    sext_ln1311_fu_443_p1 = esl_sext<12,11>(sub_ln1311_fu_437_p2.read());
}

void estimate_ISI_encode::thread_spksPre_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        spksPre_address0 = spksPre_addr_reg_637.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        spksPre_address0 =  (sc_lv<7>) (zext_ln9_reg_609.read());
    } else {
        spksPre_address0 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_spksPre_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        spksPre_ce0 = ap_const_logic_1;
    } else {
        spksPre_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_spksPre_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        spksPre_we0 = ap_const_logic_1;
    } else {
        spksPre_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_spks_address0() {
    spks_address0 =  (sc_lv<7>) (zext_ln9_reg_609.read());
}

void estimate_ISI_encode::thread_spks_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        spks_ce0 = ap_const_logic_1;
    } else {
        spks_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_sub_ln11_fu_291_p2() {
    sub_ln11_fu_291_p2 = (!spksTime_read_reg_595.read().is_01() || !spksPre_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(spksTime_read_reg_595.read()) - sc_biguint<32>(spksPre_q0.read()));
}

void estimate_ISI_encode::thread_sub_ln1311_fu_437_p2() {
    sub_ln1311_fu_437_p2 = (!ap_const_lv11_3FF.is_01() || !tmp_V_fu_391_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(tmp_V_fu_391_p4.read()));
}

void estimate_ISI_encode::thread_sub_ln14_fu_296_p2() {
    sub_ln14_fu_296_p2 = (!ISIPre_q0.read().is_01() || !sub_ln11_reg_642.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ISIPre_q0.read()) - sc_biguint<32>(sub_ln11_reg_642.read()));
}

void estimate_ISI_encode::thread_tmp_12_fu_479_p3() {
    tmp_12_fu_479_p3 = r_V_fu_467_p2.read().range(53, 53);
}

void estimate_ISI_encode::thread_tmp_13_fu_527_p3() {
    tmp_13_fu_527_p3 = ISI_q0.read().range(31, 31);
}

void estimate_ISI_encode::thread_tmp_1_fu_304_p4() {
    tmp_1_fu_304_p4 = bitcast_ln14_fu_301_p1.read().range(62, 52);
}

void estimate_ISI_encode::thread_tmp_2_fu_322_p4() {
    tmp_2_fu_322_p4 = bitcast_ln14_1_fu_318_p1.read().range(62, 52);
}

void estimate_ISI_encode::thread_tmp_V_1_fu_401_p1() {
    tmp_V_1_fu_401_p1 = p_Val2_s_fu_380_p1.read().range(52-1, 0);
}

void estimate_ISI_encode::thread_tmp_V_fu_391_p4() {
    tmp_V_fu_391_p4 = p_Val2_s_fu_380_p1.read().range(62, 52);
}

void estimate_ISI_encode::thread_tmp_s_fu_491_p4() {
    tmp_s_fu_491_p4 = r_V_1_fu_473_p2.read().range(84, 53);
}

void estimate_ISI_encode::thread_trunc_ln14_1_fu_332_p1() {
    trunc_ln14_1_fu_332_p1 = bitcast_ln14_1_fu_318_p1.read().range(52-1, 0);
}

void estimate_ISI_encode::thread_trunc_ln14_fu_314_p1() {
    trunc_ln14_fu_314_p1 = bitcast_ln14_fu_301_p1.read().range(52-1, 0);
}

void estimate_ISI_encode::thread_trunc_ln1_fu_565_p4() {
    trunc_ln1_fu_565_p4 = ISI_q0.read().range(31, 3);
}

void estimate_ISI_encode::thread_update_address0() {
    update_address0 =  (sc_lv<7>) (zext_ln9_fu_274_p1.read());
}

void estimate_ISI_encode::thread_update_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        update_ce0 = ap_const_logic_1;
    } else {
        update_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ush_fu_447_p3() {
    ush_fu_447_p3 = (!isNeg_fu_429_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_429_p3.read()[0].to_bool())? sext_ln1311_fu_443_p1.read(): add_ln502_fu_423_p2.read());
}

void estimate_ISI_encode::thread_xor_ln32_fu_535_p2() {
    xor_ln32_fu_535_p2 = (tmp_13_fu_527_p3.read() ^ ap_const_lv1_1);
}

void estimate_ISI_encode::thread_zext_ln1285_fu_463_p1() {
    zext_ln1285_fu_463_p1 = esl_zext<54,32>(sext_ln1311_1_fu_455_p1.read());
}

void estimate_ISI_encode::thread_zext_ln1287_fu_459_p1() {
    zext_ln1287_fu_459_p1 = esl_zext<137,32>(sext_ln1311_1_fu_455_p1.read());
}

void estimate_ISI_encode::thread_zext_ln32_fu_591_p1() {
    zext_ln32_fu_591_p1 = esl_zext<32,29>(select_ln32_reg_721.read());
}

void estimate_ISI_encode::thread_zext_ln502_fu_419_p1() {
    zext_ln502_fu_419_p1 = esl_zext<12,11>(tmp_V_fu_391_p4.read());
}

void estimate_ISI_encode::thread_zext_ln662_fu_487_p1() {
    zext_ln662_fu_487_p1 = esl_zext<32,1>(tmp_12_fu_479_p3.read());
}

void estimate_ISI_encode::thread_zext_ln682_fu_415_p1() {
    zext_ln682_fu_415_p1 = esl_zext<137,54>(mantissa_V_fu_405_p4.read());
}

void estimate_ISI_encode::thread_zext_ln9_fu_274_p1() {
    zext_ln9_fu_274_p1 = esl_zext<64,7>(j_0_reg_221.read());
}

void estimate_ISI_encode::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_262_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln9_fu_279_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln10_fu_285_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln14_1_fu_374_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void estimate_ISI_encode::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

