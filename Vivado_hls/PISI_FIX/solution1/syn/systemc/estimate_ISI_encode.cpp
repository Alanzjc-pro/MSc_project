// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "estimate_ISI_encode.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic estimate_ISI_encode::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic estimate_ISI_encode::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state1 = "1";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state2 = "10";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state3 = "100";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state4 = "1000";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state5 = "10000";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state6 = "100000";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> estimate_ISI_encode::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_0 = "00000000000000000000000000000000";
const int estimate_ISI_encode::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_1 = "1";
const sc_lv<1> estimate_ISI_encode::ap_const_lv1_0 = "0";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_2 = "10";
const sc_lv<1> estimate_ISI_encode::ap_const_lv1_1 = "1";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_3 = "11";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_5 = "101";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_6 = "110";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_7 = "111";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_8 = "1000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_4 = "100";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_0 = "0000000";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_9 = "1001";
const sc_lv<4> estimate_ISI_encode::ap_const_lv4_0 = "0000";
const sc_lv<4> estimate_ISI_encode::ap_const_lv4_F = "1111";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_60 = "1100000";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_1 = "1";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_15 = "10101";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_D = "1101";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_14 = "10100";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_1D = "11101";
const sc_lv<2> estimate_ISI_encode::ap_const_lv2_0 = "00";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_17 = "10111";
const sc_lv<12> estimate_ISI_encode::ap_const_lv12_2 = "10";
const sc_lv<32> estimate_ISI_encode::ap_const_lv32_B = "1011";
const sc_lv<12> estimate_ISI_encode::ap_const_lv12_28 = "101000";
const sc_lv<12> estimate_ISI_encode::ap_const_lv12_190 = "110010000";
const sc_lv<4> estimate_ISI_encode::ap_const_lv4_D = "1101";
const sc_lv<4> estimate_ISI_encode::ap_const_lv4_E = "1110";
const sc_lv<4> estimate_ISI_encode::ap_const_lv4_C = "1100";
const sc_lv<4> estimate_ISI_encode::ap_const_lv4_1 = "1";
const sc_lv<3> estimate_ISI_encode::ap_const_lv3_0 = "000";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_2 = "10";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_3 = "11";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_4 = "100";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_5 = "101";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_6 = "110";
const sc_lv<7> estimate_ISI_encode::ap_const_lv7_7 = "111";
const bool estimate_ISI_encode::ap_const_boolean_1 = true;

estimate_ISI_encode::estimate_ISI_encode(sc_module_name name) : sc_module(name), mVcdFile(0) {
    estimate_ISI_encode_AXILiteS_s_axi_U = new estimate_ISI_encode_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("estimate_ISI_encode_AXILiteS_s_axi_U");
    estimate_ISI_encode_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    estimate_ISI_encode_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    estimate_ISI_encode_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    estimate_ISI_encode_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    estimate_ISI_encode_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    estimate_ISI_encode_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    estimate_ISI_encode_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    estimate_ISI_encode_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    estimate_ISI_encode_AXILiteS_s_axi_U->ACLK(ap_clk);
    estimate_ISI_encode_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    estimate_ISI_encode_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_start(ap_start);
    estimate_ISI_encode_AXILiteS_s_axi_U->interrupt(interrupt);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_ready(ap_ready);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_done(ap_done);
    estimate_ISI_encode_AXILiteS_s_axi_U->ap_idle(ap_idle);
    estimate_ISI_encode_AXILiteS_s_axi_U->inputs_address0(inputs_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->inputs_ce0(inputs_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->inputs_q0(inputs_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->rem_r_address0(rem_r_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->rem_r_ce0(rem_r_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->rem_r_we0(rem_r_we0);
    estimate_ISI_encode_AXILiteS_s_axi_U->rem_r_d0(rem_r_d0);
    estimate_ISI_encode_AXILiteS_s_axi_U->rem_r_q0(rem_r_q0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_address0(output_r_address0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_ce0(output_r_ce0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_we0(output_r_we0);
    estimate_ISI_encode_AXILiteS_s_axi_U->output_r_d0(output_r_d0);
    ISIquan_V_U = new estimate_ISI_encode_ISIquan_V("ISIquan_V_U");
    ISIquan_V_U->clk(ap_clk);
    ISIquan_V_U->reset(ap_rst_n_inv);
    ISIquan_V_U->address0(ISIquan_V_address0);
    ISIquan_V_U->ce0(ISIquan_V_ce0);
    ISIquan_V_U->we0(ISIquan_V_we0);
    ISIquan_V_U->d0(ISIquan_V_d0);
    ISIquan_V_U->q0(ISIquan_V_q0);
    ISIquan_V_U->address1(ISIquan_V_address1);
    ISIquan_V_U->ce1(ISIquan_V_ce1);
    ISIquan_V_U->q1(ISIquan_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ISIPre_V_fu_349_p3);
    sensitive << ( tmp_3_fu_339_p4 );

    SC_METHOD(thread_ISIPre_n_V_fu_388_p4);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_ISI_q_V_fu_546_p3);
    sensitive << ( or_ln1495_fu_540_p2 );
    sensitive << ( select_ln1495_fu_532_p3 );
    sensitive << ( trunc_ln_i_fu_510_p4 );

    SC_METHOD(thread_ISIquan_V_addr_9_gep_fu_187_p3);
    sensitive << ( zext_ln18_reg_679 );
    sensitive << ( trunc_ln301_reg_691 );
    sensitive << ( tmp_5_reg_695 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ISIquan_V_address0);
    sensitive << ( zext_ln18_reg_679 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ISIquan_V_addr_9_gep_fu_187_p3 );
    sensitive << ( zext_ln42_fu_575_p1 );
    sensitive << ( zext_ln45_fu_606_p1 );
    sensitive << ( zext_ln47_fu_626_p1 );
    sensitive << ( zext_ln49_fu_646_p1 );

    SC_METHOD(thread_ISIquan_V_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln43_fu_586_p1 );
    sensitive << ( zext_ln44_fu_596_p1 );
    sensitive << ( zext_ln46_fu_616_p1 );
    sensitive << ( zext_ln48_fu_636_p1 );

    SC_METHOD(thread_ISIquan_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ISIquan_V_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ISIquan_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ISI_q_V_fu_546_p3 );

    SC_METHOD(thread_ISIquan_V_we0);
    sensitive << ( trunc_ln301_reg_691 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_311_p3 );
    sensitive << ( tmp_5_reg_695 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_and_ln1497_fu_526_p2);
    sensitive << ( icmp_ln1497_fu_504_p2 );
    sensitive << ( xor_ln1495_fu_520_p2 );

    SC_METHOD(thread_and_ln_fu_357_p3);
    sensitive << ( tmp_4_reg_709 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln41_fu_555_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln41_fu_555_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_i_fu_561_p2);
    sensitive << ( i_0_reg_278 );

    SC_METHOD(thread_icmp_ln1494_fu_461_p2);
    sensitive << ( trunc_ln301_reg_691 );
    sensitive << ( tmp_5_reg_695 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1494_fu_454_p1 );
    sensitive << ( zext_ln1494_fu_458_p1 );

    SC_METHOD(thread_icmp_ln1495_fu_498_p2);
    sensitive << ( trunc_ln301_reg_691 );
    sensitive << ( tmp_5_reg_695 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Val2_5_fu_467_p3 );

    SC_METHOD(thread_icmp_ln1497_fu_504_p2);
    sensitive << ( trunc_ln301_reg_691 );
    sensitive << ( tmp_5_reg_695 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Val2_5_fu_467_p3 );

    SC_METHOD(thread_icmp_ln17_fu_290_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_reg_267 );

    SC_METHOD(thread_icmp_ln41_fu_555_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_0_reg_278 );

    SC_METHOD(thread_inputs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln18_fu_302_p1 );

    SC_METHOD(thread_inputs_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_j_fu_296_p2);
    sensitive << ( j_0_reg_267 );

    SC_METHOD(thread_lhs_V_fu_398_p1);
    sensitive << ( ISIPre_n_V_fu_388_p4 );

    SC_METHOD(thread_or_ln1495_fu_540_p2);
    sensitive << ( icmp_ln1495_fu_498_p2 );
    sensitive << ( and_ln1497_fu_526_p2 );

    SC_METHOD(thread_or_ln43_fu_580_p2);
    sensitive << ( shl_ln_fu_567_p3 );

    SC_METHOD(thread_or_ln44_fu_591_p2);
    sensitive << ( shl_ln_reg_742 );

    SC_METHOD(thread_or_ln45_fu_601_p2);
    sensitive << ( shl_ln_reg_742 );

    SC_METHOD(thread_or_ln46_fu_611_p2);
    sensitive << ( shl_ln_reg_742 );

    SC_METHOD(thread_or_ln47_fu_621_p2);
    sensitive << ( shl_ln_reg_742 );

    SC_METHOD(thread_or_ln48_fu_631_p2);
    sensitive << ( shl_ln_reg_742 );

    SC_METHOD(thread_or_ln49_fu_641_p2);
    sensitive << ( shl_ln_reg_742 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln50_fu_666_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ISIquan_V_q0 );
    sensitive << ( ISIquan_V_load_reg_762 );
    sensitive << ( ISIquan_V_q1 );
    sensitive << ( ISIquan_V_load_1_reg_767 );
    sensitive << ( ISIquan_V_load_2_reg_782 );
    sensitive << ( ISIquan_V_load_3_reg_787 );
    sensitive << ( ISIquan_V_load_4_reg_802 );
    sensitive << ( ISIquan_V_load_5_reg_807 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_p_Val2_5_fu_467_p3);
    sensitive << ( sub_ln703_1_reg_729 );
    sensitive << ( icmp_ln1494_fu_461_p2 );
    sensitive << ( shl_ln731_fu_442_p2 );

    SC_METHOD(thread_r_V_2_fu_420_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( r_V_2_fu_420_p00 );

    SC_METHOD(thread_r_V_2_fu_420_p00);
    sensitive << ( ISIPre_n_V_fu_388_p4 );

    SC_METHOD(thread_r_V_2_fu_420_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( r_V_2_fu_420_p10 );

    SC_METHOD(thread_r_V_2_fu_420_p10);
    sensitive << ( r_V_4_fu_374_p4 );

    SC_METHOD(thread_r_V_2_fu_420_p2);
    sensitive << ( r_V_2_fu_420_p0 );
    sensitive << ( r_V_2_fu_420_p1 );

    SC_METHOD(thread_r_V_4_fu_374_p4);
    sensitive << ( sub_ln731_fu_368_p2 );

    SC_METHOD(thread_r_V_5_fu_426_p1);
    sensitive << ( ISIPre_n_V_fu_388_p4 );

    SC_METHOD(thread_rem_r_address0);
    sensitive << ( zext_ln18_reg_679 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( rem_addr_reg_704 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rem_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rem_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_484_p4 );

    SC_METHOD(thread_rem_r_we0);
    sensitive << ( trunc_ln301_reg_691 );
    sensitive << ( tmp_5_reg_695 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_V_fu_406_p2);
    sensitive << ( lhs_V_fu_398_p1 );
    sensitive << ( rhs_V_fu_402_p1 );

    SC_METHOD(thread_rhs_V_fu_402_p1);
    sensitive << ( r_V_4_fu_374_p4 );

    SC_METHOD(thread_select_ln1495_fu_532_p3);
    sensitive << ( icmp_ln1495_fu_498_p2 );

    SC_METHOD(thread_sext_ln1494_fu_454_p1);
    sensitive << ( shl_ln2_fu_447_p3 );

    SC_METHOD(thread_shl_ln2_fu_447_p3);
    sensitive << ( ret_V_reg_719 );

    SC_METHOD(thread_shl_ln731_fu_442_p2);
    sensitive << ( sub_ln731_reg_714 );

    SC_METHOD(thread_shl_ln_fu_567_p3);
    sensitive << ( i_0_reg_278 );

    SC_METHOD(thread_sub_ln703_1_fu_436_p2);
    sensitive << ( sub_ln703_fu_430_p2 );
    sensitive << ( zext_ln1333_fu_384_p1 );

    SC_METHOD(thread_sub_ln703_fu_430_p2);
    sensitive << ( ISIPre_V_fu_349_p3 );
    sensitive << ( r_V_5_fu_426_p1 );

    SC_METHOD(thread_sub_ln731_fu_368_p2);
    sensitive << ( and_ln_fu_357_p3 );
    sensitive << ( trunc_ln731_fu_364_p1 );

    SC_METHOD(thread_tmp_1_fu_484_p4);
    sensitive << ( tmp_2_reg_699 );
    sensitive << ( tmp_fu_474_p4 );

    SC_METHOD(thread_tmp_3_fu_339_p4);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_tmp_5_fu_311_p3);
    sensitive << ( inputs_q0 );

    SC_METHOD(thread_tmp_fu_474_p4);
    sensitive << ( p_Val2_5_fu_467_p3 );

    SC_METHOD(thread_trunc_ln301_fu_307_p1);
    sensitive << ( inputs_q0 );

    SC_METHOD(thread_trunc_ln731_fu_364_p1);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_trunc_ln_i_fu_510_p4);
    sensitive << ( p_Val2_5_fu_467_p3 );

    SC_METHOD(thread_xor_ln1495_fu_520_p2);
    sensitive << ( icmp_ln1495_fu_498_p2 );

    SC_METHOD(thread_zext_ln1333_fu_384_p1);
    sensitive << ( r_V_4_fu_374_p4 );

    SC_METHOD(thread_zext_ln1494_fu_458_p1);
    sensitive << ( r_V_2_reg_724 );

    SC_METHOD(thread_zext_ln18_fu_302_p1);
    sensitive << ( j_0_reg_267 );

    SC_METHOD(thread_zext_ln42_fu_575_p1);
    sensitive << ( shl_ln_fu_567_p3 );

    SC_METHOD(thread_zext_ln43_fu_586_p1);
    sensitive << ( or_ln43_fu_580_p2 );

    SC_METHOD(thread_zext_ln44_fu_596_p1);
    sensitive << ( or_ln44_fu_591_p2 );

    SC_METHOD(thread_zext_ln45_fu_606_p1);
    sensitive << ( or_ln45_fu_601_p2 );

    SC_METHOD(thread_zext_ln46_fu_616_p1);
    sensitive << ( or_ln46_fu_611_p2 );

    SC_METHOD(thread_zext_ln47_fu_626_p1);
    sensitive << ( or_ln47_fu_621_p2 );

    SC_METHOD(thread_zext_ln48_fu_636_p1);
    sensitive << ( or_ln48_fu_631_p2 );

    SC_METHOD(thread_zext_ln49_fu_646_p1);
    sensitive << ( or_ln49_fu_641_p2 );

    SC_METHOD(thread_zext_ln50_fu_666_p1);
    sensitive << ( i_0_reg_278 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_290_p2 );
    sensitive << ( trunc_ln301_fu_307_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_311_p3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln41_fu_555_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "estimate_ISI_encode_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inputs_address0, "inputs_address0");
    sc_trace(mVcdFile, inputs_ce0, "inputs_ce0");
    sc_trace(mVcdFile, inputs_q0, "inputs_q0");
    sc_trace(mVcdFile, rem_r_address0, "rem_r_address0");
    sc_trace(mVcdFile, rem_r_ce0, "rem_r_ce0");
    sc_trace(mVcdFile, rem_r_we0, "rem_r_we0");
    sc_trace(mVcdFile, rem_r_d0, "rem_r_d0");
    sc_trace(mVcdFile, rem_r_q0, "rem_r_q0");
    sc_trace(mVcdFile, output_r_address0, "output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "output_r_d0");
    sc_trace(mVcdFile, j_fu_296_p2, "j_fu_296_p2");
    sc_trace(mVcdFile, j_reg_674, "j_reg_674");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln18_fu_302_p1, "zext_ln18_fu_302_p1");
    sc_trace(mVcdFile, zext_ln18_reg_679, "zext_ln18_reg_679");
    sc_trace(mVcdFile, icmp_ln17_fu_290_p2, "icmp_ln17_fu_290_p2");
    sc_trace(mVcdFile, trunc_ln301_fu_307_p1, "trunc_ln301_fu_307_p1");
    sc_trace(mVcdFile, trunc_ln301_reg_691, "trunc_ln301_reg_691");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_5_fu_311_p3, "tmp_5_fu_311_p3");
    sc_trace(mVcdFile, tmp_5_reg_695, "tmp_5_reg_695");
    sc_trace(mVcdFile, tmp_2_reg_699, "tmp_2_reg_699");
    sc_trace(mVcdFile, rem_addr_reg_704, "rem_addr_reg_704");
    sc_trace(mVcdFile, tmp_4_reg_709, "tmp_4_reg_709");
    sc_trace(mVcdFile, sub_ln731_fu_368_p2, "sub_ln731_fu_368_p2");
    sc_trace(mVcdFile, sub_ln731_reg_714, "sub_ln731_reg_714");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ret_V_fu_406_p2, "ret_V_fu_406_p2");
    sc_trace(mVcdFile, ret_V_reg_719, "ret_V_reg_719");
    sc_trace(mVcdFile, r_V_2_fu_420_p2, "r_V_2_fu_420_p2");
    sc_trace(mVcdFile, r_V_2_reg_724, "r_V_2_reg_724");
    sc_trace(mVcdFile, sub_ln703_1_fu_436_p2, "sub_ln703_1_fu_436_p2");
    sc_trace(mVcdFile, sub_ln703_1_reg_729, "sub_ln703_1_reg_729");
    sc_trace(mVcdFile, i_fu_561_p2, "i_fu_561_p2");
    sc_trace(mVcdFile, i_reg_737, "i_reg_737");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, shl_ln_fu_567_p3, "shl_ln_fu_567_p3");
    sc_trace(mVcdFile, shl_ln_reg_742, "shl_ln_reg_742");
    sc_trace(mVcdFile, icmp_ln41_fu_555_p2, "icmp_ln41_fu_555_p2");
    sc_trace(mVcdFile, ISIquan_V_q0, "ISIquan_V_q0");
    sc_trace(mVcdFile, ISIquan_V_load_reg_762, "ISIquan_V_load_reg_762");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ISIquan_V_q1, "ISIquan_V_q1");
    sc_trace(mVcdFile, ISIquan_V_load_1_reg_767, "ISIquan_V_load_1_reg_767");
    sc_trace(mVcdFile, ISIquan_V_load_2_reg_782, "ISIquan_V_load_2_reg_782");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ISIquan_V_load_3_reg_787, "ISIquan_V_load_3_reg_787");
    sc_trace(mVcdFile, ISIquan_V_load_4_reg_802, "ISIquan_V_load_4_reg_802");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ISIquan_V_load_5_reg_807, "ISIquan_V_load_5_reg_807");
    sc_trace(mVcdFile, ISIquan_V_address0, "ISIquan_V_address0");
    sc_trace(mVcdFile, ISIquan_V_ce0, "ISIquan_V_ce0");
    sc_trace(mVcdFile, ISIquan_V_we0, "ISIquan_V_we0");
    sc_trace(mVcdFile, ISIquan_V_d0, "ISIquan_V_d0");
    sc_trace(mVcdFile, ISIquan_V_address1, "ISIquan_V_address1");
    sc_trace(mVcdFile, ISIquan_V_ce1, "ISIquan_V_ce1");
    sc_trace(mVcdFile, j_0_reg_267, "j_0_reg_267");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_0_reg_278, "i_0_reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ISIquan_V_addr_9_gep_fu_187_p3, "ISIquan_V_addr_9_gep_fu_187_p3");
    sc_trace(mVcdFile, zext_ln42_fu_575_p1, "zext_ln42_fu_575_p1");
    sc_trace(mVcdFile, zext_ln43_fu_586_p1, "zext_ln43_fu_586_p1");
    sc_trace(mVcdFile, zext_ln44_fu_596_p1, "zext_ln44_fu_596_p1");
    sc_trace(mVcdFile, zext_ln45_fu_606_p1, "zext_ln45_fu_606_p1");
    sc_trace(mVcdFile, zext_ln46_fu_616_p1, "zext_ln46_fu_616_p1");
    sc_trace(mVcdFile, zext_ln47_fu_626_p1, "zext_ln47_fu_626_p1");
    sc_trace(mVcdFile, zext_ln48_fu_636_p1, "zext_ln48_fu_636_p1");
    sc_trace(mVcdFile, zext_ln49_fu_646_p1, "zext_ln49_fu_646_p1");
    sc_trace(mVcdFile, zext_ln50_fu_666_p1, "zext_ln50_fu_666_p1");
    sc_trace(mVcdFile, ISI_q_V_fu_546_p3, "ISI_q_V_fu_546_p3");
    sc_trace(mVcdFile, tmp_3_fu_339_p4, "tmp_3_fu_339_p4");
    sc_trace(mVcdFile, and_ln_fu_357_p3, "and_ln_fu_357_p3");
    sc_trace(mVcdFile, trunc_ln731_fu_364_p1, "trunc_ln731_fu_364_p1");
    sc_trace(mVcdFile, r_V_4_fu_374_p4, "r_V_4_fu_374_p4");
    sc_trace(mVcdFile, ISIPre_n_V_fu_388_p4, "ISIPre_n_V_fu_388_p4");
    sc_trace(mVcdFile, lhs_V_fu_398_p1, "lhs_V_fu_398_p1");
    sc_trace(mVcdFile, rhs_V_fu_402_p1, "rhs_V_fu_402_p1");
    sc_trace(mVcdFile, r_V_2_fu_420_p0, "r_V_2_fu_420_p0");
    sc_trace(mVcdFile, r_V_2_fu_420_p1, "r_V_2_fu_420_p1");
    sc_trace(mVcdFile, ISIPre_V_fu_349_p3, "ISIPre_V_fu_349_p3");
    sc_trace(mVcdFile, r_V_5_fu_426_p1, "r_V_5_fu_426_p1");
    sc_trace(mVcdFile, sub_ln703_fu_430_p2, "sub_ln703_fu_430_p2");
    sc_trace(mVcdFile, zext_ln1333_fu_384_p1, "zext_ln1333_fu_384_p1");
    sc_trace(mVcdFile, shl_ln2_fu_447_p3, "shl_ln2_fu_447_p3");
    sc_trace(mVcdFile, sext_ln1494_fu_454_p1, "sext_ln1494_fu_454_p1");
    sc_trace(mVcdFile, zext_ln1494_fu_458_p1, "zext_ln1494_fu_458_p1");
    sc_trace(mVcdFile, icmp_ln1494_fu_461_p2, "icmp_ln1494_fu_461_p2");
    sc_trace(mVcdFile, shl_ln731_fu_442_p2, "shl_ln731_fu_442_p2");
    sc_trace(mVcdFile, p_Val2_5_fu_467_p3, "p_Val2_5_fu_467_p3");
    sc_trace(mVcdFile, tmp_fu_474_p4, "tmp_fu_474_p4");
    sc_trace(mVcdFile, tmp_1_fu_484_p4, "tmp_1_fu_484_p4");
    sc_trace(mVcdFile, icmp_ln1495_fu_498_p2, "icmp_ln1495_fu_498_p2");
    sc_trace(mVcdFile, icmp_ln1497_fu_504_p2, "icmp_ln1497_fu_504_p2");
    sc_trace(mVcdFile, xor_ln1495_fu_520_p2, "xor_ln1495_fu_520_p2");
    sc_trace(mVcdFile, and_ln1497_fu_526_p2, "and_ln1497_fu_526_p2");
    sc_trace(mVcdFile, or_ln1495_fu_540_p2, "or_ln1495_fu_540_p2");
    sc_trace(mVcdFile, select_ln1495_fu_532_p3, "select_ln1495_fu_532_p3");
    sc_trace(mVcdFile, trunc_ln_i_fu_510_p4, "trunc_ln_i_fu_510_p4");
    sc_trace(mVcdFile, or_ln43_fu_580_p2, "or_ln43_fu_580_p2");
    sc_trace(mVcdFile, or_ln44_fu_591_p2, "or_ln44_fu_591_p2");
    sc_trace(mVcdFile, or_ln45_fu_601_p2, "or_ln45_fu_601_p2");
    sc_trace(mVcdFile, or_ln46_fu_611_p2, "or_ln46_fu_611_p2");
    sc_trace(mVcdFile, or_ln47_fu_621_p2, "or_ln47_fu_621_p2");
    sc_trace(mVcdFile, or_ln48_fu_631_p2, "or_ln48_fu_631_p2");
    sc_trace(mVcdFile, or_ln49_fu_641_p2, "or_ln49_fu_641_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, r_V_2_fu_420_p00, "r_V_2_fu_420_p00");
    sc_trace(mVcdFile, r_V_2_fu_420_p10, "r_V_2_fu_420_p10");
#endif

    }
    mHdltvinHandle.open("estimate_ISI_encode.hdltvin.dat");
    mHdltvoutHandle.open("estimate_ISI_encode.hdltvout.dat");
}

estimate_ISI_encode::~estimate_ISI_encode() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete estimate_ISI_encode_AXILiteS_s_axi_U;
    delete ISIquan_V_U;
}

void estimate_ISI_encode::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void estimate_ISI_encode::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_290_p2.read(), ap_const_lv1_1))) {
        i_0_reg_278 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_0_reg_278 = i_reg_737.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_267 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_267 = j_reg_674.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISIquan_V_load_1_reg_767 = ISIquan_V_q1.read();
        ISIquan_V_load_reg_762 = ISIquan_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ISIquan_V_load_2_reg_782 = ISIquan_V_q1.read();
        ISIquan_V_load_3_reg_787 = ISIquan_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ISIquan_V_load_4_reg_802 = ISIquan_V_q1.read();
        ISIquan_V_load_5_reg_807 = ISIquan_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_737 = i_fu_561_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_reg_674 = j_fu_296_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_V_2_reg_724 = r_V_2_fu_420_p2.read();
        ret_V_reg_719 = ret_V_fu_406_p2.read();
        sub_ln703_1_reg_729 = sub_ln703_1_fu_436_p2.read();
        sub_ln731_reg_714 = sub_ln731_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_5_fu_311_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(trunc_ln301_fu_307_p1.read(), ap_const_lv1_1))) {
        rem_addr_reg_704 =  (sc_lv<7>) (zext_ln18_reg_679.read());
        tmp_2_reg_699 = inputs_q0.read().range(21, 3);
        tmp_4_reg_709 = inputs_q0.read().range(13, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_fu_555_p2.read()))) {
        shl_ln_reg_742 = shl_ln_fu_567_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_5_reg_695 = inputs_q0.read().range(1, 1);
        trunc_ln301_reg_691 = trunc_ln301_fu_307_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_290_p2.read(), ap_const_lv1_0))) {
        zext_ln18_reg_679 = zext_ln18_fu_302_p1.read();
    }
}

void estimate_ISI_encode::thread_ISIPre_V_fu_349_p3() {
    ISIPre_V_fu_349_p3 = esl_concat<10,2>(tmp_3_fu_339_p4.read(), ap_const_lv2_0);
}

void estimate_ISI_encode::thread_ISIPre_n_V_fu_388_p4() {
    ISIPre_n_V_fu_388_p4 = rem_r_q0.read().range(29, 23);
}

void estimate_ISI_encode::thread_ISI_q_V_fu_546_p3() {
    ISI_q_V_fu_546_p3 = (!or_ln1495_fu_540_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln1495_fu_540_p2.read()[0].to_bool())? select_ln1495_fu_532_p3.read(): trunc_ln_i_fu_510_p4.read());
}

void estimate_ISI_encode::thread_ISIquan_V_addr_9_gep_fu_187_p3() {
    ISIquan_V_addr_9_gep_fu_187_p3 =  (sc_lv<7>) (zext_ln18_reg_679.read());
}

void estimate_ISI_encode::thread_ISIquan_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ISIquan_V_address0 =  (sc_lv<7>) (zext_ln49_fu_646_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ISIquan_V_address0 =  (sc_lv<7>) (zext_ln47_fu_626_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISIquan_V_address0 =  (sc_lv<7>) (zext_ln45_fu_606_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ISIquan_V_address0 =  (sc_lv<7>) (zext_ln42_fu_575_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ISIquan_V_address0 = ISIquan_V_addr_9_gep_fu_187_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ISIquan_V_address0 =  (sc_lv<7>) (zext_ln18_reg_679.read());
    } else {
        ISIquan_V_address0 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_ISIquan_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ISIquan_V_address1 =  (sc_lv<7>) (zext_ln48_fu_636_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ISIquan_V_address1 =  (sc_lv<7>) (zext_ln46_fu_616_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISIquan_V_address1 =  (sc_lv<7>) (zext_ln44_fu_596_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ISIquan_V_address1 =  (sc_lv<7>) (zext_ln43_fu_586_p1.read());
    } else {
        ISIquan_V_address1 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_ISIquan_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ISIquan_V_ce0 = ap_const_logic_1;
    } else {
        ISIquan_V_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ISIquan_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ISIquan_V_ce1 = ap_const_logic_1;
    } else {
        ISIquan_V_ce1 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ISIquan_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ISIquan_V_d0 = ISI_q_V_fu_546_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ISIquan_V_d0 = ap_const_lv4_F;
    } else {
        ISIquan_V_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void estimate_ISI_encode::thread_ISIquan_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_311_p3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_5_reg_695.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(trunc_ln301_reg_691.read(), ap_const_lv1_1)))) {
        ISIquan_V_we0 = ap_const_logic_1;
    } else {
        ISIquan_V_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_and_ln1497_fu_526_p2() {
    and_ln1497_fu_526_p2 = (icmp_ln1497_fu_504_p2.read() & xor_ln1495_fu_520_p2.read());
}

void estimate_ISI_encode::thread_and_ln_fu_357_p3() {
    and_ln_fu_357_p3 = esl_concat<11,1>(tmp_4_reg_709.read(), ap_const_lv1_0);
}

void estimate_ISI_encode::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void estimate_ISI_encode::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void estimate_ISI_encode::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_555_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_555_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void estimate_ISI_encode::thread_i_fu_561_p2() {
    i_fu_561_p2 = (!i_0_reg_278.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_278.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void estimate_ISI_encode::thread_icmp_ln1494_fu_461_p2() {
    icmp_ln1494_fu_461_p2 = (!sext_ln1494_fu_454_p1.read().is_01() || !zext_ln1494_fu_458_p1.read().is_01())? sc_lv<1>(): (sc_bigint<15>(sext_ln1494_fu_454_p1.read()) > sc_bigint<15>(zext_ln1494_fu_458_p1.read()));
}

void estimate_ISI_encode::thread_icmp_ln1495_fu_498_p2() {
    icmp_ln1495_fu_498_p2 = (!p_Val2_5_fu_467_p3.read().is_01() || !ap_const_lv12_28.is_01())? sc_lv<1>(): (sc_biguint<12>(p_Val2_5_fu_467_p3.read()) < sc_biguint<12>(ap_const_lv12_28));
}

void estimate_ISI_encode::thread_icmp_ln1497_fu_504_p2() {
    icmp_ln1497_fu_504_p2 = (!p_Val2_5_fu_467_p3.read().is_01() || !ap_const_lv12_190.is_01())? sc_lv<1>(): (sc_biguint<12>(p_Val2_5_fu_467_p3.read()) > sc_biguint<12>(ap_const_lv12_190));
}

void estimate_ISI_encode::thread_icmp_ln17_fu_290_p2() {
    icmp_ln17_fu_290_p2 = (!j_0_reg_267.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_267.read() == ap_const_lv7_60);
}

void estimate_ISI_encode::thread_icmp_ln41_fu_555_p2() {
    icmp_ln41_fu_555_p2 = (!i_0_reg_278.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_278.read() == ap_const_lv4_C);
}

void estimate_ISI_encode::thread_inputs_address0() {
    inputs_address0 =  (sc_lv<7>) (zext_ln18_fu_302_p1.read());
}

void estimate_ISI_encode::thread_inputs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inputs_ce0 = ap_const_logic_1;
    } else {
        inputs_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_j_fu_296_p2() {
    j_fu_296_p2 = (!j_0_reg_267.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_267.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_ISI_encode::thread_lhs_V_fu_398_p1() {
    lhs_V_fu_398_p1 = esl_zext<8,7>(ISIPre_n_V_fu_388_p4.read());
}

void estimate_ISI_encode::thread_or_ln1495_fu_540_p2() {
    or_ln1495_fu_540_p2 = (icmp_ln1495_fu_498_p2.read() | and_ln1497_fu_526_p2.read());
}

void estimate_ISI_encode::thread_or_ln43_fu_580_p2() {
    or_ln43_fu_580_p2 = (shl_ln_fu_567_p3.read() | ap_const_lv7_1);
}

void estimate_ISI_encode::thread_or_ln44_fu_591_p2() {
    or_ln44_fu_591_p2 = (shl_ln_reg_742.read() | ap_const_lv7_2);
}

void estimate_ISI_encode::thread_or_ln45_fu_601_p2() {
    or_ln45_fu_601_p2 = (shl_ln_reg_742.read() | ap_const_lv7_3);
}

void estimate_ISI_encode::thread_or_ln46_fu_611_p2() {
    or_ln46_fu_611_p2 = (shl_ln_reg_742.read() | ap_const_lv7_4);
}

void estimate_ISI_encode::thread_or_ln47_fu_621_p2() {
    or_ln47_fu_621_p2 = (shl_ln_reg_742.read() | ap_const_lv7_5);
}

void estimate_ISI_encode::thread_or_ln48_fu_631_p2() {
    or_ln48_fu_631_p2 = (shl_ln_reg_742.read() | ap_const_lv7_6);
}

void estimate_ISI_encode::thread_or_ln49_fu_641_p2() {
    or_ln49_fu_641_p2 = (shl_ln_reg_742.read() | ap_const_lv7_7);
}

void estimate_ISI_encode::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<4>) (zext_ln50_fu_666_p1.read());
}

void estimate_ISI_encode::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_output_r_d0() {
    output_r_d0 = esl_concat<28,4>(esl_concat<24,4>(esl_concat<20,4>(esl_concat<16,4>(esl_concat<12,4>(esl_concat<8,4>(esl_concat<4,4>(ISIquan_V_q0.read(), ISIquan_V_q1.read()), ISIquan_V_load_5_reg_807.read()), ISIquan_V_load_4_reg_802.read()), ISIquan_V_load_3_reg_787.read()), ISIquan_V_load_2_reg_782.read()), ISIquan_V_load_1_reg_767.read()), ISIquan_V_load_reg_762.read());
}

void estimate_ISI_encode::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_p_Val2_5_fu_467_p3() {
    p_Val2_5_fu_467_p3 = (!icmp_ln1494_fu_461_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_fu_461_p2.read()[0].to_bool())? sub_ln703_1_reg_729.read(): shl_ln731_fu_442_p2.read());
}

void estimate_ISI_encode::thread_r_V_2_fu_420_p0() {
    r_V_2_fu_420_p0 =  (sc_lv<7>) (r_V_2_fu_420_p00.read());
}

void estimate_ISI_encode::thread_r_V_2_fu_420_p00() {
    r_V_2_fu_420_p00 = esl_zext<14,7>(ISIPre_n_V_fu_388_p4.read());
}

void estimate_ISI_encode::thread_r_V_2_fu_420_p1() {
    r_V_2_fu_420_p1 =  (sc_lv<7>) (r_V_2_fu_420_p10.read());
}

void estimate_ISI_encode::thread_r_V_2_fu_420_p10() {
    r_V_2_fu_420_p10 = esl_zext<14,7>(r_V_4_fu_374_p4.read());
}

void estimate_ISI_encode::thread_r_V_2_fu_420_p2() {
    r_V_2_fu_420_p2 = (!r_V_2_fu_420_p0.read().is_01() || !r_V_2_fu_420_p1.read().is_01())? sc_lv<14>(): sc_biguint<7>(r_V_2_fu_420_p0.read()) * sc_biguint<7>(r_V_2_fu_420_p1.read());
}

void estimate_ISI_encode::thread_r_V_4_fu_374_p4() {
    r_V_4_fu_374_p4 = sub_ln731_fu_368_p2.read().range(9, 3);
}

void estimate_ISI_encode::thread_r_V_5_fu_426_p1() {
    r_V_5_fu_426_p1 = esl_zext<12,7>(ISIPre_n_V_fu_388_p4.read());
}

void estimate_ISI_encode::thread_rem_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        rem_r_address0 = rem_addr_reg_704.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        rem_r_address0 =  (sc_lv<7>) (zext_ln18_reg_679.read());
    } else {
        rem_r_address0 = "XXXXXXX";
    }
}

void estimate_ISI_encode::thread_rem_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        rem_r_ce0 = ap_const_logic_1;
    } else {
        rem_r_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_rem_r_d0() {
    rem_r_d0 = esl_zext<32,30>(tmp_1_fu_484_p4.read());
}

void estimate_ISI_encode::thread_rem_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_5_reg_695.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(trunc_ln301_reg_691.read(), ap_const_lv1_1))) {
        rem_r_we0 = ap_const_logic_1;
    } else {
        rem_r_we0 = ap_const_logic_0;
    }
}

void estimate_ISI_encode::thread_ret_V_fu_406_p2() {
    ret_V_fu_406_p2 = (!lhs_V_fu_398_p1.read().is_01() || !rhs_V_fu_402_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(lhs_V_fu_398_p1.read()) - sc_biguint<8>(rhs_V_fu_402_p1.read()));
}

void estimate_ISI_encode::thread_rhs_V_fu_402_p1() {
    rhs_V_fu_402_p1 = esl_zext<8,7>(r_V_4_fu_374_p4.read());
}

void estimate_ISI_encode::thread_select_ln1495_fu_532_p3() {
    select_ln1495_fu_532_p3 = (!icmp_ln1495_fu_498_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln1495_fu_498_p2.read()[0].to_bool())? ap_const_lv4_D: ap_const_lv4_E);
}

void estimate_ISI_encode::thread_sext_ln1494_fu_454_p1() {
    sext_ln1494_fu_454_p1 = esl_sext<15,10>(shl_ln2_fu_447_p3.read());
}

void estimate_ISI_encode::thread_shl_ln2_fu_447_p3() {
    shl_ln2_fu_447_p3 = esl_concat<8,2>(ret_V_reg_719.read(), ap_const_lv2_0);
}

void estimate_ISI_encode::thread_shl_ln731_fu_442_p2() {
    shl_ln731_fu_442_p2 = (!ap_const_lv12_2.is_01())? sc_lv<12>(): sub_ln731_reg_714.read() << (unsigned short)ap_const_lv12_2.to_uint();
}

void estimate_ISI_encode::thread_shl_ln_fu_567_p3() {
    shl_ln_fu_567_p3 = esl_concat<4,3>(i_0_reg_278.read(), ap_const_lv3_0);
}

void estimate_ISI_encode::thread_sub_ln703_1_fu_436_p2() {
    sub_ln703_1_fu_436_p2 = (!sub_ln703_fu_430_p2.read().is_01() || !zext_ln1333_fu_384_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(sub_ln703_fu_430_p2.read()) - sc_biguint<12>(zext_ln1333_fu_384_p1.read()));
}

void estimate_ISI_encode::thread_sub_ln703_fu_430_p2() {
    sub_ln703_fu_430_p2 = (!ISIPre_V_fu_349_p3.read().is_01() || !r_V_5_fu_426_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ISIPre_V_fu_349_p3.read()) - sc_biguint<12>(r_V_5_fu_426_p1.read()));
}

void estimate_ISI_encode::thread_sub_ln731_fu_368_p2() {
    sub_ln731_fu_368_p2 = (!and_ln_fu_357_p3.read().is_01() || !trunc_ln731_fu_364_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(and_ln_fu_357_p3.read()) - sc_biguint<12>(trunc_ln731_fu_364_p1.read()));
}

void estimate_ISI_encode::thread_tmp_1_fu_484_p4() {
    tmp_1_fu_484_p4 = esl_concat<29,1>(esl_concat<10,19>(tmp_fu_474_p4.read(), tmp_2_reg_699.read()), ap_const_lv1_0);
}

void estimate_ISI_encode::thread_tmp_3_fu_339_p4() {
    tmp_3_fu_339_p4 = rem_r_q0.read().range(29, 20);
}

void estimate_ISI_encode::thread_tmp_5_fu_311_p3() {
    tmp_5_fu_311_p3 = inputs_q0.read().range(1, 1);
}

void estimate_ISI_encode::thread_tmp_fu_474_p4() {
    tmp_fu_474_p4 = p_Val2_5_fu_467_p3.read().range(11, 2);
}

void estimate_ISI_encode::thread_trunc_ln301_fu_307_p1() {
    trunc_ln301_fu_307_p1 = inputs_q0.read().range(1-1, 0);
}

void estimate_ISI_encode::thread_trunc_ln731_fu_364_p1() {
    trunc_ln731_fu_364_p1 = rem_r_q0.read().range(12-1, 0);
}

void estimate_ISI_encode::thread_trunc_ln_i_fu_510_p4() {
    trunc_ln_i_fu_510_p4 = p_Val2_5_fu_467_p3.read().range(8, 5);
}

void estimate_ISI_encode::thread_xor_ln1495_fu_520_p2() {
    xor_ln1495_fu_520_p2 = (icmp_ln1495_fu_498_p2.read() ^ ap_const_lv1_1);
}

void estimate_ISI_encode::thread_zext_ln1333_fu_384_p1() {
    zext_ln1333_fu_384_p1 = esl_zext<12,7>(r_V_4_fu_374_p4.read());
}

void estimate_ISI_encode::thread_zext_ln1494_fu_458_p1() {
    zext_ln1494_fu_458_p1 = esl_zext<15,14>(r_V_2_reg_724.read());
}

void estimate_ISI_encode::thread_zext_ln18_fu_302_p1() {
    zext_ln18_fu_302_p1 = esl_zext<64,7>(j_0_reg_267.read());
}

void estimate_ISI_encode::thread_zext_ln42_fu_575_p1() {
    zext_ln42_fu_575_p1 = esl_zext<64,7>(shl_ln_fu_567_p3.read());
}

void estimate_ISI_encode::thread_zext_ln43_fu_586_p1() {
    zext_ln43_fu_586_p1 = esl_zext<64,7>(or_ln43_fu_580_p2.read());
}

void estimate_ISI_encode::thread_zext_ln44_fu_596_p1() {
    zext_ln44_fu_596_p1 = esl_zext<64,7>(or_ln44_fu_591_p2.read());
}

void estimate_ISI_encode::thread_zext_ln45_fu_606_p1() {
    zext_ln45_fu_606_p1 = esl_zext<64,7>(or_ln45_fu_601_p2.read());
}

void estimate_ISI_encode::thread_zext_ln46_fu_616_p1() {
    zext_ln46_fu_616_p1 = esl_zext<64,7>(or_ln46_fu_611_p2.read());
}

void estimate_ISI_encode::thread_zext_ln47_fu_626_p1() {
    zext_ln47_fu_626_p1 = esl_zext<64,7>(or_ln47_fu_621_p2.read());
}

void estimate_ISI_encode::thread_zext_ln48_fu_636_p1() {
    zext_ln48_fu_636_p1 = esl_zext<64,7>(or_ln48_fu_631_p2.read());
}

void estimate_ISI_encode::thread_zext_ln49_fu_646_p1() {
    zext_ln49_fu_646_p1 = esl_zext<64,7>(or_ln49_fu_641_p2.read());
}

void estimate_ISI_encode::thread_zext_ln50_fu_666_p1() {
    zext_ln50_fu_666_p1 = esl_zext<64,4>(i_0_reg_278.read());
}

void estimate_ISI_encode::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_290_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_5_fu_311_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(trunc_ln301_fu_307_p1.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_555_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void estimate_ISI_encode::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

