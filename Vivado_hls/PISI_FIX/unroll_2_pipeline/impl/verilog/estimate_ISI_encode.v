// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="estimate_ISI_encode,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.242500,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=864,HLS_SYN_LUT=1830,HLS_VERSION=2019_1}" *)

module estimate_ISI_encode (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_state7 = 10'd8;
parameter    ap_ST_fsm_state8 = 10'd16;
parameter    ap_ST_fsm_state9 = 10'd32;
parameter    ap_ST_fsm_state10 = 10'd64;
parameter    ap_ST_fsm_state11 = 10'd128;
parameter    ap_ST_fsm_state12 = 10'd256;
parameter    ap_ST_fsm_state13 = 10'd512;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [5:0] inputs_0_address0;
reg    inputs_0_ce0;
wire   [31:0] inputs_0_q0;
wire   [5:0] inputs_1_address0;
reg    inputs_1_ce0;
wire   [31:0] inputs_1_q0;
reg   [5:0] rem_0_address0;
reg    rem_0_ce0;
reg    rem_0_we0;
wire   [31:0] rem_0_d0;
wire   [31:0] rem_0_q0;
reg   [5:0] rem_1_address0;
reg    rem_1_ce0;
reg    rem_1_we0;
wire   [31:0] rem_1_d0;
wire   [31:0] rem_1_q0;
reg   [2:0] output_0_address0;
reg    output_0_ce0;
reg    output_0_we0;
reg   [31:0] output_0_d0;
reg   [2:0] output_1_address0;
reg    output_1_ce0;
reg    output_1_we0;
reg   [31:0] output_1_d0;
reg   [6:0] j_0_0_reg_1326;
wire   [2:0] grp_fu_1338_p2;
reg   [2:0] reg_1363;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln17_reg_2190;
wire   [0:0] tmp_12_fu_1434_p3;
reg   [2:0] reg_1363_pp0_iter1_reg;
wire   [0:0] trunc_ln301_1_fu_1430_p1;
reg   [3:0] reg_1367;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_12_reg_2237;
reg   [0:0] trunc_ln301_1_reg_2233;
wire   [0:0] icmp_ln17_fu_1371_p2;
wire   [63:0] zext_ln18_fu_1387_p1;
reg   [63:0] zext_ln18_reg_2194;
wire   [0:0] trunc_ln301_fu_1393_p1;
reg   [0:0] trunc_ln301_reg_2210;
reg   [0:0] trunc_ln301_reg_2210_pp0_iter1_reg;
wire   [0:0] tmp_8_fu_1397_p3;
reg   [0:0] tmp_8_reg_2214;
reg   [0:0] tmp_8_reg_2214_pp0_iter1_reg;
reg   [18:0] tmp_5_reg_2218;
reg   [18:0] tmp_5_reg_2218_pp0_iter1_reg;
reg   [5:0] rem_0_addr_reg_2223;
reg   [5:0] rem_0_addr_reg_2223_pp0_iter1_reg;
reg   [10:0] tmp_7_reg_2228;
reg   [0:0] trunc_ln301_1_reg_2233_pp0_iter1_reg;
reg   [0:0] tmp_12_reg_2237_pp0_iter1_reg;
reg   [18:0] tmp_9_reg_2241;
reg   [18:0] tmp_9_reg_2241_pp0_iter1_reg;
reg   [5:0] rem_1_addr_reg_2246;
reg   [5:0] rem_1_addr_reg_2246_pp0_iter1_reg;
reg   [10:0] tmp_10_reg_2251;
wire   [6:0] add_ln17_fu_1462_p2;
reg   [6:0] add_ln17_reg_2256;
wire   [11:0] sub_ln731_fu_1509_p2;
reg   [11:0] sub_ln731_reg_2264;
wire   [7:0] sub_ln1193_fu_1547_p2;
reg   [7:0] sub_ln1193_reg_2269;
wire   [13:0] mul_ln1118_fu_1561_p2;
reg   [13:0] mul_ln1118_reg_2274;
wire   [11:0] sub_ln703_1_fu_1577_p2;
reg   [11:0] sub_ln703_1_reg_2279;
wire   [2:0] trunc_ln321_1_fu_1583_p1;
reg   [2:0] trunc_ln321_1_reg_2284;
wire   [3:0] grp_fu_1343_p4;
reg   [3:0] lshr_ln321_1_reg_2288;
reg   [9:0] tmp_s_reg_2293;
wire   [11:0] sub_ln731_1_fu_1608_p2;
reg   [11:0] sub_ln731_1_reg_2298;
reg   [6:0] trunc_ln1333_3_reg_2303;
reg   [6:0] trunc_ln1333_1_reg_2310;
reg   [9:0] tmp_1_reg_2317;
wire   [0:0] icmp_ln1494_1_fu_1801_p2;
reg   [0:0] icmp_ln1494_1_reg_2322;
wire   [11:0] sub_ln703_3_fu_1816_p2;
reg   [11:0] sub_ln703_3_reg_2327;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] ISIquan_0_V_address0;
reg    ISIquan_0_V_ce0;
reg    ISIquan_0_V_we0;
reg   [3:0] ISIquan_0_V_d0;
wire   [3:0] ISIquan_0_V_q0;
reg   [3:0] ISIquan_0_V_address1;
reg    ISIquan_0_V_ce1;
wire   [3:0] ISIquan_0_V_q1;
reg   [3:0] ISIquan_1_V_address0;
reg    ISIquan_1_V_ce0;
reg    ISIquan_1_V_we0;
reg   [3:0] ISIquan_1_V_d0;
wire   [3:0] ISIquan_1_V_q0;
reg   [3:0] ISIquan_1_V_address1;
reg    ISIquan_1_V_ce1;
wire   [3:0] ISIquan_1_V_q1;
reg   [3:0] ISIquan_2_V_address0;
reg    ISIquan_2_V_ce0;
reg    ISIquan_2_V_we0;
reg   [3:0] ISIquan_2_V_d0;
wire   [3:0] ISIquan_2_V_q0;
reg   [3:0] ISIquan_2_V_address1;
reg    ISIquan_2_V_ce1;
wire   [3:0] ISIquan_2_V_q1;
reg   [3:0] ISIquan_3_V_address0;
reg    ISIquan_3_V_ce0;
reg    ISIquan_3_V_we0;
reg   [3:0] ISIquan_3_V_d0;
wire   [3:0] ISIquan_3_V_q0;
reg   [3:0] ISIquan_3_V_address1;
reg    ISIquan_3_V_ce1;
wire   [3:0] ISIquan_3_V_q1;
reg   [3:0] ISIquan_4_V_address0;
reg    ISIquan_4_V_ce0;
reg    ISIquan_4_V_we0;
reg   [3:0] ISIquan_4_V_d0;
wire   [3:0] ISIquan_4_V_q0;
reg   [3:0] ISIquan_4_V_address1;
reg    ISIquan_4_V_ce1;
wire   [3:0] ISIquan_4_V_q1;
reg   [3:0] ISIquan_5_V_address0;
reg    ISIquan_5_V_ce0;
reg    ISIquan_5_V_we0;
reg   [3:0] ISIquan_5_V_d0;
wire   [3:0] ISIquan_5_V_q0;
reg   [3:0] ISIquan_5_V_address1;
reg    ISIquan_5_V_ce1;
wire   [3:0] ISIquan_5_V_q1;
reg   [3:0] ISIquan_6_V_address0;
reg    ISIquan_6_V_ce0;
reg    ISIquan_6_V_we0;
reg   [3:0] ISIquan_6_V_d0;
wire   [3:0] ISIquan_6_V_q0;
reg   [3:0] ISIquan_6_V_address1;
reg    ISIquan_6_V_ce1;
wire   [3:0] ISIquan_6_V_q1;
reg   [3:0] ISIquan_7_V_address0;
reg    ISIquan_7_V_ce0;
reg    ISIquan_7_V_we0;
reg   [3:0] ISIquan_7_V_d0;
wire   [3:0] ISIquan_7_V_q0;
reg   [3:0] ISIquan_7_V_address1;
reg    ISIquan_7_V_ce1;
wire   [3:0] ISIquan_7_V_q1;
reg   [6:0] ap_phi_mux_j_0_0_phi_fu_1330_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln321_fu_1472_p1;
wire   [63:0] zext_ln321_1_fu_1736_p1;
wire   [63:0] zext_ln321_2_fu_1743_p1;
wire   [63:0] zext_ln321_3_fu_1930_p1;
wire    ap_CS_fsm_state13;
wire   [2:0] trunc_ln321_fu_1468_p1;
wire   [3:0] ISI_q_V_fu_1724_p3;
wire   [3:0] ISI_q_V_1_fu_1918_p3;
wire   [31:0] or_ln50_6_fu_1938_p9;
wire   [31:0] or_ln50_6_2_fu_1980_p9;
wire   [31:0] or_ln50_6_4_fu_2022_p9;
wire   [31:0] or_ln50_6_6_fu_2064_p9;
wire   [31:0] or_ln50_6_8_fu_2106_p9;
wire   [31:0] or_ln50_6_s_fu_2148_p9;
wire   [31:0] or_ln50_6_1_fu_1959_p9;
wire   [31:0] or_ln50_6_3_fu_2001_p9;
wire   [31:0] or_ln50_6_5_fu_2043_p9;
wire   [31:0] or_ln50_6_7_fu_2085_p9;
wire   [31:0] or_ln50_6_9_fu_2127_p9;
wire   [31:0] or_ln50_6_10_fu_2169_p9;
wire   [2:0] trunc_ln17_fu_1425_p1;
wire   [5:0] lshr_ln_fu_1377_p4;
wire   [9:0] tmp_6_fu_1480_p4;
wire   [11:0] and_ln731_1_fu_1498_p3;
wire   [11:0] trunc_ln731_fu_1505_p1;
wire   [6:0] trunc_ln1333_2_fu_1515_p4;
wire   [6:0] trunc_ln2_fu_1529_p4;
wire   [7:0] zext_ln703_fu_1539_p1;
wire   [7:0] zext_ln703_1_fu_1543_p1;
wire   [6:0] mul_ln1118_fu_1561_p0;
wire   [6:0] mul_ln1118_fu_1561_p1;
wire   [11:0] and_ln_fu_1490_p3;
wire   [11:0] zext_ln1333_fu_1567_p1;
wire   [11:0] sub_ln703_fu_1571_p2;
wire   [11:0] zext_ln1333_2_fu_1525_p1;
wire   [11:0] and_ln731_3_fu_1597_p3;
wire   [11:0] trunc_ln731_1_fu_1604_p1;
wire   [9:0] shl_ln1_fu_1639_p3;
wire  signed [14:0] sext_ln1494_fu_1646_p1;
wire   [14:0] zext_ln1494_fu_1650_p1;
wire   [0:0] icmp_ln1494_fu_1653_p2;
wire   [11:0] shl_ln731_fu_1634_p2;
wire   [11:0] select_ln1494_fu_1659_p3;
wire   [0:0] icmp_ln1495_fu_1676_p2;
wire   [0:0] icmp_ln1497_fu_1682_p2;
wire   [0:0] xor_ln1495_fu_1698_p2;
wire   [0:0] and_ln1497_fu_1704_p2;
wire   [0:0] or_ln1495_fu_1718_p2;
wire   [3:0] select_ln1495_fu_1710_p3;
wire   [3:0] trunc_ln_i_fu_1688_p4;
wire   [7:0] zext_ln703_2_fu_1761_p1;
wire   [7:0] zext_ln703_3_fu_1764_p1;
wire   [6:0] mul_ln1118_1_fu_1779_p0;
wire   [6:0] mul_ln1118_1_fu_1779_p1;
wire   [7:0] sub_ln1193_1_fu_1767_p2;
wire   [9:0] shl_ln728_1_fu_1785_p3;
wire   [13:0] mul_ln1118_1_fu_1779_p2;
wire  signed [14:0] sext_ln1494_1_fu_1793_p1;
wire   [14:0] zext_ln1494_1_fu_1797_p1;
wire   [11:0] and_ln731_2_fu_1751_p3;
wire   [11:0] zext_ln1333_1_fu_1807_p1;
wire   [11:0] sub_ln703_2_fu_1810_p2;
wire   [11:0] zext_ln1333_3_fu_1758_p1;
wire   [29:0] tmp_2_fu_1822_p4;
wire   [11:0] shl_ln731_1_fu_1835_p2;
wire   [11:0] select_ln1494_1_fu_1840_p3;
wire   [9:0] tmp_3_fu_1846_p4;
wire   [29:0] tmp_4_fu_1856_p4;
wire   [0:0] icmp_ln1495_1_fu_1870_p2;
wire   [0:0] icmp_ln1497_1_fu_1876_p2;
wire   [0:0] xor_ln1495_1_fu_1892_p2;
wire   [0:0] and_ln1497_1_fu_1898_p2;
wire   [0:0] or_ln1495_1_fu_1912_p2;
wire   [3:0] select_ln1495_2_fu_1904_p3;
wire   [3:0] trunc_ln_i1_fu_1882_p4;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] mul_ln1118_1_fu_1779_p00;
wire   [13:0] mul_ln1118_1_fu_1779_p10;
wire   [13:0] mul_ln1118_fu_1561_p00;
wire   [13:0] mul_ln1118_fu_1561_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

estimate_ISI_encode_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
estimate_ISI_encode_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .inputs_0_address0(inputs_0_address0),
    .inputs_0_ce0(inputs_0_ce0),
    .inputs_0_q0(inputs_0_q0),
    .inputs_1_address0(inputs_1_address0),
    .inputs_1_ce0(inputs_1_ce0),
    .inputs_1_q0(inputs_1_q0),
    .rem_0_address0(rem_0_address0),
    .rem_0_ce0(rem_0_ce0),
    .rem_0_we0(rem_0_we0),
    .rem_0_d0(rem_0_d0),
    .rem_0_q0(rem_0_q0),
    .rem_1_address0(rem_1_address0),
    .rem_1_ce0(rem_1_ce0),
    .rem_1_we0(rem_1_we0),
    .rem_1_d0(rem_1_d0),
    .rem_1_q0(rem_1_q0),
    .output_0_address0(output_0_address0),
    .output_0_ce0(output_0_ce0),
    .output_0_we0(output_0_we0),
    .output_0_d0(output_0_d0),
    .output_1_address0(output_1_address0),
    .output_1_ce0(output_1_ce0),
    .output_1_we0(output_1_we0),
    .output_1_d0(output_1_d0)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_0_V_address0),
    .ce0(ISIquan_0_V_ce0),
    .we0(ISIquan_0_V_we0),
    .d0(ISIquan_0_V_d0),
    .q0(ISIquan_0_V_q0),
    .address1(ISIquan_0_V_address1),
    .ce1(ISIquan_0_V_ce1),
    .q1(ISIquan_0_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_1_V_address0),
    .ce0(ISIquan_1_V_ce0),
    .we0(ISIquan_1_V_we0),
    .d0(ISIquan_1_V_d0),
    .q0(ISIquan_1_V_q0),
    .address1(ISIquan_1_V_address1),
    .ce1(ISIquan_1_V_ce1),
    .q1(ISIquan_1_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_2_V_address0),
    .ce0(ISIquan_2_V_ce0),
    .we0(ISIquan_2_V_we0),
    .d0(ISIquan_2_V_d0),
    .q0(ISIquan_2_V_q0),
    .address1(ISIquan_2_V_address1),
    .ce1(ISIquan_2_V_ce1),
    .q1(ISIquan_2_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_3_V_address0),
    .ce0(ISIquan_3_V_ce0),
    .we0(ISIquan_3_V_we0),
    .d0(ISIquan_3_V_d0),
    .q0(ISIquan_3_V_q0),
    .address1(ISIquan_3_V_address1),
    .ce1(ISIquan_3_V_ce1),
    .q1(ISIquan_3_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_4_V_address0),
    .ce0(ISIquan_4_V_ce0),
    .we0(ISIquan_4_V_we0),
    .d0(ISIquan_4_V_d0),
    .q0(ISIquan_4_V_q0),
    .address1(ISIquan_4_V_address1),
    .ce1(ISIquan_4_V_ce1),
    .q1(ISIquan_4_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_5_V_address0),
    .ce0(ISIquan_5_V_ce0),
    .we0(ISIquan_5_V_we0),
    .d0(ISIquan_5_V_d0),
    .q0(ISIquan_5_V_q0),
    .address1(ISIquan_5_V_address1),
    .ce1(ISIquan_5_V_ce1),
    .q1(ISIquan_5_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_6_V_address0),
    .ce0(ISIquan_6_V_ce0),
    .we0(ISIquan_6_V_we0),
    .d0(ISIquan_6_V_d0),
    .q0(ISIquan_6_V_q0),
    .address1(ISIquan_6_V_address1),
    .ce1(ISIquan_6_V_ce1),
    .q1(ISIquan_6_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_7_V_address0),
    .ce0(ISIquan_7_V_ce0),
    .we0(ISIquan_7_V_we0),
    .d0(ISIquan_7_V_d0),
    .q0(ISIquan_7_V_q0),
    .address1(ISIquan_7_V_address1),
    .ce1(ISIquan_7_V_ce1),
    .q1(ISIquan_7_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_reg_2190 == 1'd0))) begin
        j_0_0_reg_1326 <= add_ln17_reg_2256;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_0_0_reg_1326 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_2190 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln17_reg_2256 <= add_ln17_fu_1462_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln301_1_reg_2233 == 1'd1) & (tmp_12_reg_2237 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln1494_1_reg_2322 <= icmp_ln1494_1_fu_1801_p2;
        sub_ln703_3_reg_2327 <= sub_ln703_3_fu_1816_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln17_reg_2190 <= icmp_ln17_fu_1371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1))) begin
        lshr_ln321_1_reg_2288 <= {{j_0_0_reg_1326[6:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1))) begin
        mul_ln1118_reg_2274 <= mul_ln1118_fu_1561_p2;
        sub_ln1193_reg_2269 <= sub_ln1193_fu_1547_p2;
        sub_ln703_1_reg_2279 <= sub_ln703_1_fu_1577_p2;
        sub_ln731_reg_2264 <= sub_ln731_fu_1509_p2;
        trunc_ln321_1_reg_2284 <= trunc_ln321_1_fu_1583_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln301_1_fu_1430_p1 == 1'd1) & (tmp_12_fu_1434_p3 == 1'd1) & (icmp_ln17_reg_2190 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_fu_1434_p3 == 1'd0) & (icmp_ln17_reg_2190 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_1363[2 : 1] <= grp_fu_1338_p2[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_1363_pp0_iter1_reg[2 : 1] <= reg_1363[2 : 1];
        rem_0_addr_reg_2223_pp0_iter1_reg <= rem_0_addr_reg_2223;
        rem_1_addr_reg_2246_pp0_iter1_reg <= rem_1_addr_reg_2246;
        tmp_12_reg_2237_pp0_iter1_reg <= tmp_12_reg_2237;
        tmp_5_reg_2218_pp0_iter1_reg <= tmp_5_reg_2218;
        tmp_8_reg_2214_pp0_iter1_reg <= tmp_8_reg_2214;
        tmp_9_reg_2241_pp0_iter1_reg <= tmp_9_reg_2241;
        trunc_ln301_1_reg_2233_pp0_iter1_reg <= trunc_ln301_1_reg_2233;
        trunc_ln301_reg_2210_pp0_iter1_reg <= trunc_ln301_reg_2210;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln301_1_reg_2233 == 1'd1) & (tmp_12_reg_2237 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_2237 == 1'd0)))) begin
        reg_1367 <= {{j_0_0_reg_1326[6:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_8_fu_1397_p3 == 1'd1) & (trunc_ln301_fu_1393_p1 == 1'd1) & (icmp_ln17_reg_2190 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        rem_0_addr_reg_2223 <= zext_ln18_reg_2194;
        tmp_5_reg_2218 <= {{inputs_0_q0[21:3]}};
        tmp_7_reg_2228 <= {{inputs_0_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln301_1_fu_1430_p1 == 1'd1) & (tmp_12_fu_1434_p3 == 1'd1) & (icmp_ln17_reg_2190 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        rem_1_addr_reg_2246 <= zext_ln18_reg_2194;
        tmp_10_reg_2251 <= {{inputs_1_q0[13:3]}};
        tmp_9_reg_2241 <= {{inputs_1_q0[21:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln301_1_reg_2233 == 1'd1) & (tmp_12_reg_2237 == 1'd1))) begin
        sub_ln731_1_reg_2298 <= sub_ln731_1_fu_1608_p2;
        tmp_s_reg_2293 <= {{rem_1_q0[29:20]}};
        trunc_ln1333_1_reg_2310 <= {{rem_1_q0[29:23]}};
        trunc_ln1333_3_reg_2303 <= {{sub_ln731_1_fu_1608_p2[9:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_2190 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_12_reg_2237 <= inputs_1_q0[32'd1];
        tmp_8_reg_2214 <= inputs_0_q0[32'd1];
        trunc_ln301_1_reg_2233 <= trunc_ln301_1_fu_1430_p1;
        trunc_ln301_reg_2210 <= trunc_ln301_fu_1393_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_reg_2317 <= {{select_ln1494_fu_1659_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_fu_1371_p2 == 1'd0))) begin
        zext_ln18_reg_2194[5 : 0] <= zext_ln18_fu_1387_p1[5 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_0_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_0_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_0_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_0_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_0_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_0_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_0_V_address0 = zext_ln321_1_fu_1736_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_0_V_address0 = zext_ln321_fu_1472_p1;
    end else begin
        ISIquan_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_0_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_0_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_0_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_0_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_0_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_0_V_address1 = 64'd1;
    end else begin
        ISIquan_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_0_V_ce0 = 1'b1;
    end else begin
        ISIquan_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_0_V_ce1 = 1'b1;
    end else begin
        ISIquan_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_0_V_d0 = ISI_q_V_fu_1724_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_0_V_d0 = 4'd15;
        end else begin
            ISIquan_0_V_d0 = 'bx;
        end
    end else begin
        ISIquan_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln321_fu_1468_p1 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214 == 1'd0)) | ((trunc_ln321_1_reg_2284 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_0_V_we0 = 1'b1;
    end else begin
        ISIquan_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_1_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_1_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_1_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_1_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_1_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_1_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_1_V_address0 = zext_ln321_3_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_1_V_address0 = zext_ln321_2_fu_1743_p1;
    end else begin
        ISIquan_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_1_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_1_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_1_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_1_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_1_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_1_V_address1 = 64'd1;
    end else begin
        ISIquan_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_1_V_ce0 = 1'b1;
    end else begin
        ISIquan_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_1_V_ce1 = 1'b1;
    end else begin
        ISIquan_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_1_V_d0 = ISI_q_V_1_fu_1918_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_1_V_d0 = 4'd15;
    end else begin
        ISIquan_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_2237_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_2233_pp0_iter1_reg == 1'd1) & (reg_1363_pp0_iter1_reg == 3'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_reg_2237 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (reg_1363 == 3'd1)))) begin
        ISIquan_1_V_we0 = 1'b1;
    end else begin
        ISIquan_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_2_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_2_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_2_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_2_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_2_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_2_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_2_V_address0 = zext_ln321_1_fu_1736_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_2_V_address0 = zext_ln321_fu_1472_p1;
    end else begin
        ISIquan_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_2_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_2_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_2_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_2_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_2_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_2_V_address1 = 64'd1;
    end else begin
        ISIquan_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_2_V_ce0 = 1'b1;
    end else begin
        ISIquan_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_2_V_ce1 = 1'b1;
    end else begin
        ISIquan_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_2_V_d0 = ISI_q_V_fu_1724_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_2_V_d0 = 4'd15;
        end else begin
            ISIquan_2_V_d0 = 'bx;
        end
    end else begin
        ISIquan_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln321_fu_1468_p1 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214 == 1'd0)) | ((trunc_ln321_1_reg_2284 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_2_V_we0 = 1'b1;
    end else begin
        ISIquan_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_3_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_3_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_3_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_3_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_3_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_3_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_3_V_address0 = zext_ln321_3_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_3_V_address0 = zext_ln321_2_fu_1743_p1;
    end else begin
        ISIquan_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_3_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_3_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_3_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_3_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_3_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_3_V_address1 = 64'd1;
    end else begin
        ISIquan_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_3_V_ce0 = 1'b1;
    end else begin
        ISIquan_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_3_V_ce1 = 1'b1;
    end else begin
        ISIquan_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_3_V_d0 = ISI_q_V_1_fu_1918_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_3_V_d0 = 4'd15;
    end else begin
        ISIquan_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_2237_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_2233_pp0_iter1_reg == 1'd1) & (reg_1363_pp0_iter1_reg == 3'd3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_reg_2237 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (reg_1363 == 3'd3)))) begin
        ISIquan_3_V_we0 = 1'b1;
    end else begin
        ISIquan_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_4_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_4_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_4_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_4_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_4_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_4_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_4_V_address0 = zext_ln321_1_fu_1736_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_4_V_address0 = zext_ln321_fu_1472_p1;
    end else begin
        ISIquan_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_4_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_4_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_4_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_4_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_4_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_4_V_address1 = 64'd1;
    end else begin
        ISIquan_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_4_V_ce0 = 1'b1;
    end else begin
        ISIquan_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_4_V_ce1 = 1'b1;
    end else begin
        ISIquan_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_4_V_d0 = ISI_q_V_fu_1724_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_4_V_d0 = 4'd15;
        end else begin
            ISIquan_4_V_d0 = 'bx;
        end
    end else begin
        ISIquan_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln321_fu_1468_p1 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214 == 1'd0)) | ((trunc_ln321_1_reg_2284 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_4_V_we0 = 1'b1;
    end else begin
        ISIquan_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_5_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_5_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_5_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_5_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_5_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_5_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_5_V_address0 = zext_ln321_3_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_5_V_address0 = zext_ln321_2_fu_1743_p1;
    end else begin
        ISIquan_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_5_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_5_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_5_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_5_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_5_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_5_V_address1 = 64'd1;
    end else begin
        ISIquan_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_5_V_ce0 = 1'b1;
    end else begin
        ISIquan_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_5_V_ce1 = 1'b1;
    end else begin
        ISIquan_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_5_V_d0 = ISI_q_V_1_fu_1918_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_5_V_d0 = 4'd15;
    end else begin
        ISIquan_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_2237_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_2233_pp0_iter1_reg == 1'd1) & (reg_1363_pp0_iter1_reg == 3'd5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_reg_2237 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (reg_1363 == 3'd5)))) begin
        ISIquan_5_V_we0 = 1'b1;
    end else begin
        ISIquan_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_6_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_6_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_6_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_6_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_6_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_6_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_6_V_address0 = zext_ln321_1_fu_1736_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_6_V_address0 = zext_ln321_fu_1472_p1;
    end else begin
        ISIquan_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_6_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_6_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_6_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_6_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_6_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_6_V_address1 = 64'd1;
    end else begin
        ISIquan_6_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_6_V_ce0 = 1'b1;
    end else begin
        ISIquan_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_6_V_ce1 = 1'b1;
    end else begin
        ISIquan_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_6_V_d0 = ISI_q_V_fu_1724_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_6_V_d0 = 4'd15;
        end else begin
            ISIquan_6_V_d0 = 'bx;
        end
    end else begin
        ISIquan_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln321_fu_1468_p1 == 3'd0) & ~(trunc_ln321_fu_1468_p1 == 3'd2) & ~(trunc_ln321_fu_1468_p1 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214 == 1'd0)) | (~(trunc_ln321_1_reg_2284 == 3'd0) & ~(trunc_ln321_1_reg_2284 == 3'd2) & ~(trunc_ln321_1_reg_2284 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_8_reg_2214 == 1'd1) & (trunc_ln301_reg_2210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_6_V_we0 = 1'b1;
    end else begin
        ISIquan_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_7_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_7_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_7_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_7_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_7_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_7_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_7_V_address0 = zext_ln321_3_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_7_V_address0 = zext_ln321_2_fu_1743_p1;
    end else begin
        ISIquan_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_7_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_7_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_7_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_7_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_7_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_7_V_address1 = 64'd1;
    end else begin
        ISIquan_7_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_7_V_ce0 = 1'b1;
    end else begin
        ISIquan_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_7_V_ce1 = 1'b1;
    end else begin
        ISIquan_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_7_V_d0 = ISI_q_V_1_fu_1918_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_7_V_d0 = 4'd15;
    end else begin
        ISIquan_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(reg_1363_pp0_iter1_reg == 3'd1) & ~(reg_1363_pp0_iter1_reg == 3'd3) & ~(reg_1363_pp0_iter1_reg == 3'd5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_2237_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_2233_pp0_iter1_reg == 1'd1)) | (~(reg_1363 == 3'd1) & ~(reg_1363 == 3'd3) & ~(reg_1363 == 3'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_reg_2237 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ISIquan_7_V_we0 = 1'b1;
    end else begin
        ISIquan_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln17_fu_1371_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_2190 == 1'd0))) begin
        ap_phi_mux_j_0_0_phi_fu_1330_p4 = add_ln17_reg_2256;
    end else begin
        ap_phi_mux_j_0_0_phi_fu_1330_p4 = j_0_0_reg_1326;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputs_0_ce0 = 1'b1;
    end else begin
        inputs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputs_1_ce0 = 1'b1;
    end else begin
        inputs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_0_address0 = 64'd0;
    end else begin
        output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_0_d0 = or_ln50_6_s_fu_2148_p9;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_d0 = or_ln50_6_8_fu_2106_p9;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_0_d0 = or_ln50_6_6_fu_2064_p9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_0_d0 = or_ln50_6_4_fu_2022_p9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_0_d0 = or_ln50_6_2_fu_1980_p9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_0_d0 = or_ln50_6_fu_1938_p9;
    end else begin
        output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_1_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_1_address0 = 64'd0;
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_1_d0 = or_ln50_6_10_fu_2169_p9;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_d0 = or_ln50_6_9_fu_2127_p9;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_1_d0 = or_ln50_6_7_fu_2085_p9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_1_d0 = or_ln50_6_5_fu_2043_p9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_1_d0 = or_ln50_6_3_fu_2001_p9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_1_d0 = or_ln50_6_1_fu_1959_p9;
    end else begin
        output_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_0_address0 = rem_0_addr_reg_2223_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_0_address0 = zext_ln18_reg_2194;
    end else begin
        rem_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        rem_0_ce0 = 1'b1;
    end else begin
        rem_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_2214_pp0_iter1_reg == 1'd1) & (trunc_ln301_reg_2210_pp0_iter1_reg == 1'd1))) begin
        rem_0_we0 = 1'b1;
    end else begin
        rem_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_1_address0 = rem_1_addr_reg_2246_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_1_address0 = zext_ln18_reg_2194;
    end else begin
        rem_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        rem_1_ce0 = 1'b1;
    end else begin
        rem_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_2237_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_2233_pp0_iter1_reg == 1'd1))) begin
        rem_1_we0 = 1'b1;
    end else begin
        rem_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln17_fu_1371_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln17_fu_1371_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ISI_q_V_1_fu_1918_p3 = ((or_ln1495_1_fu_1912_p2[0:0] === 1'b1) ? select_ln1495_2_fu_1904_p3 : trunc_ln_i1_fu_1882_p4);

assign ISI_q_V_fu_1724_p3 = ((or_ln1495_fu_1718_p2[0:0] === 1'b1) ? select_ln1495_fu_1710_p3 : trunc_ln_i_fu_1688_p4);

assign add_ln17_fu_1462_p2 = (j_0_0_reg_1326 + 7'd2);

assign and_ln1497_1_fu_1898_p2 = (xor_ln1495_1_fu_1892_p2 & icmp_ln1497_1_fu_1876_p2);

assign and_ln1497_fu_1704_p2 = (xor_ln1495_fu_1698_p2 & icmp_ln1497_fu_1682_p2);

assign and_ln731_1_fu_1498_p3 = {{tmp_7_reg_2228}, {1'd0}};

assign and_ln731_2_fu_1751_p3 = {{tmp_s_reg_2293}, {2'd0}};

assign and_ln731_3_fu_1597_p3 = {{tmp_10_reg_2251}, {1'd0}};

assign and_ln_fu_1490_p3 = {{tmp_6_fu_1480_p4}, {2'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_1338_p2 = (trunc_ln17_fu_1425_p1 | 3'd1);

assign grp_fu_1343_p4 = {{j_0_0_reg_1326[6:3]}};

assign icmp_ln1494_1_fu_1801_p2 = (($signed(sext_ln1494_1_fu_1793_p1) > $signed(zext_ln1494_1_fu_1797_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1653_p2 = (($signed(sext_ln1494_fu_1646_p1) > $signed(zext_ln1494_fu_1650_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1495_1_fu_1870_p2 = ((select_ln1494_1_fu_1840_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_1676_p2 = ((select_ln1494_fu_1659_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1497_1_fu_1876_p2 = ((select_ln1494_1_fu_1840_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_fu_1682_p2 = ((select_ln1494_fu_1659_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_1371_p2 = ((ap_phi_mux_j_0_0_phi_fu_1330_p4 == 7'd96) ? 1'b1 : 1'b0);

assign inputs_0_address0 = zext_ln18_fu_1387_p1;

assign inputs_1_address0 = zext_ln18_fu_1387_p1;

assign lshr_ln_fu_1377_p4 = {{ap_phi_mux_j_0_0_phi_fu_1330_p4[6:1]}};

assign mul_ln1118_1_fu_1779_p0 = mul_ln1118_1_fu_1779_p00;

assign mul_ln1118_1_fu_1779_p00 = trunc_ln1333_1_reg_2310;

assign mul_ln1118_1_fu_1779_p1 = mul_ln1118_1_fu_1779_p10;

assign mul_ln1118_1_fu_1779_p10 = trunc_ln1333_3_reg_2303;

assign mul_ln1118_1_fu_1779_p2 = (mul_ln1118_1_fu_1779_p0 * mul_ln1118_1_fu_1779_p1);

assign mul_ln1118_fu_1561_p0 = mul_ln1118_fu_1561_p00;

assign mul_ln1118_fu_1561_p00 = trunc_ln2_fu_1529_p4;

assign mul_ln1118_fu_1561_p1 = mul_ln1118_fu_1561_p10;

assign mul_ln1118_fu_1561_p10 = trunc_ln1333_2_fu_1515_p4;

assign mul_ln1118_fu_1561_p2 = (mul_ln1118_fu_1561_p0 * mul_ln1118_fu_1561_p1);

assign or_ln1495_1_fu_1912_p2 = (icmp_ln1495_1_fu_1870_p2 | and_ln1497_1_fu_1898_p2);

assign or_ln1495_fu_1718_p2 = (icmp_ln1495_fu_1676_p2 | and_ln1497_fu_1704_p2);

assign or_ln50_6_10_fu_2169_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_1_fu_1959_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_2_fu_1980_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_3_fu_2001_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_4_fu_2022_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_5_fu_2043_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_6_fu_2064_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_7_fu_2085_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_8_fu_2106_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_9_fu_2127_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_fu_1938_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_s_fu_2148_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign rem_0_d0 = tmp_2_fu_1822_p4;

assign rem_1_d0 = tmp_4_fu_1856_p4;

assign select_ln1494_1_fu_1840_p3 = ((icmp_ln1494_1_reg_2322[0:0] === 1'b1) ? sub_ln703_3_reg_2327 : shl_ln731_1_fu_1835_p2);

assign select_ln1494_fu_1659_p3 = ((icmp_ln1494_fu_1653_p2[0:0] === 1'b1) ? sub_ln703_1_reg_2279 : shl_ln731_fu_1634_p2);

assign select_ln1495_2_fu_1904_p3 = ((icmp_ln1495_1_fu_1870_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_fu_1710_p3 = ((icmp_ln1495_fu_1676_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign sext_ln1494_1_fu_1793_p1 = $signed(shl_ln728_1_fu_1785_p3);

assign sext_ln1494_fu_1646_p1 = $signed(shl_ln1_fu_1639_p3);

assign shl_ln1_fu_1639_p3 = {{sub_ln1193_reg_2269}, {2'd0}};

assign shl_ln728_1_fu_1785_p3 = {{sub_ln1193_1_fu_1767_p2}, {2'd0}};

assign shl_ln731_1_fu_1835_p2 = sub_ln731_1_reg_2298 << 12'd2;

assign shl_ln731_fu_1634_p2 = sub_ln731_reg_2264 << 12'd2;

assign sub_ln1193_1_fu_1767_p2 = (zext_ln703_2_fu_1761_p1 - zext_ln703_3_fu_1764_p1);

assign sub_ln1193_fu_1547_p2 = (zext_ln703_fu_1539_p1 - zext_ln703_1_fu_1543_p1);

assign sub_ln703_1_fu_1577_p2 = (sub_ln703_fu_1571_p2 - zext_ln1333_2_fu_1525_p1);

assign sub_ln703_2_fu_1810_p2 = (and_ln731_2_fu_1751_p3 - zext_ln1333_1_fu_1807_p1);

assign sub_ln703_3_fu_1816_p2 = (sub_ln703_2_fu_1810_p2 - zext_ln1333_3_fu_1758_p1);

assign sub_ln703_fu_1571_p2 = (and_ln_fu_1490_p3 - zext_ln1333_fu_1567_p1);

assign sub_ln731_1_fu_1608_p2 = (and_ln731_3_fu_1597_p3 - trunc_ln731_1_fu_1604_p1);

assign sub_ln731_fu_1509_p2 = (and_ln731_1_fu_1498_p3 - trunc_ln731_fu_1505_p1);

assign tmp_12_fu_1434_p3 = inputs_1_q0[32'd1];

assign tmp_2_fu_1822_p4 = {{{tmp_1_reg_2317}, {tmp_5_reg_2218_pp0_iter1_reg}}, {1'd0}};

assign tmp_3_fu_1846_p4 = {{select_ln1494_1_fu_1840_p3[11:2]}};

assign tmp_4_fu_1856_p4 = {{{tmp_3_fu_1846_p4}, {tmp_9_reg_2241_pp0_iter1_reg}}, {1'd0}};

assign tmp_6_fu_1480_p4 = {{rem_0_q0[29:20]}};

assign tmp_8_fu_1397_p3 = inputs_0_q0[32'd1];

assign trunc_ln1333_2_fu_1515_p4 = {{sub_ln731_fu_1509_p2[9:3]}};

assign trunc_ln17_fu_1425_p1 = j_0_0_reg_1326[2:0];

assign trunc_ln2_fu_1529_p4 = {{rem_0_q0[29:23]}};

assign trunc_ln301_1_fu_1430_p1 = inputs_1_q0[0:0];

assign trunc_ln301_fu_1393_p1 = inputs_0_q0[0:0];

assign trunc_ln321_1_fu_1583_p1 = j_0_0_reg_1326[2:0];

assign trunc_ln321_fu_1468_p1 = j_0_0_reg_1326[2:0];

assign trunc_ln731_1_fu_1604_p1 = rem_1_q0[11:0];

assign trunc_ln731_fu_1505_p1 = rem_0_q0[11:0];

assign trunc_ln_i1_fu_1882_p4 = {{select_ln1494_1_fu_1840_p3[8:5]}};

assign trunc_ln_i_fu_1688_p4 = {{select_ln1494_fu_1659_p3[8:5]}};

assign xor_ln1495_1_fu_1892_p2 = (icmp_ln1495_1_fu_1870_p2 ^ 1'd1);

assign xor_ln1495_fu_1698_p2 = (icmp_ln1495_fu_1676_p2 ^ 1'd1);

assign zext_ln1333_1_fu_1807_p1 = trunc_ln1333_1_reg_2310;

assign zext_ln1333_2_fu_1525_p1 = trunc_ln1333_2_fu_1515_p4;

assign zext_ln1333_3_fu_1758_p1 = trunc_ln1333_3_reg_2303;

assign zext_ln1333_fu_1567_p1 = trunc_ln2_fu_1529_p4;

assign zext_ln1494_1_fu_1797_p1 = mul_ln1118_1_fu_1779_p2;

assign zext_ln1494_fu_1650_p1 = mul_ln1118_reg_2274;

assign zext_ln18_fu_1387_p1 = lshr_ln_fu_1377_p4;

assign zext_ln321_1_fu_1736_p1 = lshr_ln321_1_reg_2288;

assign zext_ln321_2_fu_1743_p1 = reg_1367;

assign zext_ln321_3_fu_1930_p1 = reg_1367;

assign zext_ln321_fu_1472_p1 = grp_fu_1343_p4;

assign zext_ln703_1_fu_1543_p1 = trunc_ln1333_2_fu_1515_p4;

assign zext_ln703_2_fu_1761_p1 = trunc_ln1333_1_reg_2310;

assign zext_ln703_3_fu_1764_p1 = trunc_ln1333_3_reg_2303;

assign zext_ln703_fu_1539_p1 = trunc_ln2_fu_1529_p4;

always @ (posedge ap_clk) begin
    reg_1363[0] <= 1'b1;
    reg_1363_pp0_iter1_reg[0] <= 1'b1;
    zext_ln18_reg_2194[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //estimate_ISI_encode
