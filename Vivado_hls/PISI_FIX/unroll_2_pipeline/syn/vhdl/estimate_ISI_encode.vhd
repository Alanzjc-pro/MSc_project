-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity estimate_ISI_encode is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 11;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of estimate_ISI_encode is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "estimate_ISI_encode,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.242500,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=864,HLS_SYN_LUT=1830,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_28 : STD_LOGIC_VECTOR (11 downto 0) := "000000101000";
    constant ap_const_lv12_190 : STD_LOGIC_VECTOR (11 downto 0) := "000110010000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inputs_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal inputs_0_ce0 : STD_LOGIC;
    signal inputs_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal inputs_1_ce0 : STD_LOGIC;
    signal inputs_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal rem_0_ce0 : STD_LOGIC;
    signal rem_0_we0 : STD_LOGIC;
    signal rem_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal rem_1_ce0 : STD_LOGIC;
    signal rem_1_we0 : STD_LOGIC;
    signal rem_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_0_ce0 : STD_LOGIC;
    signal output_0_we0 : STD_LOGIC;
    signal output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_1_ce0 : STD_LOGIC;
    signal output_1_we0 : STD_LOGIC;
    signal output_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_0_reg_1326 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1338_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_1363 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln17_reg_2190 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1363_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln301_1_fu_1430_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1367 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_12_reg_2237 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_1_reg_2233 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln17_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_fu_1387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln18_reg_2194 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln301_fu_1393_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_reg_2210 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_reg_2210_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2214 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2214_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2218 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_5_reg_2218_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal rem_0_addr_reg_2223 : STD_LOGIC_VECTOR (5 downto 0);
    signal rem_0_addr_reg_2223_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_reg_2228 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln301_1_reg_2233_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2237_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2241 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_9_reg_2241_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal rem_1_addr_reg_2246 : STD_LOGIC_VECTOR (5 downto 0);
    signal rem_1_addr_reg_2246_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_reg_2251 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln17_fu_1462_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln17_reg_2256 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln731_fu_1509_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_reg_2264 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1193_fu_1547_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1193_reg_2269 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_1561_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_reg_2274 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln703_1_fu_1577_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_1_reg_2279 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln321_1_fu_1583_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln321_1_reg_2284 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1343_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln321_1_reg_2288 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_reg_2293 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln731_1_fu_1608_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_1_reg_2298 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1333_3_reg_2303 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1333_1_reg_2310 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_reg_2317 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1494_1_fu_1801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_1_reg_2322 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln703_3_fu_1816_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_3_reg_2327 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ISIquan_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_ce0 : STD_LOGIC;
    signal ISIquan_0_V_we0 : STD_LOGIC;
    signal ISIquan_0_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_ce1 : STD_LOGIC;
    signal ISIquan_0_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_ce0 : STD_LOGIC;
    signal ISIquan_1_V_we0 : STD_LOGIC;
    signal ISIquan_1_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_ce1 : STD_LOGIC;
    signal ISIquan_1_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_ce0 : STD_LOGIC;
    signal ISIquan_2_V_we0 : STD_LOGIC;
    signal ISIquan_2_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_ce1 : STD_LOGIC;
    signal ISIquan_2_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_ce0 : STD_LOGIC;
    signal ISIquan_3_V_we0 : STD_LOGIC;
    signal ISIquan_3_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_ce1 : STD_LOGIC;
    signal ISIquan_3_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_ce0 : STD_LOGIC;
    signal ISIquan_4_V_we0 : STD_LOGIC;
    signal ISIquan_4_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_ce1 : STD_LOGIC;
    signal ISIquan_4_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_ce0 : STD_LOGIC;
    signal ISIquan_5_V_we0 : STD_LOGIC;
    signal ISIquan_5_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_ce1 : STD_LOGIC;
    signal ISIquan_5_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_ce0 : STD_LOGIC;
    signal ISIquan_6_V_we0 : STD_LOGIC;
    signal ISIquan_6_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_ce1 : STD_LOGIC;
    signal ISIquan_6_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_ce0 : STD_LOGIC;
    signal ISIquan_7_V_we0 : STD_LOGIC;
    signal ISIquan_7_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_ce1 : STD_LOGIC;
    signal ISIquan_7_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j_0_0_phi_fu_1330_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln321_fu_1472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_1_fu_1736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_2_fu_1743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_3_fu_1930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln321_fu_1468_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ISI_q_V_fu_1724_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISI_q_V_1_fu_1918_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln50_6_fu_1938_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_2_fu_1980_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_4_fu_2022_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_6_fu_2064_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_8_fu_2106_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_s_fu_2148_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_1_fu_1959_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_3_fu_2001_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_5_fu_2043_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_7_fu_2085_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_9_fu_2127_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_10_fu_2169_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln17_fu_1425_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln_fu_1377_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_1480_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln731_1_fu_1498_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln731_fu_1505_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1333_2_fu_1515_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln2_fu_1529_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln703_fu_1539_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_1_fu_1543_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_1561_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_1561_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln_fu_1490_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_fu_1567_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_fu_1571_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_2_fu_1525_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln731_3_fu_1597_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln731_1_fu_1604_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1_fu_1639_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1494_fu_1646_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1494_fu_1650_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1494_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln731_fu_1634_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1494_fu_1659_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1495_fu_1676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_fu_1682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_fu_1698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1497_fu_1704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_fu_1718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_fu_1710_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_i_fu_1688_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln703_2_fu_1761_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_3_fu_1764_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_1_fu_1779_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_1_fu_1779_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1193_1_fu_1767_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln728_1_fu_1785_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_1_fu_1779_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1494_1_fu_1793_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1494_1_fu_1797_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln731_2_fu_1751_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_1_fu_1807_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_2_fu_1810_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_3_fu_1758_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_1822_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln731_1_fu_1835_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1494_1_fu_1840_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_1846_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1856_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln1495_1_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_1_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_1_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1497_1_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_1_fu_1912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_2_fu_1904_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_i1_fu_1882_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1118_1_fu_1779_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_1_fu_1779_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1561_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1561_p10 : STD_LOGIC_VECTOR (13 downto 0);

    component estimate_ISI_encode_ISIquan_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component estimate_ISI_encode_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        inputs_0_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        inputs_0_ce0 : IN STD_LOGIC;
        inputs_0_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_1_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        inputs_1_ce0 : IN STD_LOGIC;
        inputs_1_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rem_0_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        rem_0_ce0 : IN STD_LOGIC;
        rem_0_we0 : IN STD_LOGIC;
        rem_0_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rem_0_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rem_1_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        rem_1_ce0 : IN STD_LOGIC;
        rem_1_we0 : IN STD_LOGIC;
        rem_1_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rem_1_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce0 : IN STD_LOGIC;
        output_0_we0 : IN STD_LOGIC;
        output_0_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce0 : IN STD_LOGIC;
        output_1_we0 : IN STD_LOGIC;
        output_1_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    estimate_ISI_encode_AXILiteS_s_axi_U : component estimate_ISI_encode_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        inputs_0_address0 => inputs_0_address0,
        inputs_0_ce0 => inputs_0_ce0,
        inputs_0_q0 => inputs_0_q0,
        inputs_1_address0 => inputs_1_address0,
        inputs_1_ce0 => inputs_1_ce0,
        inputs_1_q0 => inputs_1_q0,
        rem_0_address0 => rem_0_address0,
        rem_0_ce0 => rem_0_ce0,
        rem_0_we0 => rem_0_we0,
        rem_0_d0 => rem_0_d0,
        rem_0_q0 => rem_0_q0,
        rem_1_address0 => rem_1_address0,
        rem_1_ce0 => rem_1_ce0,
        rem_1_we0 => rem_1_we0,
        rem_1_d0 => rem_1_d0,
        rem_1_q0 => rem_1_q0,
        output_0_address0 => output_0_address0,
        output_0_ce0 => output_0_ce0,
        output_0_we0 => output_0_we0,
        output_0_d0 => output_0_d0,
        output_1_address0 => output_1_address0,
        output_1_ce0 => output_1_ce0,
        output_1_we0 => output_1_we0,
        output_1_d0 => output_1_d0);

    ISIquan_0_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_0_V_address0,
        ce0 => ISIquan_0_V_ce0,
        we0 => ISIquan_0_V_we0,
        d0 => ISIquan_0_V_d0,
        q0 => ISIquan_0_V_q0,
        address1 => ISIquan_0_V_address1,
        ce1 => ISIquan_0_V_ce1,
        q1 => ISIquan_0_V_q1);

    ISIquan_1_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_1_V_address0,
        ce0 => ISIquan_1_V_ce0,
        we0 => ISIquan_1_V_we0,
        d0 => ISIquan_1_V_d0,
        q0 => ISIquan_1_V_q0,
        address1 => ISIquan_1_V_address1,
        ce1 => ISIquan_1_V_ce1,
        q1 => ISIquan_1_V_q1);

    ISIquan_2_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_2_V_address0,
        ce0 => ISIquan_2_V_ce0,
        we0 => ISIquan_2_V_we0,
        d0 => ISIquan_2_V_d0,
        q0 => ISIquan_2_V_q0,
        address1 => ISIquan_2_V_address1,
        ce1 => ISIquan_2_V_ce1,
        q1 => ISIquan_2_V_q1);

    ISIquan_3_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_3_V_address0,
        ce0 => ISIquan_3_V_ce0,
        we0 => ISIquan_3_V_we0,
        d0 => ISIquan_3_V_d0,
        q0 => ISIquan_3_V_q0,
        address1 => ISIquan_3_V_address1,
        ce1 => ISIquan_3_V_ce1,
        q1 => ISIquan_3_V_q1);

    ISIquan_4_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_4_V_address0,
        ce0 => ISIquan_4_V_ce0,
        we0 => ISIquan_4_V_we0,
        d0 => ISIquan_4_V_d0,
        q0 => ISIquan_4_V_q0,
        address1 => ISIquan_4_V_address1,
        ce1 => ISIquan_4_V_ce1,
        q1 => ISIquan_4_V_q1);

    ISIquan_5_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_5_V_address0,
        ce0 => ISIquan_5_V_ce0,
        we0 => ISIquan_5_V_we0,
        d0 => ISIquan_5_V_d0,
        q0 => ISIquan_5_V_q0,
        address1 => ISIquan_5_V_address1,
        ce1 => ISIquan_5_V_ce1,
        q1 => ISIquan_5_V_q1);

    ISIquan_6_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_6_V_address0,
        ce0 => ISIquan_6_V_ce0,
        we0 => ISIquan_6_V_we0,
        d0 => ISIquan_6_V_d0,
        q0 => ISIquan_6_V_q0,
        address1 => ISIquan_6_V_address1,
        ce1 => ISIquan_6_V_ce1,
        q1 => ISIquan_6_V_q1);

    ISIquan_7_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_7_V_address0,
        ce0 => ISIquan_7_V_ce0,
        we0 => ISIquan_7_V_we0,
        d0 => ISIquan_7_V_d0,
        q0 => ISIquan_7_V_q0,
        address1 => ISIquan_7_V_address1,
        ce1 => ISIquan_7_V_ce1,
        q1 => ISIquan_7_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_0_0_reg_1326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln17_reg_2190 = ap_const_lv1_0))) then 
                j_0_0_reg_1326 <= add_ln17_reg_2256;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_0_0_reg_1326 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln17_reg_2190 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln17_reg_2256 <= add_ln17_fu_1462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln301_1_reg_2233 = ap_const_lv1_1) and (tmp_12_reg_2237 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln1494_1_reg_2322 <= icmp_ln1494_1_fu_1801_p2;
                sub_ln703_3_reg_2327 <= sub_ln703_3_fu_1816_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln17_reg_2190 <= icmp_ln17_fu_1371_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1))) then
                lshr_ln321_1_reg_2288 <= j_0_0_reg_1326(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1))) then
                mul_ln1118_reg_2274 <= mul_ln1118_fu_1561_p2;
                sub_ln1193_reg_2269 <= sub_ln1193_fu_1547_p2;
                sub_ln703_1_reg_2279 <= sub_ln703_1_fu_1577_p2;
                sub_ln731_reg_2264 <= sub_ln731_fu_1509_p2;
                trunc_ln321_1_reg_2284 <= trunc_ln321_1_fu_1583_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln301_1_fu_1430_p1 = ap_const_lv1_1) and (tmp_12_fu_1434_p3 = ap_const_lv1_1) and (icmp_ln17_reg_2190 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_fu_1434_p3 = ap_const_lv1_0) and (icmp_ln17_reg_2190 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                    reg_1363(2 downto 1) <= grp_fu_1338_p2(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    reg_1363_pp0_iter1_reg(2 downto 1) <= reg_1363(2 downto 1);
                rem_0_addr_reg_2223_pp0_iter1_reg <= rem_0_addr_reg_2223;
                rem_1_addr_reg_2246_pp0_iter1_reg <= rem_1_addr_reg_2246;
                tmp_12_reg_2237_pp0_iter1_reg <= tmp_12_reg_2237;
                tmp_5_reg_2218_pp0_iter1_reg <= tmp_5_reg_2218;
                tmp_8_reg_2214_pp0_iter1_reg <= tmp_8_reg_2214;
                tmp_9_reg_2241_pp0_iter1_reg <= tmp_9_reg_2241;
                trunc_ln301_1_reg_2233_pp0_iter1_reg <= trunc_ln301_1_reg_2233;
                trunc_ln301_reg_2210_pp0_iter1_reg <= trunc_ln301_reg_2210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln301_1_reg_2233 = ap_const_lv1_1) and (tmp_12_reg_2237 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_12_reg_2237 = ap_const_lv1_0)))) then
                reg_1367 <= j_0_0_reg_1326(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_fu_1397_p3 = ap_const_lv1_1) and (trunc_ln301_fu_1393_p1 = ap_const_lv1_1) and (icmp_ln17_reg_2190 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                rem_0_addr_reg_2223 <= zext_ln18_reg_2194(6 - 1 downto 0);
                tmp_5_reg_2218 <= inputs_0_q0(21 downto 3);
                tmp_7_reg_2228 <= inputs_0_q0(13 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln301_1_fu_1430_p1 = ap_const_lv1_1) and (tmp_12_fu_1434_p3 = ap_const_lv1_1) and (icmp_ln17_reg_2190 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                rem_1_addr_reg_2246 <= zext_ln18_reg_2194(6 - 1 downto 0);
                tmp_10_reg_2251 <= inputs_1_q0(13 downto 3);
                tmp_9_reg_2241 <= inputs_1_q0(21 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln301_1_reg_2233 = ap_const_lv1_1) and (tmp_12_reg_2237 = ap_const_lv1_1))) then
                sub_ln731_1_reg_2298 <= sub_ln731_1_fu_1608_p2;
                tmp_s_reg_2293 <= rem_1_q0(29 downto 20);
                trunc_ln1333_1_reg_2310 <= rem_1_q0(29 downto 23);
                trunc_ln1333_3_reg_2303 <= sub_ln731_1_fu_1608_p2(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln17_reg_2190 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_12_reg_2237 <= inputs_1_q0(1 downto 1);
                tmp_8_reg_2214 <= inputs_0_q0(1 downto 1);
                trunc_ln301_1_reg_2233 <= trunc_ln301_1_fu_1430_p1;
                trunc_ln301_reg_2210 <= trunc_ln301_fu_1393_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_1_reg_2317 <= select_ln1494_fu_1659_p3(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln17_fu_1371_p2 = ap_const_lv1_0))) then
                    zext_ln18_reg_2194(5 downto 0) <= zext_ln18_fu_1387_p1(5 downto 0);
            end if;
        end if;
    end process;
    reg_1363(0) <= '1';
    reg_1363_pp0_iter1_reg(0) <= '1';
    zext_ln18_reg_2194(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln17_fu_1371_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln17_fu_1371_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln17_fu_1371_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ISI_q_V_1_fu_1918_p3 <= 
        select_ln1495_2_fu_1904_p3 when (or_ln1495_1_fu_1912_p2(0) = '1') else 
        trunc_ln_i1_fu_1882_p4;
    ISI_q_V_fu_1724_p3 <= 
        select_ln1495_fu_1710_p3 when (or_ln1495_fu_1718_p2(0) = '1') else 
        trunc_ln_i_fu_1688_p4;

    ISIquan_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_fu_1472_p1, zext_ln321_1_fu_1736_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_0_V_address0 <= zext_ln321_1_fu_1736_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_0_V_address0 <= zext_ln321_fu_1472_p1(4 - 1 downto 0);
        else 
            ISIquan_0_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_0_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_0_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_0_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_0_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_0_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_0_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_fu_1724_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_0_V_d0 <= ISI_q_V_fu_1724_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_0_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_0_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_0_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln301_reg_2210, tmp_8_reg_2214, trunc_ln321_1_reg_2284, trunc_ln321_fu_1468_p1)
    begin
        if ((((trunc_ln321_fu_1468_p1 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214 = ap_const_lv1_0)) or ((trunc_ln321_1_reg_2284 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_0_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_2_fu_1743_p1, zext_ln321_3_fu_1930_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_1_V_address0 <= zext_ln321_3_fu_1930_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_1_V_address0 <= zext_ln321_2_fu_1743_p1(4 - 1 downto 0);
        else 
            ISIquan_1_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_1_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_1_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_1_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_1_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_1_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_1_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_1_fu_1918_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_1_V_d0 <= ISI_q_V_1_fu_1918_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_1_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_1_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_1_V_we0_assign_proc : process(reg_1363, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, reg_1363_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_12_reg_2237, trunc_ln301_1_reg_2233_pp0_iter1_reg, tmp_12_reg_2237_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_12_reg_2237_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_1_reg_2233_pp0_iter1_reg = ap_const_lv1_1) and (reg_1363_pp0_iter1_reg = ap_const_lv3_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_reg_2237 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (reg_1363 = ap_const_lv3_1)))) then 
            ISIquan_1_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_fu_1472_p1, zext_ln321_1_fu_1736_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_2_V_address0 <= zext_ln321_1_fu_1736_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_2_V_address0 <= zext_ln321_fu_1472_p1(4 - 1 downto 0);
        else 
            ISIquan_2_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_2_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_2_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_2_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_2_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_2_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_2_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_fu_1724_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_2_V_d0 <= ISI_q_V_fu_1724_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_2_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_2_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_2_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_2_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln301_reg_2210, tmp_8_reg_2214, trunc_ln321_1_reg_2284, trunc_ln321_fu_1468_p1)
    begin
        if ((((trunc_ln321_fu_1468_p1 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214 = ap_const_lv1_0)) or ((trunc_ln321_1_reg_2284 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_2_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_3_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_2_fu_1743_p1, zext_ln321_3_fu_1930_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_3_V_address0 <= zext_ln321_3_fu_1930_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_3_V_address0 <= zext_ln321_2_fu_1743_p1(4 - 1 downto 0);
        else 
            ISIquan_3_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_3_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_3_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_3_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_3_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_3_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_3_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_1_fu_1918_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_3_V_d0 <= ISI_q_V_1_fu_1918_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_3_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_3_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_3_V_we0_assign_proc : process(reg_1363, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, reg_1363_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_12_reg_2237, trunc_ln301_1_reg_2233_pp0_iter1_reg, tmp_12_reg_2237_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_12_reg_2237_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_1_reg_2233_pp0_iter1_reg = ap_const_lv1_1) and (reg_1363_pp0_iter1_reg = ap_const_lv3_3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_reg_2237 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (reg_1363 = ap_const_lv3_3)))) then 
            ISIquan_3_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_4_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_fu_1472_p1, zext_ln321_1_fu_1736_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_4_V_address0 <= zext_ln321_1_fu_1736_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_4_V_address0 <= zext_ln321_fu_1472_p1(4 - 1 downto 0);
        else 
            ISIquan_4_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_4_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_4_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_4_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_4_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_4_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_4_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_fu_1724_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_4_V_d0 <= ISI_q_V_fu_1724_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_4_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_4_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_4_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_4_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln301_reg_2210, tmp_8_reg_2214, trunc_ln321_1_reg_2284, trunc_ln321_fu_1468_p1)
    begin
        if ((((trunc_ln321_fu_1468_p1 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214 = ap_const_lv1_0)) or ((trunc_ln321_1_reg_2284 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_4_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_5_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_2_fu_1743_p1, zext_ln321_3_fu_1930_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_5_V_address0 <= zext_ln321_3_fu_1930_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_5_V_address0 <= zext_ln321_2_fu_1743_p1(4 - 1 downto 0);
        else 
            ISIquan_5_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_5_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_5_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_5_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_5_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_5_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_5_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_1_fu_1918_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_5_V_d0 <= ISI_q_V_1_fu_1918_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_5_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_5_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_5_V_we0_assign_proc : process(reg_1363, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, reg_1363_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_12_reg_2237, trunc_ln301_1_reg_2233_pp0_iter1_reg, tmp_12_reg_2237_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_12_reg_2237_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_1_reg_2233_pp0_iter1_reg = ap_const_lv1_1) and (reg_1363_pp0_iter1_reg = ap_const_lv3_5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_reg_2237 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (reg_1363 = ap_const_lv3_5)))) then 
            ISIquan_5_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_6_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_fu_1472_p1, zext_ln321_1_fu_1736_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_6_V_address0 <= zext_ln321_1_fu_1736_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_6_V_address0 <= zext_ln321_fu_1472_p1(4 - 1 downto 0);
        else 
            ISIquan_6_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_6_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_6_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_6_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_6_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_6_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_6_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_fu_1724_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_6_V_d0 <= ISI_q_V_fu_1724_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_6_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_6_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_6_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_6_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln301_reg_2210, tmp_8_reg_2214, trunc_ln321_1_reg_2284, trunc_ln321_fu_1468_p1)
    begin
        if (((not((trunc_ln321_fu_1468_p1 = ap_const_lv3_0)) and not((trunc_ln321_fu_1468_p1 = ap_const_lv3_2)) and not((trunc_ln321_fu_1468_p1 = ap_const_lv3_4)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214 = ap_const_lv1_0)) or (not((trunc_ln321_1_reg_2284 = ap_const_lv3_0)) and not((trunc_ln321_1_reg_2284 = ap_const_lv3_2)) and not((trunc_ln321_1_reg_2284 = ap_const_lv3_4)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_reg_2214 = ap_const_lv1_1) and (trunc_ln301_reg_2210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_6_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_7_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_2_fu_1743_p1, zext_ln321_3_fu_1930_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_7_V_address0 <= zext_ln321_3_fu_1930_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_7_V_address0 <= zext_ln321_2_fu_1743_p1(4 - 1 downto 0);
        else 
            ISIquan_7_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_7_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_7_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_7_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_7_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_7_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_7_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_1_fu_1918_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_7_V_d0 <= ISI_q_V_1_fu_1918_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_7_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_7_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_7_V_we0_assign_proc : process(reg_1363, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, reg_1363_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_12_reg_2237, trunc_ln301_1_reg_2233_pp0_iter1_reg, tmp_12_reg_2237_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((not((reg_1363_pp0_iter1_reg = ap_const_lv3_1)) and not((reg_1363_pp0_iter1_reg = ap_const_lv3_3)) and not((reg_1363_pp0_iter1_reg = ap_const_lv3_5)) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_12_reg_2237_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_1_reg_2233_pp0_iter1_reg = ap_const_lv1_1)) or (not((reg_1363 = ap_const_lv3_1)) and not((reg_1363 = ap_const_lv3_3)) and not((reg_1363 = ap_const_lv3_5)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_reg_2237 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ISIquan_7_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln17_fu_1462_p2 <= std_logic_vector(unsigned(j_0_0_reg_1326) + unsigned(ap_const_lv7_2));
    and_ln1497_1_fu_1898_p2 <= (xor_ln1495_1_fu_1892_p2 and icmp_ln1497_1_fu_1876_p2);
    and_ln1497_fu_1704_p2 <= (xor_ln1495_fu_1698_p2 and icmp_ln1497_fu_1682_p2);
    and_ln731_1_fu_1498_p3 <= (tmp_7_reg_2228 & ap_const_lv1_0);
    and_ln731_2_fu_1751_p3 <= (tmp_s_reg_2293 & ap_const_lv2_0);
    and_ln731_3_fu_1597_p3 <= (tmp_10_reg_2251 & ap_const_lv1_0);
    and_ln_fu_1490_p3 <= (tmp_6_fu_1480_p4 & ap_const_lv2_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6);
    ap_CS_fsm_state11 <= ap_CS_fsm(7);
    ap_CS_fsm_state12 <= ap_CS_fsm(8);
    ap_CS_fsm_state13 <= ap_CS_fsm(9);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln17_fu_1371_p2)
    begin
        if ((icmp_ln17_fu_1371_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_0_0_phi_fu_1330_p4_assign_proc : process(j_0_0_reg_1326, icmp_ln17_reg_2190, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln17_reg_2256, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln17_reg_2190 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_0_phi_fu_1330_p4 <= add_ln17_reg_2256;
        else 
            ap_phi_mux_j_0_0_phi_fu_1330_p4 <= j_0_0_reg_1326;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_fu_1338_p2 <= (trunc_ln17_fu_1425_p1 or ap_const_lv3_1);
    grp_fu_1343_p4 <= j_0_0_reg_1326(6 downto 3);
    icmp_ln1494_1_fu_1801_p2 <= "1" when (signed(sext_ln1494_1_fu_1793_p1) > signed(zext_ln1494_1_fu_1797_p1)) else "0";
    icmp_ln1494_fu_1653_p2 <= "1" when (signed(sext_ln1494_fu_1646_p1) > signed(zext_ln1494_fu_1650_p1)) else "0";
    icmp_ln1495_1_fu_1870_p2 <= "1" when (unsigned(select_ln1494_1_fu_1840_p3) < unsigned(ap_const_lv12_28)) else "0";
    icmp_ln1495_fu_1676_p2 <= "1" when (unsigned(select_ln1494_fu_1659_p3) < unsigned(ap_const_lv12_28)) else "0";
    icmp_ln1497_1_fu_1876_p2 <= "1" when (unsigned(select_ln1494_1_fu_1840_p3) > unsigned(ap_const_lv12_190)) else "0";
    icmp_ln1497_fu_1682_p2 <= "1" when (unsigned(select_ln1494_fu_1659_p3) > unsigned(ap_const_lv12_190)) else "0";
    icmp_ln17_fu_1371_p2 <= "1" when (ap_phi_mux_j_0_0_phi_fu_1330_p4 = ap_const_lv7_60) else "0";
    inputs_0_address0 <= zext_ln18_fu_1387_p1(6 - 1 downto 0);

    inputs_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inputs_0_ce0 <= ap_const_logic_1;
        else 
            inputs_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_1_address0 <= zext_ln18_fu_1387_p1(6 - 1 downto 0);

    inputs_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inputs_1_ce0 <= ap_const_logic_1;
        else 
            inputs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_1377_p4 <= ap_phi_mux_j_0_0_phi_fu_1330_p4(6 downto 1);
    mul_ln1118_1_fu_1779_p0 <= mul_ln1118_1_fu_1779_p00(7 - 1 downto 0);
    mul_ln1118_1_fu_1779_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_1_reg_2310),14));
    mul_ln1118_1_fu_1779_p1 <= mul_ln1118_1_fu_1779_p10(7 - 1 downto 0);
    mul_ln1118_1_fu_1779_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_3_reg_2303),14));
    mul_ln1118_1_fu_1779_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_1_fu_1779_p0) * unsigned(mul_ln1118_1_fu_1779_p1), 14));
    mul_ln1118_fu_1561_p0 <= mul_ln1118_fu_1561_p00(7 - 1 downto 0);
    mul_ln1118_fu_1561_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_1529_p4),14));
    mul_ln1118_fu_1561_p1 <= mul_ln1118_fu_1561_p10(7 - 1 downto 0);
    mul_ln1118_fu_1561_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_2_fu_1515_p4),14));
    mul_ln1118_fu_1561_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_fu_1561_p0) * unsigned(mul_ln1118_fu_1561_p1), 14));
    or_ln1495_1_fu_1912_p2 <= (icmp_ln1495_1_fu_1870_p2 or and_ln1497_1_fu_1898_p2);
    or_ln1495_fu_1718_p2 <= (icmp_ln1495_fu_1676_p2 or and_ln1497_fu_1704_p2);
    or_ln50_6_10_fu_2169_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_1_fu_1959_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_2_fu_1980_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_3_fu_2001_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_4_fu_2022_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_5_fu_2043_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_6_fu_2064_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_7_fu_2085_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_8_fu_2106_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_9_fu_2127_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_fu_1938_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_s_fu_2148_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);

    output_0_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_0_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_0_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_0_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            output_0_address0 <= "XXX";
        end if; 
    end process;


    output_0_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_0_ce0 <= ap_const_logic_1;
        else 
            output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, or_ln50_6_fu_1938_p9, or_ln50_6_2_fu_1980_p9, or_ln50_6_4_fu_2022_p9, or_ln50_6_6_fu_2064_p9, or_ln50_6_8_fu_2106_p9, or_ln50_6_s_fu_2148_p9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_0_d0 <= or_ln50_6_s_fu_2148_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_0_d0 <= or_ln50_6_8_fu_2106_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_0_d0 <= or_ln50_6_6_fu_2064_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_0_d0 <= or_ln50_6_4_fu_2022_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_0_d0 <= or_ln50_6_2_fu_1980_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_0_d0 <= or_ln50_6_fu_1938_p9;
        else 
            output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_0_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_0_we0 <= ap_const_logic_1;
        else 
            output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_1_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_1_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_1_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_1_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_1_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_1_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            output_1_address0 <= "XXX";
        end if; 
    end process;


    output_1_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_1_ce0 <= ap_const_logic_1;
        else 
            output_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, or_ln50_6_1_fu_1959_p9, or_ln50_6_3_fu_2001_p9, or_ln50_6_5_fu_2043_p9, or_ln50_6_7_fu_2085_p9, or_ln50_6_9_fu_2127_p9, or_ln50_6_10_fu_2169_p9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_1_d0 <= or_ln50_6_10_fu_2169_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_1_d0 <= or_ln50_6_9_fu_2127_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_1_d0 <= or_ln50_6_7_fu_2085_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_1_d0 <= or_ln50_6_5_fu_2043_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_1_d0 <= or_ln50_6_3_fu_2001_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_1_d0 <= or_ln50_6_1_fu_1959_p9;
        else 
            output_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_1_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_1_we0 <= ap_const_logic_1;
        else 
            output_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rem_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, zext_ln18_reg_2194, rem_0_addr_reg_2223_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rem_0_address0 <= rem_0_addr_reg_2223_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            rem_0_address0 <= zext_ln18_reg_2194(6 - 1 downto 0);
        else 
            rem_0_address0 <= "XXXXXX";
        end if; 
    end process;


    rem_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            rem_0_ce0 <= ap_const_logic_1;
        else 
            rem_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rem_0_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1822_p4),32));

    rem_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_reg_2210_pp0_iter1_reg, tmp_8_reg_2214_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_2214_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_reg_2210_pp0_iter1_reg = ap_const_lv1_1))) then 
            rem_0_we0 <= ap_const_logic_1;
        else 
            rem_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rem_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, zext_ln18_reg_2194, rem_1_addr_reg_2246_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rem_1_address0 <= rem_1_addr_reg_2246_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            rem_1_address0 <= zext_ln18_reg_2194(6 - 1 downto 0);
        else 
            rem_1_address0 <= "XXXXXX";
        end if; 
    end process;


    rem_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            rem_1_ce0 <= ap_const_logic_1;
        else 
            rem_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rem_1_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1856_p4),32));

    rem_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_1_reg_2233_pp0_iter1_reg, tmp_12_reg_2237_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_12_reg_2237_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_1_reg_2233_pp0_iter1_reg = ap_const_lv1_1))) then 
            rem_1_we0 <= ap_const_logic_1;
        else 
            rem_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1494_1_fu_1840_p3 <= 
        sub_ln703_3_reg_2327 when (icmp_ln1494_1_reg_2322(0) = '1') else 
        shl_ln731_1_fu_1835_p2;
    select_ln1494_fu_1659_p3 <= 
        sub_ln703_1_reg_2279 when (icmp_ln1494_fu_1653_p2(0) = '1') else 
        shl_ln731_fu_1634_p2;
    select_ln1495_2_fu_1904_p3 <= 
        ap_const_lv4_D when (icmp_ln1495_1_fu_1870_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln1495_fu_1710_p3 <= 
        ap_const_lv4_D when (icmp_ln1495_fu_1676_p2(0) = '1') else 
        ap_const_lv4_E;
        sext_ln1494_1_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_1_fu_1785_p3),15));

        sext_ln1494_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_1639_p3),15));

    shl_ln1_fu_1639_p3 <= (sub_ln1193_reg_2269 & ap_const_lv2_0);
    shl_ln728_1_fu_1785_p3 <= (sub_ln1193_1_fu_1767_p2 & ap_const_lv2_0);
    shl_ln731_1_fu_1835_p2 <= std_logic_vector(shift_left(unsigned(sub_ln731_1_reg_2298),to_integer(unsigned('0' & ap_const_lv12_2(12-1 downto 0)))));
    shl_ln731_fu_1634_p2 <= std_logic_vector(shift_left(unsigned(sub_ln731_reg_2264),to_integer(unsigned('0' & ap_const_lv12_2(12-1 downto 0)))));
    sub_ln1193_1_fu_1767_p2 <= std_logic_vector(unsigned(zext_ln703_2_fu_1761_p1) - unsigned(zext_ln703_3_fu_1764_p1));
    sub_ln1193_fu_1547_p2 <= std_logic_vector(unsigned(zext_ln703_fu_1539_p1) - unsigned(zext_ln703_1_fu_1543_p1));
    sub_ln703_1_fu_1577_p2 <= std_logic_vector(unsigned(sub_ln703_fu_1571_p2) - unsigned(zext_ln1333_2_fu_1525_p1));
    sub_ln703_2_fu_1810_p2 <= std_logic_vector(unsigned(and_ln731_2_fu_1751_p3) - unsigned(zext_ln1333_1_fu_1807_p1));
    sub_ln703_3_fu_1816_p2 <= std_logic_vector(unsigned(sub_ln703_2_fu_1810_p2) - unsigned(zext_ln1333_3_fu_1758_p1));
    sub_ln703_fu_1571_p2 <= std_logic_vector(unsigned(and_ln_fu_1490_p3) - unsigned(zext_ln1333_fu_1567_p1));
    sub_ln731_1_fu_1608_p2 <= std_logic_vector(unsigned(and_ln731_3_fu_1597_p3) - unsigned(trunc_ln731_1_fu_1604_p1));
    sub_ln731_fu_1509_p2 <= std_logic_vector(unsigned(and_ln731_1_fu_1498_p3) - unsigned(trunc_ln731_fu_1505_p1));
    tmp_12_fu_1434_p3 <= inputs_1_q0(1 downto 1);
    tmp_2_fu_1822_p4 <= ((tmp_1_reg_2317 & tmp_5_reg_2218_pp0_iter1_reg) & ap_const_lv1_0);
    tmp_3_fu_1846_p4 <= select_ln1494_1_fu_1840_p3(11 downto 2);
    tmp_4_fu_1856_p4 <= ((tmp_3_fu_1846_p4 & tmp_9_reg_2241_pp0_iter1_reg) & ap_const_lv1_0);
    tmp_6_fu_1480_p4 <= rem_0_q0(29 downto 20);
    tmp_8_fu_1397_p3 <= inputs_0_q0(1 downto 1);
    trunc_ln1333_2_fu_1515_p4 <= sub_ln731_fu_1509_p2(9 downto 3);
    trunc_ln17_fu_1425_p1 <= j_0_0_reg_1326(3 - 1 downto 0);
    trunc_ln2_fu_1529_p4 <= rem_0_q0(29 downto 23);
    trunc_ln301_1_fu_1430_p1 <= inputs_1_q0(1 - 1 downto 0);
    trunc_ln301_fu_1393_p1 <= inputs_0_q0(1 - 1 downto 0);
    trunc_ln321_1_fu_1583_p1 <= j_0_0_reg_1326(3 - 1 downto 0);
    trunc_ln321_fu_1468_p1 <= j_0_0_reg_1326(3 - 1 downto 0);
    trunc_ln731_1_fu_1604_p1 <= rem_1_q0(12 - 1 downto 0);
    trunc_ln731_fu_1505_p1 <= rem_0_q0(12 - 1 downto 0);
    trunc_ln_i1_fu_1882_p4 <= select_ln1494_1_fu_1840_p3(8 downto 5);
    trunc_ln_i_fu_1688_p4 <= select_ln1494_fu_1659_p3(8 downto 5);
    xor_ln1495_1_fu_1892_p2 <= (icmp_ln1495_1_fu_1870_p2 xor ap_const_lv1_1);
    xor_ln1495_fu_1698_p2 <= (icmp_ln1495_fu_1676_p2 xor ap_const_lv1_1);
    zext_ln1333_1_fu_1807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_1_reg_2310),12));
    zext_ln1333_2_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_2_fu_1515_p4),12));
    zext_ln1333_3_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_3_reg_2303),12));
    zext_ln1333_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_1529_p4),12));
    zext_ln1494_1_fu_1797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_1_fu_1779_p2),15));
    zext_ln1494_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_reg_2274),15));
    zext_ln18_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1377_p4),64));
    zext_ln321_1_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln321_1_reg_2288),64));
    zext_ln321_2_fu_1743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1367),64));
    zext_ln321_3_fu_1930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1367),64));
    zext_ln321_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1343_p4),64));
    zext_ln703_1_fu_1543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_2_fu_1515_p4),8));
    zext_ln703_2_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_1_reg_2310),8));
    zext_ln703_3_fu_1764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_3_reg_2303),8));
    zext_ln703_fu_1539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_1529_p4),8));
end behav;
