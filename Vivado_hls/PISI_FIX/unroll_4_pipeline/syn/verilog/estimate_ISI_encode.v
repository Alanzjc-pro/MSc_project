// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="estimate_ISI_encode,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.242500,HLS_SYN_LAT=58,HLS_SYN_TPT=none,HLS_SYN_MEM=24,HLS_SYN_DSP=0,HLS_SYN_FF=1575,HLS_SYN_LUT=2709,HLS_VERSION=2019_1}" *)

module estimate_ISI_encode (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_state7 = 10'd8;
parameter    ap_ST_fsm_state8 = 10'd16;
parameter    ap_ST_fsm_state9 = 10'd32;
parameter    ap_ST_fsm_state10 = 10'd64;
parameter    ap_ST_fsm_state11 = 10'd128;
parameter    ap_ST_fsm_state12 = 10'd256;
parameter    ap_ST_fsm_state13 = 10'd512;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [4:0] inputs_0_address0;
reg    inputs_0_ce0;
wire   [31:0] inputs_0_q0;
wire   [4:0] inputs_1_address0;
reg    inputs_1_ce0;
wire   [31:0] inputs_1_q0;
wire   [4:0] inputs_2_address0;
reg    inputs_2_ce0;
wire   [31:0] inputs_2_q0;
wire   [4:0] inputs_3_address0;
reg    inputs_3_ce0;
wire   [31:0] inputs_3_q0;
reg   [4:0] rem_0_address0;
reg    rem_0_ce0;
reg    rem_0_we0;
wire   [31:0] rem_0_d0;
wire   [31:0] rem_0_q0;
reg   [4:0] rem_1_address0;
reg    rem_1_ce0;
reg    rem_1_we0;
wire   [31:0] rem_1_d0;
wire   [31:0] rem_1_q0;
reg   [4:0] rem_2_address0;
reg    rem_2_ce0;
reg    rem_2_we0;
wire   [31:0] rem_2_d0;
wire   [31:0] rem_2_q0;
reg   [4:0] rem_3_address0;
reg    rem_3_ce0;
reg    rem_3_we0;
wire   [31:0] rem_3_d0;
wire   [31:0] rem_3_q0;
reg   [1:0] output_0_address0;
reg    output_0_ce0;
reg    output_0_we0;
reg   [31:0] output_0_d0;
reg   [1:0] output_1_address0;
reg    output_1_ce0;
reg    output_1_we0;
reg   [31:0] output_1_d0;
reg   [1:0] output_2_address0;
reg    output_2_ce0;
reg    output_2_we0;
reg   [31:0] output_2_d0;
reg   [1:0] output_3_address0;
reg    output_3_ce0;
reg    output_3_we0;
reg   [31:0] output_3_d0;
reg   [6:0] j_0_0_reg_1396;
reg   [6:0] j_0_0_reg_1396_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln17_fu_1448_p2;
reg   [0:0] icmp_ln17_reg_2854;
wire   [63:0] zext_ln18_fu_1464_p1;
reg   [63:0] zext_ln18_reg_2858;
wire   [0:0] trunc_ln301_fu_1472_p1;
reg   [0:0] trunc_ln301_reg_2886;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] trunc_ln301_reg_2886_pp0_iter1_reg;
wire   [0:0] tmp_12_fu_1476_p3;
reg   [0:0] tmp_12_reg_2890;
reg   [0:0] tmp_12_reg_2890_pp0_iter1_reg;
reg   [18:0] tmp_9_reg_2894;
reg   [18:0] tmp_9_reg_2894_pp0_iter1_reg;
reg   [4:0] rem_0_addr_reg_2899;
reg   [4:0] rem_0_addr_reg_2899_pp0_iter1_reg;
reg   [10:0] tmp_10_reg_2904;
wire   [0:0] trunc_ln301_1_fu_1504_p1;
reg   [0:0] trunc_ln301_1_reg_2909;
reg   [0:0] trunc_ln301_1_reg_2909_pp0_iter1_reg;
wire   [0:0] tmp_16_fu_1508_p3;
reg   [0:0] tmp_16_reg_2913;
reg   [0:0] tmp_16_reg_2913_pp0_iter1_reg;
reg   [18:0] tmp_11_reg_2917;
reg   [18:0] tmp_11_reg_2917_pp0_iter1_reg;
reg   [4:0] rem_1_addr_reg_2922;
reg   [4:0] rem_1_addr_reg_2922_pp0_iter1_reg;
reg   [10:0] tmp_14_reg_2927;
wire   [0:0] trunc_ln301_2_fu_1536_p1;
reg   [0:0] trunc_ln301_2_reg_2932;
reg   [0:0] trunc_ln301_2_reg_2932_pp0_iter1_reg;
wire   [0:0] tmp_20_fu_1540_p3;
reg   [0:0] tmp_20_reg_2936;
reg   [0:0] tmp_20_reg_2936_pp0_iter1_reg;
reg   [18:0] tmp_15_reg_2940;
reg   [18:0] tmp_15_reg_2940_pp0_iter1_reg;
reg   [4:0] rem_2_addr_reg_2945;
reg   [4:0] rem_2_addr_reg_2945_pp0_iter1_reg;
reg   [10:0] tmp_18_reg_2950;
wire   [0:0] trunc_ln301_3_fu_1568_p1;
reg   [0:0] trunc_ln301_3_reg_2955;
reg   [0:0] trunc_ln301_3_reg_2955_pp0_iter1_reg;
wire   [0:0] tmp_24_fu_1572_p3;
reg   [0:0] tmp_24_reg_2959;
reg   [0:0] tmp_24_reg_2959_pp0_iter1_reg;
reg   [18:0] tmp_19_reg_2963;
reg   [18:0] tmp_19_reg_2963_pp0_iter1_reg;
reg   [4:0] rem_3_addr_reg_2968;
reg   [4:0] rem_3_addr_reg_2968_pp0_iter1_reg;
reg   [10:0] tmp_22_reg_2973;
wire   [6:0] add_ln17_fu_1600_p2;
reg   [6:0] add_ln17_reg_2978;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] sub_ln731_fu_1651_p2;
reg   [11:0] sub_ln731_reg_2986;
wire   [7:0] sub_ln1193_fu_1689_p2;
reg   [7:0] sub_ln1193_reg_2991;
wire   [13:0] mul_ln1118_fu_1703_p2;
reg   [13:0] mul_ln1118_reg_2996;
wire   [11:0] sub_ln703_1_fu_1719_p2;
reg   [11:0] sub_ln703_1_reg_3001;
wire   [11:0] sub_ln731_1_fu_1776_p2;
reg   [11:0] sub_ln731_1_reg_3009;
wire   [7:0] sub_ln1193_1_fu_1814_p2;
reg   [7:0] sub_ln1193_1_reg_3014;
wire   [13:0] mul_ln1118_1_fu_1828_p2;
reg   [13:0] mul_ln1118_1_reg_3019;
wire   [11:0] sub_ln703_3_fu_1844_p2;
reg   [11:0] sub_ln703_3_reg_3024;
wire   [0:0] icmp_ln321_3_fu_1856_p2;
reg   [0:0] icmp_ln321_3_reg_3029;
wire   [0:0] icmp_ln321_4_fu_1868_p2;
reg   [0:0] icmp_ln321_4_reg_3033;
reg   [9:0] tmp_17_reg_3037;
wire   [11:0] sub_ln731_2_fu_1895_p2;
reg   [11:0] sub_ln731_2_reg_3042;
reg   [6:0] trunc_ln1333_6_reg_3047;
reg   [6:0] trunc_ln1333_2_reg_3054;
wire   [0:0] icmp_ln321_5_fu_1927_p2;
reg   [0:0] icmp_ln321_5_reg_3061;
wire   [0:0] icmp_ln321_6_fu_1939_p2;
reg   [0:0] icmp_ln321_6_reg_3065;
reg   [9:0] tmp_21_reg_3069;
wire   [11:0] sub_ln731_3_fu_1966_p2;
reg   [11:0] sub_ln731_3_reg_3074;
reg   [6:0] trunc_ln1333_7_reg_3079;
reg   [6:0] trunc_ln1333_3_reg_3086;
wire   [0:0] icmp_ln321_7_fu_1998_p2;
reg   [0:0] icmp_ln321_7_reg_3093;
reg   [9:0] tmp_1_reg_3097;
reg   [9:0] tmp_3_reg_3105;
wire   [0:0] icmp_ln1494_2_fu_2282_p2;
reg   [0:0] icmp_ln1494_2_reg_3110;
wire   [11:0] sub_ln703_5_fu_2297_p2;
reg   [11:0] sub_ln703_5_reg_3115;
wire   [3:0] grp_fu_1428_p4;
reg   [3:0] lshr_ln321_5_reg_3120;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] icmp_ln1494_3_fu_2359_p2;
reg   [0:0] icmp_ln1494_3_reg_3125;
wire   [11:0] sub_ln703_7_fu_2374_p2;
reg   [11:0] sub_ln703_7_reg_3130;
wire   [3:0] grp_fu_1438_p4;
reg   [3:0] lshr_ln321_7_reg_3135;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] ISIquan_0_V_address0;
reg    ISIquan_0_V_ce0;
reg    ISIquan_0_V_we0;
reg   [3:0] ISIquan_0_V_d0;
wire   [3:0] ISIquan_0_V_q0;
reg   [3:0] ISIquan_0_V_address1;
reg    ISIquan_0_V_ce1;
wire   [3:0] ISIquan_0_V_q1;
reg   [3:0] ISIquan_1_V_address0;
reg    ISIquan_1_V_ce0;
reg    ISIquan_1_V_we0;
reg   [3:0] ISIquan_1_V_d0;
wire   [3:0] ISIquan_1_V_q0;
reg   [3:0] ISIquan_1_V_address1;
reg    ISIquan_1_V_ce1;
wire   [3:0] ISIquan_1_V_q1;
reg   [3:0] ISIquan_2_V_address0;
reg    ISIquan_2_V_ce0;
reg    ISIquan_2_V_we0;
reg   [3:0] ISIquan_2_V_d0;
wire   [3:0] ISIquan_2_V_q0;
reg   [3:0] ISIquan_2_V_address1;
reg    ISIquan_2_V_ce1;
wire   [3:0] ISIquan_2_V_q1;
reg   [3:0] ISIquan_3_V_address0;
reg    ISIquan_3_V_ce0;
reg    ISIquan_3_V_we0;
reg   [3:0] ISIquan_3_V_d0;
wire   [3:0] ISIquan_3_V_q0;
reg   [3:0] ISIquan_3_V_address1;
reg    ISIquan_3_V_ce1;
wire   [3:0] ISIquan_3_V_q1;
reg   [3:0] ISIquan_4_V_address0;
reg    ISIquan_4_V_ce0;
reg    ISIquan_4_V_we0;
reg   [3:0] ISIquan_4_V_d0;
wire   [3:0] ISIquan_4_V_q0;
reg   [3:0] ISIquan_4_V_address1;
reg    ISIquan_4_V_ce1;
wire   [3:0] ISIquan_4_V_q1;
reg   [3:0] ISIquan_5_V_address0;
reg    ISIquan_5_V_ce0;
reg    ISIquan_5_V_we0;
reg   [3:0] ISIquan_5_V_d0;
wire   [3:0] ISIquan_5_V_q0;
reg   [3:0] ISIquan_5_V_address1;
reg    ISIquan_5_V_ce1;
wire   [3:0] ISIquan_5_V_q1;
reg   [3:0] ISIquan_6_V_address0;
reg    ISIquan_6_V_ce0;
reg    ISIquan_6_V_we0;
reg   [3:0] ISIquan_6_V_d0;
wire   [3:0] ISIquan_6_V_q0;
reg   [3:0] ISIquan_6_V_address1;
reg    ISIquan_6_V_ce1;
wire   [3:0] ISIquan_6_V_q1;
reg   [3:0] ISIquan_7_V_address0;
reg    ISIquan_7_V_ce0;
reg    ISIquan_7_V_we0;
reg   [3:0] ISIquan_7_V_d0;
wire   [3:0] ISIquan_7_V_q0;
reg   [3:0] ISIquan_7_V_address1;
reg    ISIquan_7_V_ce1;
wire   [3:0] ISIquan_7_V_q1;
reg   [6:0] ap_phi_mux_j_0_0_phi_fu_1400_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln321_fu_1610_p1;
wire   [63:0] zext_ln321_2_fu_1735_p1;
wire   [63:0] zext_ln321_1_fu_2108_p1;
wire   [63:0] zext_ln321_3_fu_2220_p1;
wire   [63:0] zext_ln321_4_fu_2226_p1;
wire   [63:0] zext_ln321_6_fu_2303_p1;
wire   [63:0] zext_ln321_5_fu_2499_p1;
wire   [63:0] zext_ln321_7_fu_2597_p1;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln321_fu_1616_p2;
wire   [0:0] icmp_ln321_1_fu_2114_p2;
wire   [3:0] ISI_q_V_fu_2094_p3;
wire   [0:0] icmp_ln321_2_fu_1741_p2;
wire   [3:0] ISI_q_V_1_fu_2210_p3;
wire   [3:0] ISI_q_V_2_fu_2489_p3;
wire   [3:0] ISI_q_V_3_fu_2587_p3;
wire   [31:0] or_ln50_6_fu_2602_p9;
wire   [31:0] or_ln50_6_4_fu_2686_p9;
wire   [31:0] or_ln50_6_8_fu_2770_p9;
wire   [31:0] or_ln50_6_1_fu_2623_p9;
wire   [31:0] or_ln50_6_5_fu_2707_p9;
wire   [31:0] or_ln50_6_9_fu_2791_p9;
wire   [31:0] or_ln50_6_2_fu_2644_p9;
wire   [31:0] or_ln50_6_6_fu_2728_p9;
wire   [31:0] or_ln50_6_s_fu_2812_p9;
wire   [31:0] or_ln50_6_3_fu_2665_p9;
wire   [31:0] or_ln50_6_7_fu_2749_p9;
wire   [31:0] or_ln50_6_10_fu_2833_p9;
reg   [6:0] grp_fu_1408_p1;
reg   [6:0] grp_fu_1418_p1;
wire   [4:0] lshr_ln_fu_1454_p4;
wire   [3:0] grp_fu_1408_p4;
wire   [2:0] trunc_ln321_fu_1606_p1;
wire   [9:0] tmp_s_fu_1622_p4;
wire   [11:0] and_ln731_1_fu_1640_p3;
wire   [11:0] trunc_ln731_fu_1647_p1;
wire   [6:0] trunc_ln1333_4_fu_1657_p4;
wire   [6:0] trunc_ln2_fu_1671_p4;
wire   [7:0] zext_ln703_fu_1681_p1;
wire   [7:0] zext_ln703_1_fu_1685_p1;
wire   [6:0] mul_ln1118_fu_1703_p0;
wire   [6:0] mul_ln1118_fu_1703_p1;
wire   [11:0] and_ln_fu_1632_p3;
wire   [11:0] zext_ln1333_fu_1709_p1;
wire   [11:0] sub_ln703_fu_1713_p2;
wire   [11:0] zext_ln1333_4_fu_1667_p1;
wire   [2:0] trunc_ln17_fu_1725_p1;
wire   [3:0] grp_fu_1418_p4;
wire   [2:0] or_ln321_fu_1729_p2;
wire   [9:0] tmp_13_fu_1747_p4;
wire   [11:0] and_ln731_3_fu_1765_p3;
wire   [11:0] trunc_ln731_1_fu_1772_p1;
wire   [6:0] trunc_ln1333_5_fu_1782_p4;
wire   [6:0] trunc_ln1333_1_fu_1796_p4;
wire   [7:0] zext_ln703_2_fu_1806_p1;
wire   [7:0] zext_ln703_3_fu_1810_p1;
wire   [6:0] mul_ln1118_1_fu_1828_p0;
wire   [6:0] mul_ln1118_1_fu_1828_p1;
wire   [11:0] and_ln731_2_fu_1757_p3;
wire   [11:0] zext_ln1333_1_fu_1834_p1;
wire   [11:0] sub_ln703_2_fu_1838_p2;
wire   [11:0] zext_ln1333_5_fu_1792_p1;
wire   [2:0] or_ln321_1_fu_1850_p2;
wire   [2:0] or_ln321_2_fu_1862_p2;
wire   [11:0] and_ln731_5_fu_1884_p3;
wire   [11:0] trunc_ln731_2_fu_1891_p1;
wire   [2:0] or_ln321_3_fu_1921_p2;
wire   [2:0] or_ln321_4_fu_1933_p2;
wire   [11:0] and_ln731_7_fu_1955_p3;
wire   [11:0] trunc_ln731_3_fu_1962_p1;
wire   [2:0] or_ln321_5_fu_1992_p2;
wire   [9:0] shl_ln1_fu_2009_p3;
wire  signed [14:0] sext_ln1494_fu_2016_p1;
wire   [14:0] zext_ln1494_fu_2020_p1;
wire   [0:0] icmp_ln1494_fu_2023_p2;
wire   [11:0] shl_ln731_fu_2004_p2;
wire   [11:0] select_ln1494_fu_2029_p3;
wire   [0:0] icmp_ln1495_fu_2046_p2;
wire   [0:0] icmp_ln1497_fu_2052_p2;
wire   [0:0] xor_ln1495_fu_2068_p2;
wire   [0:0] and_ln1497_fu_2074_p2;
wire   [0:0] or_ln1495_fu_2088_p2;
wire   [3:0] select_ln1495_fu_2080_p3;
wire   [3:0] trunc_ln_i_fu_2058_p4;
wire   [2:0] trunc_ln321_1_fu_2104_p1;
wire   [9:0] shl_ln728_1_fu_2125_p3;
wire  signed [14:0] sext_ln1494_1_fu_2132_p1;
wire   [14:0] zext_ln1494_1_fu_2136_p1;
wire   [0:0] icmp_ln1494_1_fu_2139_p2;
wire   [11:0] shl_ln731_1_fu_2120_p2;
wire   [11:0] select_ln1494_1_fu_2145_p3;
wire   [0:0] icmp_ln1495_1_fu_2162_p2;
wire   [0:0] icmp_ln1497_1_fu_2168_p2;
wire   [0:0] xor_ln1495_1_fu_2184_p2;
wire   [0:0] and_ln1497_1_fu_2190_p2;
wire   [0:0] or_ln1495_1_fu_2204_p2;
wire   [3:0] select_ln1495_2_fu_2196_p3;
wire   [3:0] trunc_ln_i3_fu_2174_p4;
wire   [7:0] zext_ln703_4_fu_2242_p1;
wire   [7:0] zext_ln703_5_fu_2245_p1;
wire   [6:0] mul_ln1118_2_fu_2260_p0;
wire   [6:0] mul_ln1118_2_fu_2260_p1;
wire   [7:0] sub_ln1193_2_fu_2248_p2;
wire   [9:0] shl_ln728_2_fu_2266_p3;
wire   [13:0] mul_ln1118_2_fu_2260_p2;
wire  signed [14:0] sext_ln1494_2_fu_2274_p1;
wire   [14:0] zext_ln1494_2_fu_2278_p1;
wire   [11:0] and_ln731_4_fu_2232_p3;
wire   [11:0] zext_ln1333_2_fu_2288_p1;
wire   [11:0] sub_ln703_4_fu_2291_p2;
wire   [11:0] zext_ln1333_6_fu_2239_p1;
wire   [7:0] zext_ln703_6_fu_2319_p1;
wire   [7:0] zext_ln703_7_fu_2322_p1;
wire   [6:0] mul_ln1118_3_fu_2337_p0;
wire   [6:0] mul_ln1118_3_fu_2337_p1;
wire   [7:0] sub_ln1193_3_fu_2325_p2;
wire   [9:0] shl_ln728_3_fu_2343_p3;
wire   [13:0] mul_ln1118_3_fu_2337_p2;
wire  signed [14:0] sext_ln1494_3_fu_2351_p1;
wire   [14:0] zext_ln1494_3_fu_2355_p1;
wire   [11:0] and_ln731_6_fu_2309_p3;
wire   [11:0] zext_ln1333_3_fu_2365_p1;
wire   [11:0] sub_ln703_6_fu_2368_p2;
wire   [11:0] zext_ln1333_7_fu_2316_p1;
wire   [29:0] tmp_2_fu_2380_p4;
wire   [29:0] tmp_4_fu_2393_p4;
wire   [11:0] shl_ln731_2_fu_2406_p2;
wire   [11:0] select_ln1494_2_fu_2411_p3;
wire   [9:0] tmp_5_fu_2417_p4;
wire   [29:0] tmp_6_fu_2427_p4;
wire   [0:0] icmp_ln1495_2_fu_2441_p2;
wire   [0:0] icmp_ln1497_2_fu_2447_p2;
wire   [0:0] xor_ln1495_2_fu_2463_p2;
wire   [0:0] and_ln1497_2_fu_2469_p2;
wire   [0:0] or_ln1495_2_fu_2483_p2;
wire   [3:0] select_ln1495_4_fu_2475_p3;
wire   [3:0] trunc_ln_i1_fu_2453_p4;
wire   [11:0] shl_ln731_3_fu_2504_p2;
wire   [11:0] select_ln1494_3_fu_2509_p3;
wire   [9:0] tmp_7_fu_2515_p4;
wire   [29:0] tmp_8_fu_2525_p4;
wire   [0:0] icmp_ln1495_3_fu_2539_p2;
wire   [0:0] icmp_ln1497_3_fu_2545_p2;
wire   [0:0] xor_ln1495_3_fu_2561_p2;
wire   [0:0] and_ln1497_3_fu_2567_p2;
wire   [0:0] or_ln1495_3_fu_2581_p2;
wire   [3:0] select_ln1495_6_fu_2573_p3;
wire   [3:0] trunc_ln_i2_fu_2551_p4;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] mul_ln1118_1_fu_1828_p00;
wire   [13:0] mul_ln1118_1_fu_1828_p10;
wire   [13:0] mul_ln1118_2_fu_2260_p00;
wire   [13:0] mul_ln1118_2_fu_2260_p10;
wire   [13:0] mul_ln1118_3_fu_2337_p00;
wire   [13:0] mul_ln1118_3_fu_2337_p10;
wire   [13:0] mul_ln1118_fu_1703_p00;
wire   [13:0] mul_ln1118_fu_1703_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

estimate_ISI_encode_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
estimate_ISI_encode_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .inputs_0_address0(inputs_0_address0),
    .inputs_0_ce0(inputs_0_ce0),
    .inputs_0_q0(inputs_0_q0),
    .inputs_1_address0(inputs_1_address0),
    .inputs_1_ce0(inputs_1_ce0),
    .inputs_1_q0(inputs_1_q0),
    .inputs_2_address0(inputs_2_address0),
    .inputs_2_ce0(inputs_2_ce0),
    .inputs_2_q0(inputs_2_q0),
    .inputs_3_address0(inputs_3_address0),
    .inputs_3_ce0(inputs_3_ce0),
    .inputs_3_q0(inputs_3_q0),
    .rem_0_address0(rem_0_address0),
    .rem_0_ce0(rem_0_ce0),
    .rem_0_we0(rem_0_we0),
    .rem_0_d0(rem_0_d0),
    .rem_0_q0(rem_0_q0),
    .rem_1_address0(rem_1_address0),
    .rem_1_ce0(rem_1_ce0),
    .rem_1_we0(rem_1_we0),
    .rem_1_d0(rem_1_d0),
    .rem_1_q0(rem_1_q0),
    .rem_2_address0(rem_2_address0),
    .rem_2_ce0(rem_2_ce0),
    .rem_2_we0(rem_2_we0),
    .rem_2_d0(rem_2_d0),
    .rem_2_q0(rem_2_q0),
    .rem_3_address0(rem_3_address0),
    .rem_3_ce0(rem_3_ce0),
    .rem_3_we0(rem_3_we0),
    .rem_3_d0(rem_3_d0),
    .rem_3_q0(rem_3_q0),
    .output_0_address0(output_0_address0),
    .output_0_ce0(output_0_ce0),
    .output_0_we0(output_0_we0),
    .output_0_d0(output_0_d0),
    .output_1_address0(output_1_address0),
    .output_1_ce0(output_1_ce0),
    .output_1_we0(output_1_we0),
    .output_1_d0(output_1_d0),
    .output_2_address0(output_2_address0),
    .output_2_ce0(output_2_ce0),
    .output_2_we0(output_2_we0),
    .output_2_d0(output_2_d0),
    .output_3_address0(output_3_address0),
    .output_3_ce0(output_3_ce0),
    .output_3_we0(output_3_we0),
    .output_3_d0(output_3_d0)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_0_V_address0),
    .ce0(ISIquan_0_V_ce0),
    .we0(ISIquan_0_V_we0),
    .d0(ISIquan_0_V_d0),
    .q0(ISIquan_0_V_q0),
    .address1(ISIquan_0_V_address1),
    .ce1(ISIquan_0_V_ce1),
    .q1(ISIquan_0_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_1_V_address0),
    .ce0(ISIquan_1_V_ce0),
    .we0(ISIquan_1_V_we0),
    .d0(ISIquan_1_V_d0),
    .q0(ISIquan_1_V_q0),
    .address1(ISIquan_1_V_address1),
    .ce1(ISIquan_1_V_ce1),
    .q1(ISIquan_1_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_2_V_address0),
    .ce0(ISIquan_2_V_ce0),
    .we0(ISIquan_2_V_we0),
    .d0(ISIquan_2_V_d0),
    .q0(ISIquan_2_V_q0),
    .address1(ISIquan_2_V_address1),
    .ce1(ISIquan_2_V_ce1),
    .q1(ISIquan_2_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_3_V_address0),
    .ce0(ISIquan_3_V_ce0),
    .we0(ISIquan_3_V_we0),
    .d0(ISIquan_3_V_d0),
    .q0(ISIquan_3_V_q0),
    .address1(ISIquan_3_V_address1),
    .ce1(ISIquan_3_V_ce1),
    .q1(ISIquan_3_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_4_V_address0),
    .ce0(ISIquan_4_V_ce0),
    .we0(ISIquan_4_V_we0),
    .d0(ISIquan_4_V_d0),
    .q0(ISIquan_4_V_q0),
    .address1(ISIquan_4_V_address1),
    .ce1(ISIquan_4_V_ce1),
    .q1(ISIquan_4_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_5_V_address0),
    .ce0(ISIquan_5_V_ce0),
    .we0(ISIquan_5_V_we0),
    .d0(ISIquan_5_V_d0),
    .q0(ISIquan_5_V_q0),
    .address1(ISIquan_5_V_address1),
    .ce1(ISIquan_5_V_ce1),
    .q1(ISIquan_5_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_6_V_address0),
    .ce0(ISIquan_6_V_ce0),
    .we0(ISIquan_6_V_we0),
    .d0(ISIquan_6_V_d0),
    .q0(ISIquan_6_V_q0),
    .address1(ISIquan_6_V_address1),
    .ce1(ISIquan_6_V_ce1),
    .q1(ISIquan_6_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_7_V_address0),
    .ce0(ISIquan_7_V_ce0),
    .we0(ISIquan_7_V_we0),
    .d0(ISIquan_7_V_d0),
    .q0(ISIquan_7_V_q0),
    .address1(ISIquan_7_V_address1),
    .ce1(ISIquan_7_V_ce1),
    .q1(ISIquan_7_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_2854 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_0_0_reg_1396 <= add_ln17_reg_2978;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_0_0_reg_1396 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_2854 == 1'd0))) begin
        add_ln17_reg_2978 <= add_ln17_fu_1600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_20_reg_2936 == 1'd1) & (trunc_ln301_2_reg_2932 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln1494_2_reg_3110 <= icmp_ln1494_2_fu_2282_p2;
        sub_ln703_5_reg_3115 <= sub_ln703_5_fu_2297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_24_reg_2959 == 1'd1) & (trunc_ln301_3_reg_2955 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln1494_3_reg_3125 <= icmp_ln1494_3_fu_2359_p2;
        sub_ln703_7_reg_3130 <= sub_ln703_7_fu_2374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln17_reg_2854 <= icmp_ln17_fu_1448_p2;
        j_0_0_reg_1396_pp0_iter1_reg <= j_0_0_reg_1396;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_16_reg_2913 == 1'd1) & (trunc_ln301_1_reg_2909 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln321_3_reg_3029 <= icmp_ln321_3_fu_1856_p2;
        mul_ln1118_1_reg_3019 <= mul_ln1118_1_fu_1828_p2;
        sub_ln1193_1_reg_3014 <= sub_ln1193_1_fu_1814_p2;
        sub_ln703_3_reg_3024 <= sub_ln703_3_fu_1844_p2;
        sub_ln731_1_reg_3009 <= sub_ln731_1_fu_1776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_2936 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln321_4_reg_3033 <= icmp_ln321_4_fu_1868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_2936 == 1'd1) & (trunc_ln301_2_reg_2932 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln321_5_reg_3061 <= icmp_ln321_5_fu_1927_p2;
        sub_ln731_2_reg_3042 <= sub_ln731_2_fu_1895_p2;
        tmp_17_reg_3037 <= {{rem_2_q0[29:20]}};
        trunc_ln1333_2_reg_3054 <= {{rem_2_q0[29:23]}};
        trunc_ln1333_6_reg_3047 <= {{sub_ln731_2_fu_1895_p2[9:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_24_reg_2959 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln321_6_reg_3065 <= icmp_ln321_6_fu_1939_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_24_reg_2959 == 1'd1) & (trunc_ln301_3_reg_2955 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln321_7_reg_3093 <= icmp_ln321_7_fu_1998_p2;
        sub_ln731_3_reg_3074 <= sub_ln731_3_fu_1966_p2;
        tmp_21_reg_3069 <= {{rem_3_q0[29:20]}};
        trunc_ln1333_3_reg_3086 <= {{rem_3_q0[29:23]}};
        trunc_ln1333_7_reg_3079 <= {{sub_ln731_3_fu_1966_p2[9:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_20_reg_2936 == 1'd1) & (trunc_ln301_2_reg_2932 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        lshr_ln321_5_reg_3120 <= {{j_0_0_reg_1396_pp0_iter1_reg[6:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_24_reg_2959 == 1'd1) & (trunc_ln301_3_reg_2955 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        lshr_ln321_7_reg_3135 <= {{j_0_0_reg_1396_pp0_iter1_reg[6:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_12_reg_2890 == 1'd1) & (trunc_ln301_reg_2886 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1118_reg_2996 <= mul_ln1118_fu_1703_p2;
        sub_ln1193_reg_2991 <= sub_ln1193_fu_1689_p2;
        sub_ln703_1_reg_3001 <= sub_ln703_1_fu_1719_p2;
        sub_ln731_reg_2986 <= sub_ln731_fu_1651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_fu_1476_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_fu_1472_p1 == 1'd1) & (icmp_ln17_reg_2854 == 1'd0))) begin
        rem_0_addr_reg_2899 <= zext_ln18_reg_2858;
        tmp_10_reg_2904 <= {{inputs_0_q0[13:3]}};
        tmp_9_reg_2894 <= {{inputs_0_q0[21:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        rem_0_addr_reg_2899_pp0_iter1_reg <= rem_0_addr_reg_2899;
        rem_1_addr_reg_2922_pp0_iter1_reg <= rem_1_addr_reg_2922;
        rem_2_addr_reg_2945_pp0_iter1_reg <= rem_2_addr_reg_2945;
        rem_3_addr_reg_2968_pp0_iter1_reg <= rem_3_addr_reg_2968;
        tmp_11_reg_2917_pp0_iter1_reg <= tmp_11_reg_2917;
        tmp_12_reg_2890_pp0_iter1_reg <= tmp_12_reg_2890;
        tmp_15_reg_2940_pp0_iter1_reg <= tmp_15_reg_2940;
        tmp_16_reg_2913_pp0_iter1_reg <= tmp_16_reg_2913;
        tmp_19_reg_2963_pp0_iter1_reg <= tmp_19_reg_2963;
        tmp_20_reg_2936_pp0_iter1_reg <= tmp_20_reg_2936;
        tmp_24_reg_2959_pp0_iter1_reg <= tmp_24_reg_2959;
        tmp_9_reg_2894_pp0_iter1_reg <= tmp_9_reg_2894;
        trunc_ln301_1_reg_2909_pp0_iter1_reg <= trunc_ln301_1_reg_2909;
        trunc_ln301_2_reg_2932_pp0_iter1_reg <= trunc_ln301_2_reg_2932;
        trunc_ln301_3_reg_2955_pp0_iter1_reg <= trunc_ln301_3_reg_2955;
        trunc_ln301_reg_2886_pp0_iter1_reg <= trunc_ln301_reg_2886;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_16_fu_1508_p3 == 1'd1) & (trunc_ln301_1_fu_1504_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_2854 == 1'd0))) begin
        rem_1_addr_reg_2922 <= zext_ln18_reg_2858;
        tmp_11_reg_2917 <= {{inputs_1_q0[21:3]}};
        tmp_14_reg_2927 <= {{inputs_1_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_20_fu_1540_p3 == 1'd1) & (trunc_ln301_2_fu_1536_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_2854 == 1'd0))) begin
        rem_2_addr_reg_2945 <= zext_ln18_reg_2858;
        tmp_15_reg_2940 <= {{inputs_2_q0[21:3]}};
        tmp_18_reg_2950 <= {{inputs_2_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_24_fu_1572_p3 == 1'd1) & (trunc_ln301_3_fu_1568_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_2854 == 1'd0))) begin
        rem_3_addr_reg_2968 <= zext_ln18_reg_2858;
        tmp_19_reg_2963 <= {{inputs_3_q0[21:3]}};
        tmp_22_reg_2973 <= {{inputs_3_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_2854 == 1'd0))) begin
        tmp_12_reg_2890 <= inputs_0_q0[32'd1];
        tmp_16_reg_2913 <= inputs_1_q0[32'd1];
        tmp_20_reg_2936 <= inputs_2_q0[32'd1];
        tmp_24_reg_2959 <= inputs_3_q0[32'd1];
        trunc_ln301_1_reg_2909 <= trunc_ln301_1_fu_1504_p1;
        trunc_ln301_2_reg_2932 <= trunc_ln301_2_fu_1536_p1;
        trunc_ln301_3_reg_2955 <= trunc_ln301_3_fu_1568_p1;
        trunc_ln301_reg_2886 <= trunc_ln301_fu_1472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_reg_2890 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_reg_2886 == 1'd1))) begin
        tmp_1_reg_3097 <= {{select_ln1494_fu_2029_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_16_reg_2913 == 1'd1) & (trunc_ln301_1_reg_2909 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_3_reg_3105 <= {{select_ln1494_1_fu_2145_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_1448_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln18_reg_2858[4 : 0] <= zext_ln18_fu_1464_p1[4 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_0_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_0_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_0_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_0_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_0_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_0_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_0_V_address0 = zext_ln321_1_fu_2108_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_0_V_address0 = zext_ln321_fu_1610_p1;
    end else begin
        ISIquan_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_0_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_0_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_0_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_0_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_0_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_0_V_address1 = 64'd1;
    end else begin
        ISIquan_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_0_V_ce0 = 1'b1;
    end else begin
        ISIquan_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_0_V_ce1 = 1'b1;
    end else begin
        ISIquan_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_0_V_d0 = ISI_q_V_fu_2094_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_0_V_d0 = 4'd15;
        end else begin
            ISIquan_0_V_d0 = 'bx;
        end
    end else begin
        ISIquan_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln321_1_fu_2114_p2 == 1'd1) & (tmp_12_reg_2890 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_reg_2886 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln321_fu_1616_p2 == 1'd1) & (tmp_12_reg_2890 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_0_V_we0 = 1'b1;
    end else begin
        ISIquan_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_1_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_1_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_1_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_1_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_1_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_1_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_1_V_address0 = zext_ln321_3_fu_2220_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_1_V_address0 = zext_ln321_2_fu_1735_p1;
    end else begin
        ISIquan_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_1_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_1_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_1_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_1_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_1_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_1_V_address1 = 64'd1;
    end else begin
        ISIquan_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_1_V_ce0 = 1'b1;
    end else begin
        ISIquan_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_1_V_ce1 = 1'b1;
    end else begin
        ISIquan_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_1_V_d0 = ISI_q_V_1_fu_2210_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_1_V_d0 = 4'd15;
        end else begin
            ISIquan_1_V_d0 = 'bx;
        end
    end else begin
        ISIquan_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln321_3_reg_3029 == 1'd1) & (tmp_16_reg_2913 == 1'd1) & (trunc_ln301_1_reg_2909 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln321_2_fu_1741_p2 == 1'd1) & (tmp_16_reg_2913 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_1_V_we0 = 1'b1;
    end else begin
        ISIquan_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_2_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_2_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_2_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_2_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_2_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_2_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_2_V_address0 = zext_ln321_5_fu_2499_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_2_V_address0 = zext_ln321_4_fu_2226_p1;
    end else begin
        ISIquan_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_2_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_2_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_2_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_2_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_2_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_2_V_address1 = 64'd1;
    end else begin
        ISIquan_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_2_V_ce0 = 1'b1;
    end else begin
        ISIquan_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_2_V_ce1 = 1'b1;
    end else begin
        ISIquan_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_2_V_d0 = ISI_q_V_2_fu_2489_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_2_V_d0 = 4'd15;
    end else begin
        ISIquan_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln321_4_reg_3033 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_20_reg_2936 == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln321_5_reg_3061 == 1'd1) & (tmp_20_reg_2936_pp0_iter1_reg == 1'd1) & (trunc_ln301_2_reg_2932_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_2_V_we0 = 1'b1;
    end else begin
        ISIquan_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_3_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_3_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_3_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_3_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_3_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_3_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_3_V_address0 = zext_ln321_7_fu_2597_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_3_V_address0 = zext_ln321_6_fu_2303_p1;
    end else begin
        ISIquan_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_3_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_3_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_3_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_3_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_3_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_3_V_address1 = 64'd1;
    end else begin
        ISIquan_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_3_V_ce0 = 1'b1;
    end else begin
        ISIquan_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_3_V_ce1 = 1'b1;
    end else begin
        ISIquan_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_3_V_d0 = ISI_q_V_3_fu_2587_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_3_V_d0 = 4'd15;
    end else begin
        ISIquan_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln321_6_reg_3065 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_24_reg_2959 == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln321_7_reg_3093 == 1'd1) & (tmp_24_reg_2959_pp0_iter1_reg == 1'd1) & (trunc_ln301_3_reg_2955_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_3_V_we0 = 1'b1;
    end else begin
        ISIquan_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_4_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_4_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_4_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_4_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_4_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_4_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_4_V_address0 = zext_ln321_1_fu_2108_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_4_V_address0 = zext_ln321_fu_1610_p1;
    end else begin
        ISIquan_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_4_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_4_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_4_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_4_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_4_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_4_V_address1 = 64'd1;
    end else begin
        ISIquan_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_4_V_ce0 = 1'b1;
    end else begin
        ISIquan_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_4_V_ce1 = 1'b1;
    end else begin
        ISIquan_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_4_V_d0 = ISI_q_V_fu_2094_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_4_V_d0 = 4'd15;
        end else begin
            ISIquan_4_V_d0 = 'bx;
        end
    end else begin
        ISIquan_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_12_reg_2890 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_reg_2886 == 1'd1) & (icmp_ln321_1_fu_2114_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln321_fu_1616_p2 == 1'd0) & (tmp_12_reg_2890 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_4_V_we0 = 1'b1;
    end else begin
        ISIquan_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_5_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_5_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_5_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_5_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_5_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_5_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_5_V_address0 = zext_ln321_3_fu_2220_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_5_V_address0 = zext_ln321_2_fu_1735_p1;
    end else begin
        ISIquan_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_5_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_5_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_5_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_5_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_5_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_5_V_address1 = 64'd1;
    end else begin
        ISIquan_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_5_V_ce0 = 1'b1;
    end else begin
        ISIquan_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_5_V_ce1 = 1'b1;
    end else begin
        ISIquan_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ISIquan_5_V_d0 = ISI_q_V_1_fu_2210_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ISIquan_5_V_d0 = 4'd15;
        end else begin
            ISIquan_5_V_d0 = 'bx;
        end
    end else begin
        ISIquan_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_16_reg_2913 == 1'd1) & (trunc_ln301_1_reg_2909 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln321_3_reg_3029 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln321_2_fu_1741_p2 == 1'd0) & (tmp_16_reg_2913 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_5_V_we0 = 1'b1;
    end else begin
        ISIquan_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_6_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_6_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_6_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_6_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_6_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_6_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_6_V_address0 = zext_ln321_5_fu_2499_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_6_V_address0 = zext_ln321_4_fu_2226_p1;
    end else begin
        ISIquan_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_6_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_6_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_6_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_6_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_6_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_6_V_address1 = 64'd1;
    end else begin
        ISIquan_6_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_6_V_ce0 = 1'b1;
    end else begin
        ISIquan_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_6_V_ce1 = 1'b1;
    end else begin
        ISIquan_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_6_V_d0 = ISI_q_V_2_fu_2489_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_6_V_d0 = 4'd15;
    end else begin
        ISIquan_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln321_4_reg_3033 == 1'd0) & (tmp_20_reg_2936 == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_2936_pp0_iter1_reg == 1'd1) & (trunc_ln301_2_reg_2932_pp0_iter1_reg == 1'd1) & (icmp_ln321_5_reg_3061 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_6_V_we0 = 1'b1;
    end else begin
        ISIquan_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_7_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_7_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_7_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_7_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_7_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_7_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_7_V_address0 = zext_ln321_7_fu_2597_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_7_V_address0 = zext_ln321_6_fu_2303_p1;
    end else begin
        ISIquan_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_7_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_7_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_7_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_7_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_7_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_7_V_address1 = 64'd1;
    end else begin
        ISIquan_7_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_7_V_ce0 = 1'b1;
    end else begin
        ISIquan_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_7_V_ce1 = 1'b1;
    end else begin
        ISIquan_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_7_V_d0 = ISI_q_V_3_fu_2587_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_7_V_d0 = 4'd15;
    end else begin
        ISIquan_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln321_6_reg_3065 == 1'd0) & (tmp_24_reg_2959 == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_24_reg_2959_pp0_iter1_reg == 1'd1) & (trunc_ln301_3_reg_2955_pp0_iter1_reg == 1'd1) & (icmp_ln321_7_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ISIquan_7_V_we0 = 1'b1;
    end else begin
        ISIquan_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln17_fu_1448_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_2854 == 1'd0))) begin
        ap_phi_mux_j_0_0_phi_fu_1400_p4 = add_ln17_reg_2978;
    end else begin
        ap_phi_mux_j_0_0_phi_fu_1400_p4 = j_0_0_reg_1396;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_1408_p1 = j_0_0_reg_1396_pp0_iter1_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_1408_p1 = j_0_0_reg_1396;
        end else begin
            grp_fu_1408_p1 = 'bx;
        end
    end else begin
        grp_fu_1408_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_1418_p1 = j_0_0_reg_1396_pp0_iter1_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_1418_p1 = j_0_0_reg_1396;
        end else begin
            grp_fu_1418_p1 = 'bx;
        end
    end else begin
        grp_fu_1418_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputs_0_ce0 = 1'b1;
    end else begin
        inputs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputs_1_ce0 = 1'b1;
    end else begin
        inputs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputs_2_ce0 = 1'b1;
    end else begin
        inputs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputs_3_ce0 = 1'b1;
    end else begin
        inputs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_0_address0 = 64'd0;
    end else begin
        output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_d0 = or_ln50_6_8_fu_2770_p9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_0_d0 = or_ln50_6_4_fu_2686_p9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_0_d0 = or_ln50_6_fu_2602_p9;
    end else begin
        output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_1_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_1_address0 = 64'd0;
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_d0 = or_ln50_6_9_fu_2791_p9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_1_d0 = or_ln50_6_5_fu_2707_p9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_1_d0 = or_ln50_6_1_fu_2623_p9;
    end else begin
        output_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_2_address0 = 64'd0;
    end else begin
        output_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_2_d0 = or_ln50_6_s_fu_2812_p9;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_2_d0 = or_ln50_6_6_fu_2728_p9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_2_d0 = or_ln50_6_2_fu_2644_p9;
    end else begin
        output_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        output_2_we0 = 1'b1;
    end else begin
        output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_3_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_3_address0 = 64'd0;
    end else begin
        output_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        output_3_ce0 = 1'b1;
    end else begin
        output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_3_d0 = or_ln50_6_10_fu_2833_p9;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_3_d0 = or_ln50_6_7_fu_2749_p9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_3_d0 = or_ln50_6_3_fu_2665_p9;
    end else begin
        output_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        output_3_we0 = 1'b1;
    end else begin
        output_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_0_address0 = rem_0_addr_reg_2899_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_0_address0 = zext_ln18_reg_2858;
    end else begin
        rem_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rem_0_ce0 = 1'b1;
    end else begin
        rem_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_12_reg_2890_pp0_iter1_reg == 1'd1) & (trunc_ln301_reg_2886_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rem_0_we0 = 1'b1;
    end else begin
        rem_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_1_address0 = rem_1_addr_reg_2922_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_1_address0 = zext_ln18_reg_2858;
    end else begin
        rem_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rem_1_ce0 = 1'b1;
    end else begin
        rem_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_16_reg_2913_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_2909_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rem_1_we0 = 1'b1;
    end else begin
        rem_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_2_address0 = rem_2_addr_reg_2945_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_2_address0 = zext_ln18_reg_2858;
    end else begin
        rem_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rem_2_ce0 = 1'b1;
    end else begin
        rem_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_2936_pp0_iter1_reg == 1'd1) & (trunc_ln301_2_reg_2932_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rem_2_we0 = 1'b1;
    end else begin
        rem_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_3_address0 = rem_3_addr_reg_2968_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_3_address0 = zext_ln18_reg_2858;
    end else begin
        rem_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rem_3_ce0 = 1'b1;
    end else begin
        rem_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_24_reg_2959_pp0_iter1_reg == 1'd1) & (trunc_ln301_3_reg_2955_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rem_3_we0 = 1'b1;
    end else begin
        rem_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_1448_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_1448_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ISI_q_V_1_fu_2210_p3 = ((or_ln1495_1_fu_2204_p2[0:0] === 1'b1) ? select_ln1495_2_fu_2196_p3 : trunc_ln_i3_fu_2174_p4);

assign ISI_q_V_2_fu_2489_p3 = ((or_ln1495_2_fu_2483_p2[0:0] === 1'b1) ? select_ln1495_4_fu_2475_p3 : trunc_ln_i1_fu_2453_p4);

assign ISI_q_V_3_fu_2587_p3 = ((or_ln1495_3_fu_2581_p2[0:0] === 1'b1) ? select_ln1495_6_fu_2573_p3 : trunc_ln_i2_fu_2551_p4);

assign ISI_q_V_fu_2094_p3 = ((or_ln1495_fu_2088_p2[0:0] === 1'b1) ? select_ln1495_fu_2080_p3 : trunc_ln_i_fu_2058_p4);

assign add_ln17_fu_1600_p2 = (j_0_0_reg_1396 + 7'd4);

assign and_ln1497_1_fu_2190_p2 = (xor_ln1495_1_fu_2184_p2 & icmp_ln1497_1_fu_2168_p2);

assign and_ln1497_2_fu_2469_p2 = (xor_ln1495_2_fu_2463_p2 & icmp_ln1497_2_fu_2447_p2);

assign and_ln1497_3_fu_2567_p2 = (xor_ln1495_3_fu_2561_p2 & icmp_ln1497_3_fu_2545_p2);

assign and_ln1497_fu_2074_p2 = (xor_ln1495_fu_2068_p2 & icmp_ln1497_fu_2052_p2);

assign and_ln731_1_fu_1640_p3 = {{tmp_10_reg_2904}, {1'd0}};

assign and_ln731_2_fu_1757_p3 = {{tmp_13_fu_1747_p4}, {2'd0}};

assign and_ln731_3_fu_1765_p3 = {{tmp_14_reg_2927}, {1'd0}};

assign and_ln731_4_fu_2232_p3 = {{tmp_17_reg_3037}, {2'd0}};

assign and_ln731_5_fu_1884_p3 = {{tmp_18_reg_2950}, {1'd0}};

assign and_ln731_6_fu_2309_p3 = {{tmp_21_reg_3069}, {2'd0}};

assign and_ln731_7_fu_1955_p3 = {{tmp_22_reg_2973}, {1'd0}};

assign and_ln_fu_1632_p3 = {{tmp_s_fu_1622_p4}, {2'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_1408_p4 = {{grp_fu_1408_p1[6:3]}};

assign grp_fu_1418_p4 = {{grp_fu_1418_p1[6:3]}};

assign grp_fu_1428_p4 = {{j_0_0_reg_1396_pp0_iter1_reg[6:3]}};

assign grp_fu_1438_p4 = {{j_0_0_reg_1396_pp0_iter1_reg[6:3]}};

assign icmp_ln1494_1_fu_2139_p2 = (($signed(sext_ln1494_1_fu_2132_p1) > $signed(zext_ln1494_1_fu_2136_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_2282_p2 = (($signed(sext_ln1494_2_fu_2274_p1) > $signed(zext_ln1494_2_fu_2278_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_2359_p2 = (($signed(sext_ln1494_3_fu_2351_p1) > $signed(zext_ln1494_3_fu_2355_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_2023_p2 = (($signed(sext_ln1494_fu_2016_p1) > $signed(zext_ln1494_fu_2020_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1495_1_fu_2162_p2 = ((select_ln1494_1_fu_2145_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_2_fu_2441_p2 = ((select_ln1494_2_fu_2411_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_2539_p2 = ((select_ln1494_3_fu_2509_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_2046_p2 = ((select_ln1494_fu_2029_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1497_1_fu_2168_p2 = ((select_ln1494_1_fu_2145_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_2_fu_2447_p2 = ((select_ln1494_2_fu_2411_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_3_fu_2545_p2 = ((select_ln1494_3_fu_2509_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_fu_2052_p2 = ((select_ln1494_fu_2029_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_1448_p2 = ((ap_phi_mux_j_0_0_phi_fu_1400_p4 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_2114_p2 = ((trunc_ln321_1_fu_2104_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_1741_p2 = ((or_ln321_fu_1729_p2 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_1856_p2 = ((or_ln321_1_fu_1850_p2 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_1868_p2 = ((or_ln321_2_fu_1862_p2 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_1927_p2 = ((or_ln321_3_fu_1921_p2 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_1939_p2 = ((or_ln321_4_fu_1933_p2 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_7_fu_1998_p2 = ((or_ln321_5_fu_1992_p2 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_1616_p2 = ((trunc_ln321_fu_1606_p1 == 3'd0) ? 1'b1 : 1'b0);

assign inputs_0_address0 = zext_ln18_fu_1464_p1;

assign inputs_1_address0 = zext_ln18_fu_1464_p1;

assign inputs_2_address0 = zext_ln18_fu_1464_p1;

assign inputs_3_address0 = zext_ln18_fu_1464_p1;

assign lshr_ln_fu_1454_p4 = {{ap_phi_mux_j_0_0_phi_fu_1400_p4[6:2]}};

assign mul_ln1118_1_fu_1828_p0 = mul_ln1118_1_fu_1828_p00;

assign mul_ln1118_1_fu_1828_p00 = trunc_ln1333_1_fu_1796_p4;

assign mul_ln1118_1_fu_1828_p1 = mul_ln1118_1_fu_1828_p10;

assign mul_ln1118_1_fu_1828_p10 = trunc_ln1333_5_fu_1782_p4;

assign mul_ln1118_1_fu_1828_p2 = (mul_ln1118_1_fu_1828_p0 * mul_ln1118_1_fu_1828_p1);

assign mul_ln1118_2_fu_2260_p0 = mul_ln1118_2_fu_2260_p00;

assign mul_ln1118_2_fu_2260_p00 = trunc_ln1333_2_reg_3054;

assign mul_ln1118_2_fu_2260_p1 = mul_ln1118_2_fu_2260_p10;

assign mul_ln1118_2_fu_2260_p10 = trunc_ln1333_6_reg_3047;

assign mul_ln1118_2_fu_2260_p2 = (mul_ln1118_2_fu_2260_p0 * mul_ln1118_2_fu_2260_p1);

assign mul_ln1118_3_fu_2337_p0 = mul_ln1118_3_fu_2337_p00;

assign mul_ln1118_3_fu_2337_p00 = trunc_ln1333_3_reg_3086;

assign mul_ln1118_3_fu_2337_p1 = mul_ln1118_3_fu_2337_p10;

assign mul_ln1118_3_fu_2337_p10 = trunc_ln1333_7_reg_3079;

assign mul_ln1118_3_fu_2337_p2 = (mul_ln1118_3_fu_2337_p0 * mul_ln1118_3_fu_2337_p1);

assign mul_ln1118_fu_1703_p0 = mul_ln1118_fu_1703_p00;

assign mul_ln1118_fu_1703_p00 = trunc_ln2_fu_1671_p4;

assign mul_ln1118_fu_1703_p1 = mul_ln1118_fu_1703_p10;

assign mul_ln1118_fu_1703_p10 = trunc_ln1333_4_fu_1657_p4;

assign mul_ln1118_fu_1703_p2 = (mul_ln1118_fu_1703_p0 * mul_ln1118_fu_1703_p1);

assign or_ln1495_1_fu_2204_p2 = (icmp_ln1495_1_fu_2162_p2 | and_ln1497_1_fu_2190_p2);

assign or_ln1495_2_fu_2483_p2 = (icmp_ln1495_2_fu_2441_p2 | and_ln1497_2_fu_2469_p2);

assign or_ln1495_3_fu_2581_p2 = (icmp_ln1495_3_fu_2539_p2 | and_ln1497_3_fu_2567_p2);

assign or_ln1495_fu_2088_p2 = (icmp_ln1495_fu_2046_p2 | and_ln1497_fu_2074_p2);

assign or_ln321_1_fu_1850_p2 = (trunc_ln17_fu_1725_p1 | 3'd1);

assign or_ln321_2_fu_1862_p2 = (trunc_ln17_fu_1725_p1 | 3'd2);

assign or_ln321_3_fu_1921_p2 = (trunc_ln17_fu_1725_p1 | 3'd2);

assign or_ln321_4_fu_1933_p2 = (trunc_ln17_fu_1725_p1 | 3'd3);

assign or_ln321_5_fu_1992_p2 = (trunc_ln17_fu_1725_p1 | 3'd3);

assign or_ln321_fu_1729_p2 = (trunc_ln17_fu_1725_p1 | 3'd1);

assign or_ln50_6_10_fu_2833_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_1_fu_2623_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_2_fu_2644_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_3_fu_2665_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_4_fu_2686_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_5_fu_2707_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_6_fu_2728_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_7_fu_2749_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_8_fu_2770_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_9_fu_2791_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_fu_2602_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_s_fu_2812_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign rem_0_d0 = tmp_2_fu_2380_p4;

assign rem_1_d0 = tmp_4_fu_2393_p4;

assign rem_2_d0 = tmp_6_fu_2427_p4;

assign rem_3_d0 = tmp_8_fu_2525_p4;

assign select_ln1494_1_fu_2145_p3 = ((icmp_ln1494_1_fu_2139_p2[0:0] === 1'b1) ? sub_ln703_3_reg_3024 : shl_ln731_1_fu_2120_p2);

assign select_ln1494_2_fu_2411_p3 = ((icmp_ln1494_2_reg_3110[0:0] === 1'b1) ? sub_ln703_5_reg_3115 : shl_ln731_2_fu_2406_p2);

assign select_ln1494_3_fu_2509_p3 = ((icmp_ln1494_3_reg_3125[0:0] === 1'b1) ? sub_ln703_7_reg_3130 : shl_ln731_3_fu_2504_p2);

assign select_ln1494_fu_2029_p3 = ((icmp_ln1494_fu_2023_p2[0:0] === 1'b1) ? sub_ln703_1_reg_3001 : shl_ln731_fu_2004_p2);

assign select_ln1495_2_fu_2196_p3 = ((icmp_ln1495_1_fu_2162_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_4_fu_2475_p3 = ((icmp_ln1495_2_fu_2441_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_6_fu_2573_p3 = ((icmp_ln1495_3_fu_2539_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_fu_2080_p3 = ((icmp_ln1495_fu_2046_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign sext_ln1494_1_fu_2132_p1 = $signed(shl_ln728_1_fu_2125_p3);

assign sext_ln1494_2_fu_2274_p1 = $signed(shl_ln728_2_fu_2266_p3);

assign sext_ln1494_3_fu_2351_p1 = $signed(shl_ln728_3_fu_2343_p3);

assign sext_ln1494_fu_2016_p1 = $signed(shl_ln1_fu_2009_p3);

assign shl_ln1_fu_2009_p3 = {{sub_ln1193_reg_2991}, {2'd0}};

assign shl_ln728_1_fu_2125_p3 = {{sub_ln1193_1_reg_3014}, {2'd0}};

assign shl_ln728_2_fu_2266_p3 = {{sub_ln1193_2_fu_2248_p2}, {2'd0}};

assign shl_ln728_3_fu_2343_p3 = {{sub_ln1193_3_fu_2325_p2}, {2'd0}};

assign shl_ln731_1_fu_2120_p2 = sub_ln731_1_reg_3009 << 12'd2;

assign shl_ln731_2_fu_2406_p2 = sub_ln731_2_reg_3042 << 12'd2;

assign shl_ln731_3_fu_2504_p2 = sub_ln731_3_reg_3074 << 12'd2;

assign shl_ln731_fu_2004_p2 = sub_ln731_reg_2986 << 12'd2;

assign sub_ln1193_1_fu_1814_p2 = (zext_ln703_2_fu_1806_p1 - zext_ln703_3_fu_1810_p1);

assign sub_ln1193_2_fu_2248_p2 = (zext_ln703_4_fu_2242_p1 - zext_ln703_5_fu_2245_p1);

assign sub_ln1193_3_fu_2325_p2 = (zext_ln703_6_fu_2319_p1 - zext_ln703_7_fu_2322_p1);

assign sub_ln1193_fu_1689_p2 = (zext_ln703_fu_1681_p1 - zext_ln703_1_fu_1685_p1);

assign sub_ln703_1_fu_1719_p2 = (sub_ln703_fu_1713_p2 - zext_ln1333_4_fu_1667_p1);

assign sub_ln703_2_fu_1838_p2 = (and_ln731_2_fu_1757_p3 - zext_ln1333_1_fu_1834_p1);

assign sub_ln703_3_fu_1844_p2 = (sub_ln703_2_fu_1838_p2 - zext_ln1333_5_fu_1792_p1);

assign sub_ln703_4_fu_2291_p2 = (and_ln731_4_fu_2232_p3 - zext_ln1333_2_fu_2288_p1);

assign sub_ln703_5_fu_2297_p2 = (sub_ln703_4_fu_2291_p2 - zext_ln1333_6_fu_2239_p1);

assign sub_ln703_6_fu_2368_p2 = (and_ln731_6_fu_2309_p3 - zext_ln1333_3_fu_2365_p1);

assign sub_ln703_7_fu_2374_p2 = (sub_ln703_6_fu_2368_p2 - zext_ln1333_7_fu_2316_p1);

assign sub_ln703_fu_1713_p2 = (and_ln_fu_1632_p3 - zext_ln1333_fu_1709_p1);

assign sub_ln731_1_fu_1776_p2 = (and_ln731_3_fu_1765_p3 - trunc_ln731_1_fu_1772_p1);

assign sub_ln731_2_fu_1895_p2 = (and_ln731_5_fu_1884_p3 - trunc_ln731_2_fu_1891_p1);

assign sub_ln731_3_fu_1966_p2 = (and_ln731_7_fu_1955_p3 - trunc_ln731_3_fu_1962_p1);

assign sub_ln731_fu_1651_p2 = (and_ln731_1_fu_1640_p3 - trunc_ln731_fu_1647_p1);

assign tmp_12_fu_1476_p3 = inputs_0_q0[32'd1];

assign tmp_13_fu_1747_p4 = {{rem_1_q0[29:20]}};

assign tmp_16_fu_1508_p3 = inputs_1_q0[32'd1];

assign tmp_20_fu_1540_p3 = inputs_2_q0[32'd1];

assign tmp_24_fu_1572_p3 = inputs_3_q0[32'd1];

assign tmp_2_fu_2380_p4 = {{{tmp_1_reg_3097}, {tmp_9_reg_2894_pp0_iter1_reg}}, {1'd0}};

assign tmp_4_fu_2393_p4 = {{{tmp_3_reg_3105}, {tmp_11_reg_2917_pp0_iter1_reg}}, {1'd0}};

assign tmp_5_fu_2417_p4 = {{select_ln1494_2_fu_2411_p3[11:2]}};

assign tmp_6_fu_2427_p4 = {{{tmp_5_fu_2417_p4}, {tmp_15_reg_2940_pp0_iter1_reg}}, {1'd0}};

assign tmp_7_fu_2515_p4 = {{select_ln1494_3_fu_2509_p3[11:2]}};

assign tmp_8_fu_2525_p4 = {{{tmp_7_fu_2515_p4}, {tmp_19_reg_2963_pp0_iter1_reg}}, {1'd0}};

assign tmp_s_fu_1622_p4 = {{rem_0_q0[29:20]}};

assign trunc_ln1333_1_fu_1796_p4 = {{rem_1_q0[29:23]}};

assign trunc_ln1333_4_fu_1657_p4 = {{sub_ln731_fu_1651_p2[9:3]}};

assign trunc_ln1333_5_fu_1782_p4 = {{sub_ln731_1_fu_1776_p2[9:3]}};

assign trunc_ln17_fu_1725_p1 = j_0_0_reg_1396[2:0];

assign trunc_ln2_fu_1671_p4 = {{rem_0_q0[29:23]}};

assign trunc_ln301_1_fu_1504_p1 = inputs_1_q0[0:0];

assign trunc_ln301_2_fu_1536_p1 = inputs_2_q0[0:0];

assign trunc_ln301_3_fu_1568_p1 = inputs_3_q0[0:0];

assign trunc_ln301_fu_1472_p1 = inputs_0_q0[0:0];

assign trunc_ln321_1_fu_2104_p1 = j_0_0_reg_1396_pp0_iter1_reg[2:0];

assign trunc_ln321_fu_1606_p1 = j_0_0_reg_1396[2:0];

assign trunc_ln731_1_fu_1772_p1 = rem_1_q0[11:0];

assign trunc_ln731_2_fu_1891_p1 = rem_2_q0[11:0];

assign trunc_ln731_3_fu_1962_p1 = rem_3_q0[11:0];

assign trunc_ln731_fu_1647_p1 = rem_0_q0[11:0];

assign trunc_ln_i1_fu_2453_p4 = {{select_ln1494_2_fu_2411_p3[8:5]}};

assign trunc_ln_i2_fu_2551_p4 = {{select_ln1494_3_fu_2509_p3[8:5]}};

assign trunc_ln_i3_fu_2174_p4 = {{select_ln1494_1_fu_2145_p3[8:5]}};

assign trunc_ln_i_fu_2058_p4 = {{select_ln1494_fu_2029_p3[8:5]}};

assign xor_ln1495_1_fu_2184_p2 = (icmp_ln1495_1_fu_2162_p2 ^ 1'd1);

assign xor_ln1495_2_fu_2463_p2 = (icmp_ln1495_2_fu_2441_p2 ^ 1'd1);

assign xor_ln1495_3_fu_2561_p2 = (icmp_ln1495_3_fu_2539_p2 ^ 1'd1);

assign xor_ln1495_fu_2068_p2 = (icmp_ln1495_fu_2046_p2 ^ 1'd1);

assign zext_ln1333_1_fu_1834_p1 = trunc_ln1333_1_fu_1796_p4;

assign zext_ln1333_2_fu_2288_p1 = trunc_ln1333_2_reg_3054;

assign zext_ln1333_3_fu_2365_p1 = trunc_ln1333_3_reg_3086;

assign zext_ln1333_4_fu_1667_p1 = trunc_ln1333_4_fu_1657_p4;

assign zext_ln1333_5_fu_1792_p1 = trunc_ln1333_5_fu_1782_p4;

assign zext_ln1333_6_fu_2239_p1 = trunc_ln1333_6_reg_3047;

assign zext_ln1333_7_fu_2316_p1 = trunc_ln1333_7_reg_3079;

assign zext_ln1333_fu_1709_p1 = trunc_ln2_fu_1671_p4;

assign zext_ln1494_1_fu_2136_p1 = mul_ln1118_1_reg_3019;

assign zext_ln1494_2_fu_2278_p1 = mul_ln1118_2_fu_2260_p2;

assign zext_ln1494_3_fu_2355_p1 = mul_ln1118_3_fu_2337_p2;

assign zext_ln1494_fu_2020_p1 = mul_ln1118_reg_2996;

assign zext_ln18_fu_1464_p1 = lshr_ln_fu_1454_p4;

assign zext_ln321_1_fu_2108_p1 = grp_fu_1408_p4;

assign zext_ln321_2_fu_1735_p1 = grp_fu_1418_p4;

assign zext_ln321_3_fu_2220_p1 = grp_fu_1418_p4;

assign zext_ln321_4_fu_2226_p1 = grp_fu_1428_p4;

assign zext_ln321_5_fu_2499_p1 = lshr_ln321_5_reg_3120;

assign zext_ln321_6_fu_2303_p1 = grp_fu_1438_p4;

assign zext_ln321_7_fu_2597_p1 = lshr_ln321_7_reg_3135;

assign zext_ln321_fu_1610_p1 = grp_fu_1408_p4;

assign zext_ln703_1_fu_1685_p1 = trunc_ln1333_4_fu_1657_p4;

assign zext_ln703_2_fu_1806_p1 = trunc_ln1333_1_fu_1796_p4;

assign zext_ln703_3_fu_1810_p1 = trunc_ln1333_5_fu_1782_p4;

assign zext_ln703_4_fu_2242_p1 = trunc_ln1333_2_reg_3054;

assign zext_ln703_5_fu_2245_p1 = trunc_ln1333_6_reg_3047;

assign zext_ln703_6_fu_2319_p1 = trunc_ln1333_3_reg_3086;

assign zext_ln703_7_fu_2322_p1 = trunc_ln1333_7_reg_3079;

assign zext_ln703_fu_1681_p1 = trunc_ln2_fu_1671_p4;

always @ (posedge ap_clk) begin
    zext_ln18_reg_2858[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //estimate_ISI_encode
