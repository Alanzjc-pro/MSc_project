-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity estimate_ISI_encode is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 11;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of estimate_ISI_encode is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "estimate_ISI_encode,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.242500,HLS_SYN_LAT=58,HLS_SYN_TPT=none,HLS_SYN_MEM=24,HLS_SYN_DSP=0,HLS_SYN_FF=1575,HLS_SYN_LUT=2709,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_28 : STD_LOGIC_VECTOR (11 downto 0) := "000000101000";
    constant ap_const_lv12_190 : STD_LOGIC_VECTOR (11 downto 0) := "000110010000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inputs_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_0_ce0 : STD_LOGIC;
    signal inputs_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_1_ce0 : STD_LOGIC;
    signal inputs_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_2_ce0 : STD_LOGIC;
    signal inputs_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal inputs_3_ce0 : STD_LOGIC;
    signal inputs_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_0_ce0 : STD_LOGIC;
    signal rem_0_we0 : STD_LOGIC;
    signal rem_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_1_ce0 : STD_LOGIC;
    signal rem_1_we0 : STD_LOGIC;
    signal rem_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_2_ce0 : STD_LOGIC;
    signal rem_2_we0 : STD_LOGIC;
    signal rem_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_3_ce0 : STD_LOGIC;
    signal rem_3_we0 : STD_LOGIC;
    signal rem_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_ce0 : STD_LOGIC;
    signal output_0_we0 : STD_LOGIC;
    signal output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_1_ce0 : STD_LOGIC;
    signal output_1_we0 : STD_LOGIC;
    signal output_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_2_ce0 : STD_LOGIC;
    signal output_2_we0 : STD_LOGIC;
    signal output_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_3_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_3_ce0 : STD_LOGIC;
    signal output_3_we0 : STD_LOGIC;
    signal output_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_0_reg_1396 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_0_0_reg_1396_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln17_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln17_reg_2854 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_fu_1464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln18_reg_2858 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln301_fu_1472_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_reg_2886 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln301_reg_2886_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2890 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2890_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2894 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_9_reg_2894_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal rem_0_addr_reg_2899 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_0_addr_reg_2899_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_reg_2904 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln301_1_fu_1504_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_1_reg_2909 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_1_reg_2909_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2913 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2913_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_2917 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_11_reg_2917_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal rem_1_addr_reg_2922 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_1_addr_reg_2922_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_reg_2927 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln301_2_fu_1536_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_2_reg_2932 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_2_reg_2932_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1540_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_2936 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_2936_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_2940 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_15_reg_2940_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal rem_2_addr_reg_2945 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_2_addr_reg_2945_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_18_reg_2950 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln301_3_fu_1568_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_3_reg_2955 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_3_reg_2955_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1572_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_2959 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_2959_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2963 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_19_reg_2963_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal rem_3_addr_reg_2968 : STD_LOGIC_VECTOR (4 downto 0);
    signal rem_3_addr_reg_2968_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_reg_2973 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln17_fu_1600_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln17_reg_2978 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sub_ln731_fu_1651_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_reg_2986 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1193_fu_1689_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1193_reg_2991 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_1703_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_reg_2996 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln703_1_fu_1719_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_1_reg_3001 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_1_fu_1776_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_1_reg_3009 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1193_1_fu_1814_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1193_1_reg_3014 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_1_fu_1828_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_1_reg_3019 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln703_3_fu_1844_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_3_reg_3024 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln321_3_fu_1856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_3_reg_3029 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_4_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_4_reg_3033 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_3037 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln731_2_fu_1895_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_2_reg_3042 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1333_6_reg_3047 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1333_2_reg_3054 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln321_5_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_5_reg_3061 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_6_fu_1939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_6_reg_3065 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_3069 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln731_3_fu_1966_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln731_3_reg_3074 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1333_7_reg_3079 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1333_3_reg_3086 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln321_7_fu_1998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_7_reg_3093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_3097 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_reg_3105 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1494_2_fu_2282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_2_reg_3110 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln703_5_fu_2297_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_5_reg_3115 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1428_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln321_5_reg_3120 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln1494_3_fu_2359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_3_reg_3125 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln703_7_fu_2374_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_7_reg_3130 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1438_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln321_7_reg_3135 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ISIquan_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_ce0 : STD_LOGIC;
    signal ISIquan_0_V_we0 : STD_LOGIC;
    signal ISIquan_0_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_0_V_ce1 : STD_LOGIC;
    signal ISIquan_0_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_ce0 : STD_LOGIC;
    signal ISIquan_1_V_we0 : STD_LOGIC;
    signal ISIquan_1_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_1_V_ce1 : STD_LOGIC;
    signal ISIquan_1_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_ce0 : STD_LOGIC;
    signal ISIquan_2_V_we0 : STD_LOGIC;
    signal ISIquan_2_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_2_V_ce1 : STD_LOGIC;
    signal ISIquan_2_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_ce0 : STD_LOGIC;
    signal ISIquan_3_V_we0 : STD_LOGIC;
    signal ISIquan_3_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_3_V_ce1 : STD_LOGIC;
    signal ISIquan_3_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_ce0 : STD_LOGIC;
    signal ISIquan_4_V_we0 : STD_LOGIC;
    signal ISIquan_4_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_4_V_ce1 : STD_LOGIC;
    signal ISIquan_4_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_ce0 : STD_LOGIC;
    signal ISIquan_5_V_we0 : STD_LOGIC;
    signal ISIquan_5_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_5_V_ce1 : STD_LOGIC;
    signal ISIquan_5_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_ce0 : STD_LOGIC;
    signal ISIquan_6_V_we0 : STD_LOGIC;
    signal ISIquan_6_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_6_V_ce1 : STD_LOGIC;
    signal ISIquan_6_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_ce0 : STD_LOGIC;
    signal ISIquan_7_V_we0 : STD_LOGIC;
    signal ISIquan_7_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISIquan_7_V_ce1 : STD_LOGIC;
    signal ISIquan_7_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j_0_0_phi_fu_1400_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln321_fu_1610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_2_fu_1735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_1_fu_2108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_3_fu_2220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_4_fu_2226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_6_fu_2303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_5_fu_2499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_7_fu_2597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln321_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_1_fu_2114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ISI_q_V_fu_2094_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln321_2_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ISI_q_V_1_fu_2210_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISI_q_V_2_fu_2489_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ISI_q_V_3_fu_2587_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln50_6_fu_2602_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_4_fu_2686_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_8_fu_2770_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_1_fu_2623_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_5_fu_2707_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_9_fu_2791_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_2_fu_2644_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_6_fu_2728_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_s_fu_2812_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_3_fu_2665_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_7_fu_2749_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_10_fu_2833_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1408_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1418_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_fu_1454_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1408_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln321_fu_1606_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1622_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln731_1_fu_1640_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln731_fu_1647_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1333_4_fu_1657_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln2_fu_1671_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln703_fu_1681_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_1_fu_1685_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_fu_1703_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_1703_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln_fu_1632_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_fu_1709_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_fu_1713_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_4_fu_1667_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln17_fu_1725_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1418_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln321_fu_1729_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_1747_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln731_3_fu_1765_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln731_1_fu_1772_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1333_5_fu_1782_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1333_1_fu_1796_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln703_2_fu_1806_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_3_fu_1810_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_1_fu_1828_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_1_fu_1828_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln731_2_fu_1757_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_1_fu_1834_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_2_fu_1838_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_5_fu_1792_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln321_1_fu_1850_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln321_2_fu_1862_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln731_5_fu_1884_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln731_2_fu_1891_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln321_3_fu_1921_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln321_4_fu_1933_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln731_7_fu_1955_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln731_3_fu_1962_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln321_5_fu_1992_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln1_fu_2009_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1494_fu_2016_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1494_fu_2020_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1494_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln731_fu_2004_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1494_fu_2029_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1495_fu_2046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_fu_2052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1497_fu_2074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_fu_2080_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_i_fu_2058_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln321_1_fu_2104_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln728_1_fu_2125_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1494_1_fu_2132_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1494_1_fu_2136_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1494_1_fu_2139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln731_1_fu_2120_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1494_1_fu_2145_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1495_1_fu_2162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_1_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_1_fu_2184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1497_1_fu_2190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_1_fu_2204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_2_fu_2196_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_i3_fu_2174_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln703_4_fu_2242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_5_fu_2245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_2_fu_2260_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_2_fu_2260_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1193_2_fu_2248_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln728_2_fu_2266_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_2_fu_2260_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1494_2_fu_2274_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1494_2_fu_2278_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln731_4_fu_2232_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_2_fu_2288_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_4_fu_2291_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_6_fu_2239_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln703_6_fu_2319_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_7_fu_2322_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_3_fu_2337_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_3_fu_2337_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1193_3_fu_2325_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln728_3_fu_2343_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_3_fu_2337_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1494_3_fu_2351_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1494_3_fu_2355_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln731_6_fu_2309_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_3_fu_2365_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_6_fu_2368_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1333_7_fu_2316_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_2380_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_fu_2393_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln731_2_fu_2406_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1494_2_fu_2411_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_2417_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_2427_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln1495_2_fu_2441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_2_fu_2447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_2_fu_2463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1497_2_fu_2469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_2_fu_2483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_4_fu_2475_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_i1_fu_2453_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln731_3_fu_2504_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1494_3_fu_2509_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_2515_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_2525_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln1495_3_fu_2539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1497_3_fu_2545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_3_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1497_3_fu_2567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_3_fu_2581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_6_fu_2573_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_i2_fu_2551_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1118_1_fu_1828_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_1_fu_1828_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_2_fu_2260_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_2_fu_2260_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_3_fu_2337_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_3_fu_2337_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1703_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1703_p10 : STD_LOGIC_VECTOR (13 downto 0);

    component estimate_ISI_encode_ISIquan_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component estimate_ISI_encode_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        inputs_0_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_0_ce0 : IN STD_LOGIC;
        inputs_0_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_1_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_1_ce0 : IN STD_LOGIC;
        inputs_1_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_2_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_2_ce0 : IN STD_LOGIC;
        inputs_2_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs_3_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        inputs_3_ce0 : IN STD_LOGIC;
        inputs_3_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rem_0_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        rem_0_ce0 : IN STD_LOGIC;
        rem_0_we0 : IN STD_LOGIC;
        rem_0_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rem_0_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rem_1_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        rem_1_ce0 : IN STD_LOGIC;
        rem_1_we0 : IN STD_LOGIC;
        rem_1_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rem_1_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rem_2_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        rem_2_ce0 : IN STD_LOGIC;
        rem_2_we0 : IN STD_LOGIC;
        rem_2_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rem_2_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rem_3_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        rem_3_ce0 : IN STD_LOGIC;
        rem_3_we0 : IN STD_LOGIC;
        rem_3_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rem_3_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        output_0_ce0 : IN STD_LOGIC;
        output_0_we0 : IN STD_LOGIC;
        output_0_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        output_1_ce0 : IN STD_LOGIC;
        output_1_we0 : IN STD_LOGIC;
        output_1_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        output_2_ce0 : IN STD_LOGIC;
        output_2_we0 : IN STD_LOGIC;
        output_2_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        output_3_ce0 : IN STD_LOGIC;
        output_3_we0 : IN STD_LOGIC;
        output_3_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    estimate_ISI_encode_AXILiteS_s_axi_U : component estimate_ISI_encode_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        inputs_0_address0 => inputs_0_address0,
        inputs_0_ce0 => inputs_0_ce0,
        inputs_0_q0 => inputs_0_q0,
        inputs_1_address0 => inputs_1_address0,
        inputs_1_ce0 => inputs_1_ce0,
        inputs_1_q0 => inputs_1_q0,
        inputs_2_address0 => inputs_2_address0,
        inputs_2_ce0 => inputs_2_ce0,
        inputs_2_q0 => inputs_2_q0,
        inputs_3_address0 => inputs_3_address0,
        inputs_3_ce0 => inputs_3_ce0,
        inputs_3_q0 => inputs_3_q0,
        rem_0_address0 => rem_0_address0,
        rem_0_ce0 => rem_0_ce0,
        rem_0_we0 => rem_0_we0,
        rem_0_d0 => rem_0_d0,
        rem_0_q0 => rem_0_q0,
        rem_1_address0 => rem_1_address0,
        rem_1_ce0 => rem_1_ce0,
        rem_1_we0 => rem_1_we0,
        rem_1_d0 => rem_1_d0,
        rem_1_q0 => rem_1_q0,
        rem_2_address0 => rem_2_address0,
        rem_2_ce0 => rem_2_ce0,
        rem_2_we0 => rem_2_we0,
        rem_2_d0 => rem_2_d0,
        rem_2_q0 => rem_2_q0,
        rem_3_address0 => rem_3_address0,
        rem_3_ce0 => rem_3_ce0,
        rem_3_we0 => rem_3_we0,
        rem_3_d0 => rem_3_d0,
        rem_3_q0 => rem_3_q0,
        output_0_address0 => output_0_address0,
        output_0_ce0 => output_0_ce0,
        output_0_we0 => output_0_we0,
        output_0_d0 => output_0_d0,
        output_1_address0 => output_1_address0,
        output_1_ce0 => output_1_ce0,
        output_1_we0 => output_1_we0,
        output_1_d0 => output_1_d0,
        output_2_address0 => output_2_address0,
        output_2_ce0 => output_2_ce0,
        output_2_we0 => output_2_we0,
        output_2_d0 => output_2_d0,
        output_3_address0 => output_3_address0,
        output_3_ce0 => output_3_ce0,
        output_3_we0 => output_3_we0,
        output_3_d0 => output_3_d0);

    ISIquan_0_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_0_V_address0,
        ce0 => ISIquan_0_V_ce0,
        we0 => ISIquan_0_V_we0,
        d0 => ISIquan_0_V_d0,
        q0 => ISIquan_0_V_q0,
        address1 => ISIquan_0_V_address1,
        ce1 => ISIquan_0_V_ce1,
        q1 => ISIquan_0_V_q1);

    ISIquan_1_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_1_V_address0,
        ce0 => ISIquan_1_V_ce0,
        we0 => ISIquan_1_V_we0,
        d0 => ISIquan_1_V_d0,
        q0 => ISIquan_1_V_q0,
        address1 => ISIquan_1_V_address1,
        ce1 => ISIquan_1_V_ce1,
        q1 => ISIquan_1_V_q1);

    ISIquan_2_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_2_V_address0,
        ce0 => ISIquan_2_V_ce0,
        we0 => ISIquan_2_V_we0,
        d0 => ISIquan_2_V_d0,
        q0 => ISIquan_2_V_q0,
        address1 => ISIquan_2_V_address1,
        ce1 => ISIquan_2_V_ce1,
        q1 => ISIquan_2_V_q1);

    ISIquan_3_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_3_V_address0,
        ce0 => ISIquan_3_V_ce0,
        we0 => ISIquan_3_V_we0,
        d0 => ISIquan_3_V_d0,
        q0 => ISIquan_3_V_q0,
        address1 => ISIquan_3_V_address1,
        ce1 => ISIquan_3_V_ce1,
        q1 => ISIquan_3_V_q1);

    ISIquan_4_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_4_V_address0,
        ce0 => ISIquan_4_V_ce0,
        we0 => ISIquan_4_V_we0,
        d0 => ISIquan_4_V_d0,
        q0 => ISIquan_4_V_q0,
        address1 => ISIquan_4_V_address1,
        ce1 => ISIquan_4_V_ce1,
        q1 => ISIquan_4_V_q1);

    ISIquan_5_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_5_V_address0,
        ce0 => ISIquan_5_V_ce0,
        we0 => ISIquan_5_V_we0,
        d0 => ISIquan_5_V_d0,
        q0 => ISIquan_5_V_q0,
        address1 => ISIquan_5_V_address1,
        ce1 => ISIquan_5_V_ce1,
        q1 => ISIquan_5_V_q1);

    ISIquan_6_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_6_V_address0,
        ce0 => ISIquan_6_V_ce0,
        we0 => ISIquan_6_V_we0,
        d0 => ISIquan_6_V_d0,
        q0 => ISIquan_6_V_q0,
        address1 => ISIquan_6_V_address1,
        ce1 => ISIquan_6_V_ce1,
        q1 => ISIquan_6_V_q1);

    ISIquan_7_V_U : component estimate_ISI_encode_ISIquan_0_V
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ISIquan_7_V_address0,
        ce0 => ISIquan_7_V_ce0,
        we0 => ISIquan_7_V_we0,
        d0 => ISIquan_7_V_d0,
        q0 => ISIquan_7_V_q0,
        address1 => ISIquan_7_V_address1,
        ce1 => ISIquan_7_V_ce1,
        q1 => ISIquan_7_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_0_0_reg_1396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln17_reg_2854 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_0_0_reg_1396 <= add_ln17_reg_2978;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_0_0_reg_1396 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then
                add_ln17_reg_2978 <= add_ln17_fu_1600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_20_reg_2936 = ap_const_lv1_1) and (trunc_ln301_2_reg_2932 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln1494_2_reg_3110 <= icmp_ln1494_2_fu_2282_p2;
                sub_ln703_5_reg_3115 <= sub_ln703_5_fu_2297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_24_reg_2959 = ap_const_lv1_1) and (trunc_ln301_3_reg_2955 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln1494_3_reg_3125 <= icmp_ln1494_3_fu_2359_p2;
                sub_ln703_7_reg_3130 <= sub_ln703_7_fu_2374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln17_reg_2854 <= icmp_ln17_fu_1448_p2;
                j_0_0_reg_1396_pp0_iter1_reg <= j_0_0_reg_1396;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_16_reg_2913 = ap_const_lv1_1) and (trunc_ln301_1_reg_2909 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln321_3_reg_3029 <= icmp_ln321_3_fu_1856_p2;
                mul_ln1118_1_reg_3019 <= mul_ln1118_1_fu_1828_p2;
                sub_ln1193_1_reg_3014 <= sub_ln1193_1_fu_1814_p2;
                sub_ln703_3_reg_3024 <= sub_ln703_3_fu_1844_p2;
                sub_ln731_1_reg_3009 <= sub_ln731_1_fu_1776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_2936 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln321_4_reg_3033 <= icmp_ln321_4_fu_1868_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_2936 = ap_const_lv1_1) and (trunc_ln301_2_reg_2932 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln321_5_reg_3061 <= icmp_ln321_5_fu_1927_p2;
                sub_ln731_2_reg_3042 <= sub_ln731_2_fu_1895_p2;
                tmp_17_reg_3037 <= rem_2_q0(29 downto 20);
                trunc_ln1333_2_reg_3054 <= rem_2_q0(29 downto 23);
                trunc_ln1333_6_reg_3047 <= sub_ln731_2_fu_1895_p2(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_24_reg_2959 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln321_6_reg_3065 <= icmp_ln321_6_fu_1939_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_24_reg_2959 = ap_const_lv1_1) and (trunc_ln301_3_reg_2955 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln321_7_reg_3093 <= icmp_ln321_7_fu_1998_p2;
                sub_ln731_3_reg_3074 <= sub_ln731_3_fu_1966_p2;
                tmp_21_reg_3069 <= rem_3_q0(29 downto 20);
                trunc_ln1333_3_reg_3086 <= rem_3_q0(29 downto 23);
                trunc_ln1333_7_reg_3079 <= sub_ln731_3_fu_1966_p2(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_20_reg_2936 = ap_const_lv1_1) and (trunc_ln301_2_reg_2932 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                lshr_ln321_5_reg_3120 <= j_0_0_reg_1396_pp0_iter1_reg(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_24_reg_2959 = ap_const_lv1_1) and (trunc_ln301_3_reg_2955 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                lshr_ln321_7_reg_3135 <= j_0_0_reg_1396_pp0_iter1_reg(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_12_reg_2890 = ap_const_lv1_1) and (trunc_ln301_reg_2886 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln1118_reg_2996 <= mul_ln1118_fu_1703_p2;
                sub_ln1193_reg_2991 <= sub_ln1193_fu_1689_p2;
                sub_ln703_1_reg_3001 <= sub_ln703_1_fu_1719_p2;
                sub_ln731_reg_2986 <= sub_ln731_fu_1651_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_fu_1476_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln301_fu_1472_p1 = ap_const_lv1_1) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then
                rem_0_addr_reg_2899 <= zext_ln18_reg_2858(5 - 1 downto 0);
                tmp_10_reg_2904 <= inputs_0_q0(13 downto 3);
                tmp_9_reg_2894 <= inputs_0_q0(21 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                rem_0_addr_reg_2899_pp0_iter1_reg <= rem_0_addr_reg_2899;
                rem_1_addr_reg_2922_pp0_iter1_reg <= rem_1_addr_reg_2922;
                rem_2_addr_reg_2945_pp0_iter1_reg <= rem_2_addr_reg_2945;
                rem_3_addr_reg_2968_pp0_iter1_reg <= rem_3_addr_reg_2968;
                tmp_11_reg_2917_pp0_iter1_reg <= tmp_11_reg_2917;
                tmp_12_reg_2890_pp0_iter1_reg <= tmp_12_reg_2890;
                tmp_15_reg_2940_pp0_iter1_reg <= tmp_15_reg_2940;
                tmp_16_reg_2913_pp0_iter1_reg <= tmp_16_reg_2913;
                tmp_19_reg_2963_pp0_iter1_reg <= tmp_19_reg_2963;
                tmp_20_reg_2936_pp0_iter1_reg <= tmp_20_reg_2936;
                tmp_24_reg_2959_pp0_iter1_reg <= tmp_24_reg_2959;
                tmp_9_reg_2894_pp0_iter1_reg <= tmp_9_reg_2894;
                trunc_ln301_1_reg_2909_pp0_iter1_reg <= trunc_ln301_1_reg_2909;
                trunc_ln301_2_reg_2932_pp0_iter1_reg <= trunc_ln301_2_reg_2932;
                trunc_ln301_3_reg_2955_pp0_iter1_reg <= trunc_ln301_3_reg_2955;
                trunc_ln301_reg_2886_pp0_iter1_reg <= trunc_ln301_reg_2886;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_16_fu_1508_p3 = ap_const_lv1_1) and (trunc_ln301_1_fu_1504_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then
                rem_1_addr_reg_2922 <= zext_ln18_reg_2858(5 - 1 downto 0);
                tmp_11_reg_2917 <= inputs_1_q0(21 downto 3);
                tmp_14_reg_2927 <= inputs_1_q0(13 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_20_fu_1540_p3 = ap_const_lv1_1) and (trunc_ln301_2_fu_1536_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then
                rem_2_addr_reg_2945 <= zext_ln18_reg_2858(5 - 1 downto 0);
                tmp_15_reg_2940 <= inputs_2_q0(21 downto 3);
                tmp_18_reg_2950 <= inputs_2_q0(13 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_24_fu_1572_p3 = ap_const_lv1_1) and (trunc_ln301_3_fu_1568_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then
                rem_3_addr_reg_2968 <= zext_ln18_reg_2858(5 - 1 downto 0);
                tmp_19_reg_2963 <= inputs_3_q0(21 downto 3);
                tmp_22_reg_2973 <= inputs_3_q0(13 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then
                tmp_12_reg_2890 <= inputs_0_q0(1 downto 1);
                tmp_16_reg_2913 <= inputs_1_q0(1 downto 1);
                tmp_20_reg_2936 <= inputs_2_q0(1 downto 1);
                tmp_24_reg_2959 <= inputs_3_q0(1 downto 1);
                trunc_ln301_1_reg_2909 <= trunc_ln301_1_fu_1504_p1;
                trunc_ln301_2_reg_2932 <= trunc_ln301_2_fu_1536_p1;
                trunc_ln301_3_reg_2955 <= trunc_ln301_3_fu_1568_p1;
                trunc_ln301_reg_2886 <= trunc_ln301_fu_1472_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_reg_2890 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln301_reg_2886 = ap_const_lv1_1))) then
                tmp_1_reg_3097 <= select_ln1494_fu_2029_p3(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_16_reg_2913 = ap_const_lv1_1) and (trunc_ln301_1_reg_2909 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_3_reg_3105 <= select_ln1494_1_fu_2145_p3(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln17_fu_1448_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln18_reg_2858(4 downto 0) <= zext_ln18_fu_1464_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln18_reg_2858(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, icmp_ln17_fu_1448_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln17_fu_1448_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln17_fu_1448_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ISI_q_V_1_fu_2210_p3 <= 
        select_ln1495_2_fu_2196_p3 when (or_ln1495_1_fu_2204_p2(0) = '1') else 
        trunc_ln_i3_fu_2174_p4;
    ISI_q_V_2_fu_2489_p3 <= 
        select_ln1495_4_fu_2475_p3 when (or_ln1495_2_fu_2483_p2(0) = '1') else 
        trunc_ln_i1_fu_2453_p4;
    ISI_q_V_3_fu_2587_p3 <= 
        select_ln1495_6_fu_2573_p3 when (or_ln1495_3_fu_2581_p2(0) = '1') else 
        trunc_ln_i2_fu_2551_p4;
    ISI_q_V_fu_2094_p3 <= 
        select_ln1495_fu_2080_p3 when (or_ln1495_fu_2088_p2(0) = '1') else 
        trunc_ln_i_fu_2058_p4;

    ISIquan_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_fu_1610_p1, zext_ln321_1_fu_2108_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_0_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_0_V_address0 <= zext_ln321_1_fu_2108_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_0_V_address0 <= zext_ln321_fu_1610_p1(4 - 1 downto 0);
        else 
            ISIquan_0_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_0_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_0_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_0_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_0_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_0_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_0_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_0_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_fu_2094_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_0_V_d0 <= ISI_q_V_fu_2094_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_0_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_0_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_0_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_reg_2886, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, tmp_12_reg_2890, ap_enable_reg_pp0_iter1, icmp_ln321_fu_1616_p2, icmp_ln321_1_fu_2114_p2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln321_1_fu_2114_p2 = ap_const_lv1_1) and (tmp_12_reg_2890 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln301_reg_2886 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln321_fu_1616_p2 = ap_const_lv1_1) and (tmp_12_reg_2890 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_0_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_2_fu_1735_p1, zext_ln321_3_fu_2220_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_1_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_1_V_address0 <= zext_ln321_3_fu_2220_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_1_V_address0 <= zext_ln321_2_fu_1735_p1(4 - 1 downto 0);
        else 
            ISIquan_1_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_1_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_1_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_1_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_1_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_1_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_1_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_1_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_1_fu_2210_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_1_V_d0 <= ISI_q_V_1_fu_2210_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_1_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_1_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_1_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln301_1_reg_2909, tmp_16_reg_2913, icmp_ln321_3_reg_3029, ap_enable_reg_pp0_iter1, icmp_ln321_2_fu_1741_p2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln321_3_reg_3029 = ap_const_lv1_1) and (tmp_16_reg_2913 = ap_const_lv1_1) and (trunc_ln301_1_reg_2909 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln321_2_fu_1741_p2 = ap_const_lv1_1) and (tmp_16_reg_2913 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_1_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_4_fu_2226_p1, zext_ln321_5_fu_2499_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_2_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_2_V_address0 <= zext_ln321_5_fu_2499_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_2_V_address0 <= zext_ln321_4_fu_2226_p1(4 - 1 downto 0);
        else 
            ISIquan_2_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_2_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_2_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_2_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_2_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_2_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_2_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_2_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_2_fu_2489_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_2_V_d0 <= ISI_q_V_2_fu_2489_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_2_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_2_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_2_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln301_2_reg_2932_pp0_iter1_reg, tmp_20_reg_2936, tmp_20_reg_2936_pp0_iter1_reg, icmp_ln321_4_reg_3033, icmp_ln321_5_reg_3061, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln321_4_reg_3033 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_20_reg_2936 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln321_5_reg_3061 = ap_const_lv1_1) and (tmp_20_reg_2936_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_2_reg_2932_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_2_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_3_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_6_fu_2303_p1, zext_ln321_7_fu_2597_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_3_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_3_V_address0 <= zext_ln321_7_fu_2597_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_3_V_address0 <= zext_ln321_6_fu_2303_p1(4 - 1 downto 0);
        else 
            ISIquan_3_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_3_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_3_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_3_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_3_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_3_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_3_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_3_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_3_fu_2587_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_3_V_d0 <= ISI_q_V_3_fu_2587_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_3_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_3_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_3_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln301_3_reg_2955_pp0_iter1_reg, tmp_24_reg_2959, tmp_24_reg_2959_pp0_iter1_reg, icmp_ln321_6_reg_3065, icmp_ln321_7_reg_3093, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln321_6_reg_3065 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_24_reg_2959 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln321_7_reg_3093 = ap_const_lv1_1) and (tmp_24_reg_2959_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_3_reg_2955_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_3_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_4_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_fu_1610_p1, zext_ln321_1_fu_2108_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_4_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_4_V_address0 <= zext_ln321_1_fu_2108_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_4_V_address0 <= zext_ln321_fu_1610_p1(4 - 1 downto 0);
        else 
            ISIquan_4_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_4_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_4_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_4_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_4_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_4_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_4_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_4_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_fu_2094_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_4_V_d0 <= ISI_q_V_fu_2094_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_4_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_4_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_4_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_4_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_reg_2886, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, tmp_12_reg_2890, ap_enable_reg_pp0_iter1, icmp_ln321_fu_1616_p2, icmp_ln321_1_fu_2114_p2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_12_reg_2890 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln301_reg_2886 = ap_const_lv1_1) and (icmp_ln321_1_fu_2114_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln321_fu_1616_p2 = ap_const_lv1_0) and (tmp_12_reg_2890 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_4_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_5_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_2_fu_1735_p1, zext_ln321_3_fu_2220_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_5_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_5_V_address0 <= zext_ln321_3_fu_2220_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_5_V_address0 <= zext_ln321_2_fu_1735_p1(4 - 1 downto 0);
        else 
            ISIquan_5_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_5_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_5_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_5_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_5_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_5_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_5_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_5_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_1_fu_2210_p3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ISIquan_5_V_d0 <= ISI_q_V_1_fu_2210_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ISIquan_5_V_d0 <= ap_const_lv4_F;
            else 
                ISIquan_5_V_d0 <= "XXXX";
            end if;
        else 
            ISIquan_5_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_5_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln301_1_reg_2909, tmp_16_reg_2913, icmp_ln321_3_reg_3029, ap_enable_reg_pp0_iter1, icmp_ln321_2_fu_1741_p2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_16_reg_2913 = ap_const_lv1_1) and (trunc_ln301_1_reg_2909 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln321_3_reg_3029 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln321_2_fu_1741_p2 = ap_const_lv1_0) and (tmp_16_reg_2913 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_5_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_6_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_4_fu_2226_p1, zext_ln321_5_fu_2499_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_6_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_6_V_address0 <= zext_ln321_5_fu_2499_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_6_V_address0 <= zext_ln321_4_fu_2226_p1(4 - 1 downto 0);
        else 
            ISIquan_6_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_6_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_6_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_6_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_6_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_6_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_6_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_6_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_2_fu_2489_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_6_V_d0 <= ISI_q_V_2_fu_2489_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_6_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_6_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_6_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln301_2_reg_2932_pp0_iter1_reg, tmp_20_reg_2936, tmp_20_reg_2936_pp0_iter1_reg, icmp_ln321_4_reg_3033, icmp_ln321_5_reg_3061, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln321_4_reg_3033 = ap_const_lv1_0) and (tmp_20_reg_2936 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_2936_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_2_reg_2932_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln321_5_reg_3061 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_6_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_7_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln321_6_fu_2303_p1, zext_ln321_7_fu_2597_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_7_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_7_V_address0 <= zext_ln321_7_fu_2597_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_7_V_address0 <= zext_ln321_6_fu_2303_p1(4 - 1 downto 0);
        else 
            ISIquan_7_V_address0 <= "XXXX";
        end if; 
    end process;


    ISIquan_7_V_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ISIquan_7_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            ISIquan_7_V_address1 <= "XXXX";
        end if; 
    end process;


    ISIquan_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_7_V_ce0 <= ap_const_logic_1;
        else 
            ISIquan_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_7_V_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ISIquan_7_V_ce1 <= ap_const_logic_1;
        else 
            ISIquan_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ISIquan_7_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ISI_q_V_3_fu_2587_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ISIquan_7_V_d0 <= ISI_q_V_3_fu_2587_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ISIquan_7_V_d0 <= ap_const_lv4_F;
        else 
            ISIquan_7_V_d0 <= "XXXX";
        end if; 
    end process;


    ISIquan_7_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln301_3_reg_2955_pp0_iter1_reg, tmp_24_reg_2959, tmp_24_reg_2959_pp0_iter1_reg, icmp_ln321_6_reg_3065, icmp_ln321_7_reg_3093, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln321_6_reg_3065 = ap_const_lv1_0) and (tmp_24_reg_2959 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_24_reg_2959_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_3_reg_2955_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln321_7_reg_3093 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ISIquan_7_V_we0 <= ap_const_logic_1;
        else 
            ISIquan_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln17_fu_1600_p2 <= std_logic_vector(unsigned(j_0_0_reg_1396) + unsigned(ap_const_lv7_4));
    and_ln1497_1_fu_2190_p2 <= (xor_ln1495_1_fu_2184_p2 and icmp_ln1497_1_fu_2168_p2);
    and_ln1497_2_fu_2469_p2 <= (xor_ln1495_2_fu_2463_p2 and icmp_ln1497_2_fu_2447_p2);
    and_ln1497_3_fu_2567_p2 <= (xor_ln1495_3_fu_2561_p2 and icmp_ln1497_3_fu_2545_p2);
    and_ln1497_fu_2074_p2 <= (xor_ln1495_fu_2068_p2 and icmp_ln1497_fu_2052_p2);
    and_ln731_1_fu_1640_p3 <= (tmp_10_reg_2904 & ap_const_lv1_0);
    and_ln731_2_fu_1757_p3 <= (tmp_13_fu_1747_p4 & ap_const_lv2_0);
    and_ln731_3_fu_1765_p3 <= (tmp_14_reg_2927 & ap_const_lv1_0);
    and_ln731_4_fu_2232_p3 <= (tmp_17_reg_3037 & ap_const_lv2_0);
    and_ln731_5_fu_1884_p3 <= (tmp_18_reg_2950 & ap_const_lv1_0);
    and_ln731_6_fu_2309_p3 <= (tmp_21_reg_3069 & ap_const_lv2_0);
    and_ln731_7_fu_1955_p3 <= (tmp_22_reg_2973 & ap_const_lv1_0);
    and_ln_fu_1632_p3 <= (tmp_s_fu_1622_p4 & ap_const_lv2_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6);
    ap_CS_fsm_state11 <= ap_CS_fsm(7);
    ap_CS_fsm_state12 <= ap_CS_fsm(8);
    ap_CS_fsm_state13 <= ap_CS_fsm(9);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln17_fu_1448_p2)
    begin
        if ((icmp_ln17_fu_1448_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_0_0_phi_fu_1400_p4_assign_proc : process(j_0_0_reg_1396, ap_CS_fsm_pp0_stage0, icmp_ln17_reg_2854, add_ln17_reg_2978, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln17_reg_2854 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_0_phi_fu_1400_p4 <= add_ln17_reg_2978;
        else 
            ap_phi_mux_j_0_0_phi_fu_1400_p4 <= j_0_0_reg_1396;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_fu_1408_p1_assign_proc : process(j_0_0_reg_1396, j_0_0_reg_1396_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1408_p1 <= j_0_0_reg_1396_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1408_p1 <= j_0_0_reg_1396;
            else 
                grp_fu_1408_p1 <= "XXXXXXX";
            end if;
        else 
            grp_fu_1408_p1 <= "XXXXXXX";
        end if; 
    end process;

    grp_fu_1408_p4 <= grp_fu_1408_p1(6 downto 3);

    grp_fu_1418_p1_assign_proc : process(j_0_0_reg_1396, j_0_0_reg_1396_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1418_p1 <= j_0_0_reg_1396_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1418_p1 <= j_0_0_reg_1396;
            else 
                grp_fu_1418_p1 <= "XXXXXXX";
            end if;
        else 
            grp_fu_1418_p1 <= "XXXXXXX";
        end if; 
    end process;

    grp_fu_1418_p4 <= grp_fu_1418_p1(6 downto 3);
    grp_fu_1428_p4 <= j_0_0_reg_1396_pp0_iter1_reg(6 downto 3);
    grp_fu_1438_p4 <= j_0_0_reg_1396_pp0_iter1_reg(6 downto 3);
    icmp_ln1494_1_fu_2139_p2 <= "1" when (signed(sext_ln1494_1_fu_2132_p1) > signed(zext_ln1494_1_fu_2136_p1)) else "0";
    icmp_ln1494_2_fu_2282_p2 <= "1" when (signed(sext_ln1494_2_fu_2274_p1) > signed(zext_ln1494_2_fu_2278_p1)) else "0";
    icmp_ln1494_3_fu_2359_p2 <= "1" when (signed(sext_ln1494_3_fu_2351_p1) > signed(zext_ln1494_3_fu_2355_p1)) else "0";
    icmp_ln1494_fu_2023_p2 <= "1" when (signed(sext_ln1494_fu_2016_p1) > signed(zext_ln1494_fu_2020_p1)) else "0";
    icmp_ln1495_1_fu_2162_p2 <= "1" when (unsigned(select_ln1494_1_fu_2145_p3) < unsigned(ap_const_lv12_28)) else "0";
    icmp_ln1495_2_fu_2441_p2 <= "1" when (unsigned(select_ln1494_2_fu_2411_p3) < unsigned(ap_const_lv12_28)) else "0";
    icmp_ln1495_3_fu_2539_p2 <= "1" when (unsigned(select_ln1494_3_fu_2509_p3) < unsigned(ap_const_lv12_28)) else "0";
    icmp_ln1495_fu_2046_p2 <= "1" when (unsigned(select_ln1494_fu_2029_p3) < unsigned(ap_const_lv12_28)) else "0";
    icmp_ln1497_1_fu_2168_p2 <= "1" when (unsigned(select_ln1494_1_fu_2145_p3) > unsigned(ap_const_lv12_190)) else "0";
    icmp_ln1497_2_fu_2447_p2 <= "1" when (unsigned(select_ln1494_2_fu_2411_p3) > unsigned(ap_const_lv12_190)) else "0";
    icmp_ln1497_3_fu_2545_p2 <= "1" when (unsigned(select_ln1494_3_fu_2509_p3) > unsigned(ap_const_lv12_190)) else "0";
    icmp_ln1497_fu_2052_p2 <= "1" when (unsigned(select_ln1494_fu_2029_p3) > unsigned(ap_const_lv12_190)) else "0";
    icmp_ln17_fu_1448_p2 <= "1" when (ap_phi_mux_j_0_0_phi_fu_1400_p4 = ap_const_lv7_60) else "0";
    icmp_ln321_1_fu_2114_p2 <= "1" when (trunc_ln321_1_fu_2104_p1 = ap_const_lv3_0) else "0";
    icmp_ln321_2_fu_1741_p2 <= "1" when (or_ln321_fu_1729_p2 = ap_const_lv3_1) else "0";
    icmp_ln321_3_fu_1856_p2 <= "1" when (or_ln321_1_fu_1850_p2 = ap_const_lv3_1) else "0";
    icmp_ln321_4_fu_1868_p2 <= "1" when (or_ln321_2_fu_1862_p2 = ap_const_lv3_2) else "0";
    icmp_ln321_5_fu_1927_p2 <= "1" when (or_ln321_3_fu_1921_p2 = ap_const_lv3_2) else "0";
    icmp_ln321_6_fu_1939_p2 <= "1" when (or_ln321_4_fu_1933_p2 = ap_const_lv3_3) else "0";
    icmp_ln321_7_fu_1998_p2 <= "1" when (or_ln321_5_fu_1992_p2 = ap_const_lv3_3) else "0";
    icmp_ln321_fu_1616_p2 <= "1" when (trunc_ln321_fu_1606_p1 = ap_const_lv3_0) else "0";
    inputs_0_address0 <= zext_ln18_fu_1464_p1(5 - 1 downto 0);

    inputs_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inputs_0_ce0 <= ap_const_logic_1;
        else 
            inputs_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_1_address0 <= zext_ln18_fu_1464_p1(5 - 1 downto 0);

    inputs_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inputs_1_ce0 <= ap_const_logic_1;
        else 
            inputs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_2_address0 <= zext_ln18_fu_1464_p1(5 - 1 downto 0);

    inputs_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inputs_2_ce0 <= ap_const_logic_1;
        else 
            inputs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_3_address0 <= zext_ln18_fu_1464_p1(5 - 1 downto 0);

    inputs_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inputs_3_ce0 <= ap_const_logic_1;
        else 
            inputs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_1454_p4 <= ap_phi_mux_j_0_0_phi_fu_1400_p4(6 downto 2);
    mul_ln1118_1_fu_1828_p0 <= mul_ln1118_1_fu_1828_p00(7 - 1 downto 0);
    mul_ln1118_1_fu_1828_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_1_fu_1796_p4),14));
    mul_ln1118_1_fu_1828_p1 <= mul_ln1118_1_fu_1828_p10(7 - 1 downto 0);
    mul_ln1118_1_fu_1828_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_5_fu_1782_p4),14));
    mul_ln1118_1_fu_1828_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_1_fu_1828_p0) * unsigned(mul_ln1118_1_fu_1828_p1), 14));
    mul_ln1118_2_fu_2260_p0 <= mul_ln1118_2_fu_2260_p00(7 - 1 downto 0);
    mul_ln1118_2_fu_2260_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_2_reg_3054),14));
    mul_ln1118_2_fu_2260_p1 <= mul_ln1118_2_fu_2260_p10(7 - 1 downto 0);
    mul_ln1118_2_fu_2260_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_6_reg_3047),14));
    mul_ln1118_2_fu_2260_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_2_fu_2260_p0) * unsigned(mul_ln1118_2_fu_2260_p1), 14));
    mul_ln1118_3_fu_2337_p0 <= mul_ln1118_3_fu_2337_p00(7 - 1 downto 0);
    mul_ln1118_3_fu_2337_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_3_reg_3086),14));
    mul_ln1118_3_fu_2337_p1 <= mul_ln1118_3_fu_2337_p10(7 - 1 downto 0);
    mul_ln1118_3_fu_2337_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_7_reg_3079),14));
    mul_ln1118_3_fu_2337_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_3_fu_2337_p0) * unsigned(mul_ln1118_3_fu_2337_p1), 14));
    mul_ln1118_fu_1703_p0 <= mul_ln1118_fu_1703_p00(7 - 1 downto 0);
    mul_ln1118_fu_1703_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_1671_p4),14));
    mul_ln1118_fu_1703_p1 <= mul_ln1118_fu_1703_p10(7 - 1 downto 0);
    mul_ln1118_fu_1703_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_4_fu_1657_p4),14));
    mul_ln1118_fu_1703_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_fu_1703_p0) * unsigned(mul_ln1118_fu_1703_p1), 14));
    or_ln1495_1_fu_2204_p2 <= (icmp_ln1495_1_fu_2162_p2 or and_ln1497_1_fu_2190_p2);
    or_ln1495_2_fu_2483_p2 <= (icmp_ln1495_2_fu_2441_p2 or and_ln1497_2_fu_2469_p2);
    or_ln1495_3_fu_2581_p2 <= (icmp_ln1495_3_fu_2539_p2 or and_ln1497_3_fu_2567_p2);
    or_ln1495_fu_2088_p2 <= (icmp_ln1495_fu_2046_p2 or and_ln1497_fu_2074_p2);
    or_ln321_1_fu_1850_p2 <= (trunc_ln17_fu_1725_p1 or ap_const_lv3_1);
    or_ln321_2_fu_1862_p2 <= (trunc_ln17_fu_1725_p1 or ap_const_lv3_2);
    or_ln321_3_fu_1921_p2 <= (trunc_ln17_fu_1725_p1 or ap_const_lv3_2);
    or_ln321_4_fu_1933_p2 <= (trunc_ln17_fu_1725_p1 or ap_const_lv3_3);
    or_ln321_5_fu_1992_p2 <= (trunc_ln17_fu_1725_p1 or ap_const_lv3_3);
    or_ln321_fu_1729_p2 <= (trunc_ln17_fu_1725_p1 or ap_const_lv3_1);
    or_ln50_6_10_fu_2833_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_1_fu_2623_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_2_fu_2644_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_3_fu_2665_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_4_fu_2686_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_5_fu_2707_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_6_fu_2728_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_7_fu_2749_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_8_fu_2770_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);
    or_ln50_6_9_fu_2791_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_fu_2602_p9 <= (((((((ISIquan_7_V_q0 & ISIquan_6_V_q0) & ISIquan_5_V_q0) & ISIquan_4_V_q0) & ISIquan_3_V_q0) & ISIquan_2_V_q0) & ISIquan_1_V_q0) & ISIquan_0_V_q0);
    or_ln50_6_s_fu_2812_p9 <= (((((((ISIquan_7_V_q1 & ISIquan_6_V_q1) & ISIquan_5_V_q1) & ISIquan_4_V_q1) & ISIquan_3_V_q1) & ISIquan_2_V_q1) & ISIquan_1_V_q1) & ISIquan_0_V_q1);

    output_0_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_0_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            output_0_address0 <= "XX";
        end if; 
    end process;


    output_0_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_0_ce0 <= ap_const_logic_1;
        else 
            output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, or_ln50_6_fu_2602_p9, or_ln50_6_4_fu_2686_p9, or_ln50_6_8_fu_2770_p9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_0_d0 <= or_ln50_6_8_fu_2770_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_0_d0 <= or_ln50_6_4_fu_2686_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_0_d0 <= or_ln50_6_fu_2602_p9;
        else 
            output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_0_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_0_we0 <= ap_const_logic_1;
        else 
            output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_1_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            output_1_address0 <= "XX";
        end if; 
    end process;


    output_1_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_1_ce0 <= ap_const_logic_1;
        else 
            output_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, or_ln50_6_1_fu_2623_p9, or_ln50_6_5_fu_2707_p9, or_ln50_6_9_fu_2791_p9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_1_d0 <= or_ln50_6_9_fu_2791_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_1_d0 <= or_ln50_6_5_fu_2707_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_1_d0 <= or_ln50_6_1_fu_2623_p9;
        else 
            output_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_1_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_1_we0 <= ap_const_logic_1;
        else 
            output_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_2_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_2_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            output_2_address0 <= "XX";
        end if; 
    end process;


    output_2_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            output_2_ce0 <= ap_const_logic_1;
        else 
            output_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, or_ln50_6_2_fu_2644_p9, or_ln50_6_6_fu_2728_p9, or_ln50_6_s_fu_2812_p9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_2_d0 <= or_ln50_6_s_fu_2812_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_2_d0 <= or_ln50_6_6_fu_2728_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_2_d0 <= or_ln50_6_2_fu_2644_p9;
        else 
            output_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_2_we0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            output_2_we0 <= ap_const_logic_1;
        else 
            output_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_3_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_3_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_3_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            output_3_address0 <= "XX";
        end if; 
    end process;


    output_3_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            output_3_ce0 <= ap_const_logic_1;
        else 
            output_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, or_ln50_6_3_fu_2665_p9, or_ln50_6_7_fu_2749_p9, or_ln50_6_10_fu_2833_p9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_3_d0 <= or_ln50_6_10_fu_2833_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_3_d0 <= or_ln50_6_7_fu_2749_p9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_3_d0 <= or_ln50_6_3_fu_2665_p9;
        else 
            output_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_3_we0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            output_3_we0 <= ap_const_logic_1;
        else 
            output_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rem_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln18_reg_2858, ap_CS_fsm_pp0_stage1, rem_0_addr_reg_2899_pp0_iter1_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rem_0_address0 <= rem_0_addr_reg_2899_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            rem_0_address0 <= zext_ln18_reg_2858(5 - 1 downto 0);
        else 
            rem_0_address0 <= "XXXXX";
        end if; 
    end process;


    rem_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rem_0_ce0 <= ap_const_logic_1;
        else 
            rem_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rem_0_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_2380_p4),32));

    rem_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_reg_2886_pp0_iter1_reg, tmp_12_reg_2890_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_12_reg_2890_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_reg_2886_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rem_0_we0 <= ap_const_logic_1;
        else 
            rem_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rem_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln18_reg_2858, ap_CS_fsm_pp0_stage1, rem_1_addr_reg_2922_pp0_iter1_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rem_1_address0 <= rem_1_addr_reg_2922_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            rem_1_address0 <= zext_ln18_reg_2858(5 - 1 downto 0);
        else 
            rem_1_address0 <= "XXXXX";
        end if; 
    end process;


    rem_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rem_1_ce0 <= ap_const_logic_1;
        else 
            rem_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rem_1_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_2393_p4),32));

    rem_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_1_reg_2909_pp0_iter1_reg, tmp_16_reg_2913_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_16_reg_2913_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_1_reg_2909_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rem_1_we0 <= ap_const_logic_1;
        else 
            rem_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rem_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln18_reg_2858, ap_CS_fsm_pp0_stage1, rem_2_addr_reg_2945_pp0_iter1_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rem_2_address0 <= rem_2_addr_reg_2945_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            rem_2_address0 <= zext_ln18_reg_2858(5 - 1 downto 0);
        else 
            rem_2_address0 <= "XXXXX";
        end if; 
    end process;


    rem_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rem_2_ce0 <= ap_const_logic_1;
        else 
            rem_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rem_2_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_2427_p4),32));

    rem_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_2_reg_2932_pp0_iter1_reg, tmp_20_reg_2936_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_2936_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_2_reg_2932_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rem_2_we0 <= ap_const_logic_1;
        else 
            rem_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rem_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln18_reg_2858, ap_CS_fsm_pp0_stage1, rem_3_addr_reg_2968_pp0_iter1_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rem_3_address0 <= rem_3_addr_reg_2968_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            rem_3_address0 <= zext_ln18_reg_2858(5 - 1 downto 0);
        else 
            rem_3_address0 <= "XXXXX";
        end if; 
    end process;


    rem_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rem_3_ce0 <= ap_const_logic_1;
        else 
            rem_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rem_3_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_2525_p4),32));

    rem_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln301_3_reg_2955_pp0_iter1_reg, tmp_24_reg_2959_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_24_reg_2959_pp0_iter1_reg = ap_const_lv1_1) and (trunc_ln301_3_reg_2955_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rem_3_we0 <= ap_const_logic_1;
        else 
            rem_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1494_1_fu_2145_p3 <= 
        sub_ln703_3_reg_3024 when (icmp_ln1494_1_fu_2139_p2(0) = '1') else 
        shl_ln731_1_fu_2120_p2;
    select_ln1494_2_fu_2411_p3 <= 
        sub_ln703_5_reg_3115 when (icmp_ln1494_2_reg_3110(0) = '1') else 
        shl_ln731_2_fu_2406_p2;
    select_ln1494_3_fu_2509_p3 <= 
        sub_ln703_7_reg_3130 when (icmp_ln1494_3_reg_3125(0) = '1') else 
        shl_ln731_3_fu_2504_p2;
    select_ln1494_fu_2029_p3 <= 
        sub_ln703_1_reg_3001 when (icmp_ln1494_fu_2023_p2(0) = '1') else 
        shl_ln731_fu_2004_p2;
    select_ln1495_2_fu_2196_p3 <= 
        ap_const_lv4_D when (icmp_ln1495_1_fu_2162_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln1495_4_fu_2475_p3 <= 
        ap_const_lv4_D when (icmp_ln1495_2_fu_2441_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln1495_6_fu_2573_p3 <= 
        ap_const_lv4_D when (icmp_ln1495_3_fu_2539_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln1495_fu_2080_p3 <= 
        ap_const_lv4_D when (icmp_ln1495_fu_2046_p2(0) = '1') else 
        ap_const_lv4_E;
        sext_ln1494_1_fu_2132_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_1_fu_2125_p3),15));

        sext_ln1494_2_fu_2274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_2_fu_2266_p3),15));

        sext_ln1494_3_fu_2351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_3_fu_2343_p3),15));

        sext_ln1494_fu_2016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_2009_p3),15));

    shl_ln1_fu_2009_p3 <= (sub_ln1193_reg_2991 & ap_const_lv2_0);
    shl_ln728_1_fu_2125_p3 <= (sub_ln1193_1_reg_3014 & ap_const_lv2_0);
    shl_ln728_2_fu_2266_p3 <= (sub_ln1193_2_fu_2248_p2 & ap_const_lv2_0);
    shl_ln728_3_fu_2343_p3 <= (sub_ln1193_3_fu_2325_p2 & ap_const_lv2_0);
    shl_ln731_1_fu_2120_p2 <= std_logic_vector(shift_left(unsigned(sub_ln731_1_reg_3009),to_integer(unsigned('0' & ap_const_lv12_2(12-1 downto 0)))));
    shl_ln731_2_fu_2406_p2 <= std_logic_vector(shift_left(unsigned(sub_ln731_2_reg_3042),to_integer(unsigned('0' & ap_const_lv12_2(12-1 downto 0)))));
    shl_ln731_3_fu_2504_p2 <= std_logic_vector(shift_left(unsigned(sub_ln731_3_reg_3074),to_integer(unsigned('0' & ap_const_lv12_2(12-1 downto 0)))));
    shl_ln731_fu_2004_p2 <= std_logic_vector(shift_left(unsigned(sub_ln731_reg_2986),to_integer(unsigned('0' & ap_const_lv12_2(12-1 downto 0)))));
    sub_ln1193_1_fu_1814_p2 <= std_logic_vector(unsigned(zext_ln703_2_fu_1806_p1) - unsigned(zext_ln703_3_fu_1810_p1));
    sub_ln1193_2_fu_2248_p2 <= std_logic_vector(unsigned(zext_ln703_4_fu_2242_p1) - unsigned(zext_ln703_5_fu_2245_p1));
    sub_ln1193_3_fu_2325_p2 <= std_logic_vector(unsigned(zext_ln703_6_fu_2319_p1) - unsigned(zext_ln703_7_fu_2322_p1));
    sub_ln1193_fu_1689_p2 <= std_logic_vector(unsigned(zext_ln703_fu_1681_p1) - unsigned(zext_ln703_1_fu_1685_p1));
    sub_ln703_1_fu_1719_p2 <= std_logic_vector(unsigned(sub_ln703_fu_1713_p2) - unsigned(zext_ln1333_4_fu_1667_p1));
    sub_ln703_2_fu_1838_p2 <= std_logic_vector(unsigned(and_ln731_2_fu_1757_p3) - unsigned(zext_ln1333_1_fu_1834_p1));
    sub_ln703_3_fu_1844_p2 <= std_logic_vector(unsigned(sub_ln703_2_fu_1838_p2) - unsigned(zext_ln1333_5_fu_1792_p1));
    sub_ln703_4_fu_2291_p2 <= std_logic_vector(unsigned(and_ln731_4_fu_2232_p3) - unsigned(zext_ln1333_2_fu_2288_p1));
    sub_ln703_5_fu_2297_p2 <= std_logic_vector(unsigned(sub_ln703_4_fu_2291_p2) - unsigned(zext_ln1333_6_fu_2239_p1));
    sub_ln703_6_fu_2368_p2 <= std_logic_vector(unsigned(and_ln731_6_fu_2309_p3) - unsigned(zext_ln1333_3_fu_2365_p1));
    sub_ln703_7_fu_2374_p2 <= std_logic_vector(unsigned(sub_ln703_6_fu_2368_p2) - unsigned(zext_ln1333_7_fu_2316_p1));
    sub_ln703_fu_1713_p2 <= std_logic_vector(unsigned(and_ln_fu_1632_p3) - unsigned(zext_ln1333_fu_1709_p1));
    sub_ln731_1_fu_1776_p2 <= std_logic_vector(unsigned(and_ln731_3_fu_1765_p3) - unsigned(trunc_ln731_1_fu_1772_p1));
    sub_ln731_2_fu_1895_p2 <= std_logic_vector(unsigned(and_ln731_5_fu_1884_p3) - unsigned(trunc_ln731_2_fu_1891_p1));
    sub_ln731_3_fu_1966_p2 <= std_logic_vector(unsigned(and_ln731_7_fu_1955_p3) - unsigned(trunc_ln731_3_fu_1962_p1));
    sub_ln731_fu_1651_p2 <= std_logic_vector(unsigned(and_ln731_1_fu_1640_p3) - unsigned(trunc_ln731_fu_1647_p1));
    tmp_12_fu_1476_p3 <= inputs_0_q0(1 downto 1);
    tmp_13_fu_1747_p4 <= rem_1_q0(29 downto 20);
    tmp_16_fu_1508_p3 <= inputs_1_q0(1 downto 1);
    tmp_20_fu_1540_p3 <= inputs_2_q0(1 downto 1);
    tmp_24_fu_1572_p3 <= inputs_3_q0(1 downto 1);
    tmp_2_fu_2380_p4 <= ((tmp_1_reg_3097 & tmp_9_reg_2894_pp0_iter1_reg) & ap_const_lv1_0);
    tmp_4_fu_2393_p4 <= ((tmp_3_reg_3105 & tmp_11_reg_2917_pp0_iter1_reg) & ap_const_lv1_0);
    tmp_5_fu_2417_p4 <= select_ln1494_2_fu_2411_p3(11 downto 2);
    tmp_6_fu_2427_p4 <= ((tmp_5_fu_2417_p4 & tmp_15_reg_2940_pp0_iter1_reg) & ap_const_lv1_0);
    tmp_7_fu_2515_p4 <= select_ln1494_3_fu_2509_p3(11 downto 2);
    tmp_8_fu_2525_p4 <= ((tmp_7_fu_2515_p4 & tmp_19_reg_2963_pp0_iter1_reg) & ap_const_lv1_0);
    tmp_s_fu_1622_p4 <= rem_0_q0(29 downto 20);
    trunc_ln1333_1_fu_1796_p4 <= rem_1_q0(29 downto 23);
    trunc_ln1333_4_fu_1657_p4 <= sub_ln731_fu_1651_p2(9 downto 3);
    trunc_ln1333_5_fu_1782_p4 <= sub_ln731_1_fu_1776_p2(9 downto 3);
    trunc_ln17_fu_1725_p1 <= j_0_0_reg_1396(3 - 1 downto 0);
    trunc_ln2_fu_1671_p4 <= rem_0_q0(29 downto 23);
    trunc_ln301_1_fu_1504_p1 <= inputs_1_q0(1 - 1 downto 0);
    trunc_ln301_2_fu_1536_p1 <= inputs_2_q0(1 - 1 downto 0);
    trunc_ln301_3_fu_1568_p1 <= inputs_3_q0(1 - 1 downto 0);
    trunc_ln301_fu_1472_p1 <= inputs_0_q0(1 - 1 downto 0);
    trunc_ln321_1_fu_2104_p1 <= j_0_0_reg_1396_pp0_iter1_reg(3 - 1 downto 0);
    trunc_ln321_fu_1606_p1 <= j_0_0_reg_1396(3 - 1 downto 0);
    trunc_ln731_1_fu_1772_p1 <= rem_1_q0(12 - 1 downto 0);
    trunc_ln731_2_fu_1891_p1 <= rem_2_q0(12 - 1 downto 0);
    trunc_ln731_3_fu_1962_p1 <= rem_3_q0(12 - 1 downto 0);
    trunc_ln731_fu_1647_p1 <= rem_0_q0(12 - 1 downto 0);
    trunc_ln_i1_fu_2453_p4 <= select_ln1494_2_fu_2411_p3(8 downto 5);
    trunc_ln_i2_fu_2551_p4 <= select_ln1494_3_fu_2509_p3(8 downto 5);
    trunc_ln_i3_fu_2174_p4 <= select_ln1494_1_fu_2145_p3(8 downto 5);
    trunc_ln_i_fu_2058_p4 <= select_ln1494_fu_2029_p3(8 downto 5);
    xor_ln1495_1_fu_2184_p2 <= (icmp_ln1495_1_fu_2162_p2 xor ap_const_lv1_1);
    xor_ln1495_2_fu_2463_p2 <= (icmp_ln1495_2_fu_2441_p2 xor ap_const_lv1_1);
    xor_ln1495_3_fu_2561_p2 <= (icmp_ln1495_3_fu_2539_p2 xor ap_const_lv1_1);
    xor_ln1495_fu_2068_p2 <= (icmp_ln1495_fu_2046_p2 xor ap_const_lv1_1);
    zext_ln1333_1_fu_1834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_1_fu_1796_p4),12));
    zext_ln1333_2_fu_2288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_2_reg_3054),12));
    zext_ln1333_3_fu_2365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_3_reg_3086),12));
    zext_ln1333_4_fu_1667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_4_fu_1657_p4),12));
    zext_ln1333_5_fu_1792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_5_fu_1782_p4),12));
    zext_ln1333_6_fu_2239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_6_reg_3047),12));
    zext_ln1333_7_fu_2316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_7_reg_3079),12));
    zext_ln1333_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_1671_p4),12));
    zext_ln1494_1_fu_2136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_1_reg_3019),15));
    zext_ln1494_2_fu_2278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_2_fu_2260_p2),15));
    zext_ln1494_3_fu_2355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_3_fu_2337_p2),15));
    zext_ln1494_fu_2020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1118_reg_2996),15));
    zext_ln18_fu_1464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1454_p4),64));
    zext_ln321_1_fu_2108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1408_p4),64));
    zext_ln321_2_fu_1735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1418_p4),64));
    zext_ln321_3_fu_2220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1418_p4),64));
    zext_ln321_4_fu_2226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1428_p4),64));
    zext_ln321_5_fu_2499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln321_5_reg_3120),64));
    zext_ln321_6_fu_2303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1438_p4),64));
    zext_ln321_7_fu_2597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln321_7_reg_3135),64));
    zext_ln321_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1408_p4),64));
    zext_ln703_1_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_4_fu_1657_p4),8));
    zext_ln703_2_fu_1806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_1_fu_1796_p4),8));
    zext_ln703_3_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_5_fu_1782_p4),8));
    zext_ln703_4_fu_2242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_2_reg_3054),8));
    zext_ln703_5_fu_2245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_6_reg_3047),8));
    zext_ln703_6_fu_2319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_3_reg_3086),8));
    zext_ln703_7_fu_2322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1333_7_reg_3079),8));
    zext_ln703_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_1671_p4),8));
end behav;
