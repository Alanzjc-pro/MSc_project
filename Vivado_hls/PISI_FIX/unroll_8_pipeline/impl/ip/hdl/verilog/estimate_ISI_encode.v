// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="estimate_ISI_encode,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.242500,HLS_SYN_LAT=34,HLS_SYN_TPT=none,HLS_SYN_MEM=52,HLS_SYN_DSP=0,HLS_SYN_FF=2932,HLS_SYN_LUT=3969,HLS_VERSION=2019_1}" *)

module estimate_ISI_encode (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_state7 = 10'd8;
parameter    ap_ST_fsm_state8 = 10'd16;
parameter    ap_ST_fsm_state9 = 10'd32;
parameter    ap_ST_fsm_state10 = 10'd64;
parameter    ap_ST_fsm_state11 = 10'd128;
parameter    ap_ST_fsm_state12 = 10'd256;
parameter    ap_ST_fsm_state13 = 10'd512;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [3:0] inputs_0_address0;
reg    inputs_0_ce0;
wire   [31:0] inputs_0_q0;
wire   [3:0] inputs_1_address0;
reg    inputs_1_ce0;
wire   [31:0] inputs_1_q0;
wire   [3:0] inputs_2_address0;
reg    inputs_2_ce0;
wire   [31:0] inputs_2_q0;
wire   [3:0] inputs_3_address0;
reg    inputs_3_ce0;
wire   [31:0] inputs_3_q0;
wire   [3:0] inputs_4_address0;
reg    inputs_4_ce0;
wire   [31:0] inputs_4_q0;
wire   [3:0] inputs_5_address0;
reg    inputs_5_ce0;
wire   [31:0] inputs_5_q0;
wire   [3:0] inputs_6_address0;
reg    inputs_6_ce0;
wire   [31:0] inputs_6_q0;
wire   [3:0] inputs_7_address0;
reg    inputs_7_ce0;
wire   [31:0] inputs_7_q0;
reg   [3:0] rem_0_address0;
reg    rem_0_ce0;
reg    rem_0_we0;
wire   [31:0] rem_0_d0;
wire   [31:0] rem_0_q0;
reg   [3:0] rem_1_address0;
reg    rem_1_ce0;
reg    rem_1_we0;
wire   [31:0] rem_1_d0;
wire   [31:0] rem_1_q0;
reg   [3:0] rem_2_address0;
reg    rem_2_ce0;
reg    rem_2_we0;
wire   [31:0] rem_2_d0;
wire   [31:0] rem_2_q0;
reg   [3:0] rem_3_address0;
reg    rem_3_ce0;
reg    rem_3_we0;
wire   [31:0] rem_3_d0;
wire   [31:0] rem_3_q0;
reg   [3:0] rem_4_address0;
reg    rem_4_ce0;
reg    rem_4_we0;
wire   [31:0] rem_4_d0;
wire   [31:0] rem_4_q0;
reg   [3:0] rem_5_address0;
reg    rem_5_ce0;
reg    rem_5_we0;
wire   [31:0] rem_5_d0;
wire   [31:0] rem_5_q0;
reg   [3:0] rem_6_address0;
reg    rem_6_ce0;
reg    rem_6_we0;
wire   [31:0] rem_6_d0;
wire   [31:0] rem_6_q0;
reg   [3:0] rem_7_address0;
reg    rem_7_ce0;
reg    rem_7_we0;
wire   [31:0] rem_7_d0;
wire   [31:0] rem_7_q0;
reg   [0:0] output_0_address0;
reg    output_0_ce0;
reg    output_0_we0;
reg   [31:0] output_0_d0;
reg   [0:0] output_1_address0;
reg    output_1_ce0;
reg    output_1_we0;
reg   [31:0] output_1_d0;
reg   [0:0] output_2_address0;
reg    output_2_ce0;
reg    output_2_we0;
reg   [31:0] output_2_d0;
reg   [0:0] output_3_address0;
reg    output_3_ce0;
reg    output_3_we0;
reg   [31:0] output_3_d0;
wire   [0:0] output_4_address0;
reg    output_4_ce0;
reg    output_4_we0;
wire   [31:0] output_4_d0;
wire   [0:0] output_5_address0;
reg    output_5_ce0;
reg    output_5_we0;
wire   [31:0] output_5_d0;
wire   [0:0] output_6_address0;
reg    output_6_ce0;
reg    output_6_we0;
wire   [31:0] output_6_d0;
wire   [0:0] output_7_address0;
reg    output_7_ce0;
reg    output_7_we0;
wire   [31:0] output_7_d0;
reg   [6:0] j_0_0_reg_1534;
wire   [0:0] icmp_ln17_fu_1545_p2;
reg   [0:0] icmp_ln17_reg_3787;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln18_fu_1561_p1;
reg   [63:0] zext_ln18_reg_3791;
reg   [63:0] zext_ln18_reg_3791_pp0_iter1_reg;
wire   [6:0] add_ln17_fu_1573_p2;
reg   [6:0] add_ln17_reg_3859;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] trunc_ln301_fu_1579_p1;
reg   [0:0] trunc_ln301_reg_3864;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] trunc_ln301_reg_3864_pp0_iter1_reg;
wire   [0:0] tmp_19_fu_1583_p3;
reg   [0:0] tmp_19_reg_3868;
reg   [0:0] tmp_19_reg_3868_pp0_iter1_reg;
reg   [18:0] tmp_16_reg_3872;
reg   [18:0] tmp_16_reg_3872_pp0_iter1_reg;
reg   [3:0] rem_0_addr_reg_3877;
reg   [3:0] rem_0_addr_reg_3877_pp0_iter1_reg;
reg   [10:0] tmp_18_reg_3882;
wire   [0:0] trunc_ln301_1_fu_1611_p1;
reg   [0:0] trunc_ln301_1_reg_3887;
reg   [0:0] trunc_ln301_1_reg_3887_pp0_iter1_reg;
wire   [0:0] tmp_23_fu_1615_p3;
reg   [0:0] tmp_23_reg_3891;
reg   [0:0] tmp_23_reg_3891_pp0_iter1_reg;
reg   [18:0] tmp_20_reg_3895;
reg   [18:0] tmp_20_reg_3895_pp0_iter1_reg;
reg   [3:0] rem_1_addr_reg_3900;
reg   [3:0] rem_1_addr_reg_3900_pp0_iter1_reg;
reg   [10:0] tmp_22_reg_3905;
wire   [0:0] trunc_ln301_2_fu_1643_p1;
reg   [0:0] trunc_ln301_2_reg_3910;
reg   [0:0] trunc_ln301_2_reg_3910_pp0_iter1_reg;
wire   [0:0] tmp_27_fu_1647_p3;
reg   [0:0] tmp_27_reg_3914;
reg   [0:0] tmp_27_reg_3914_pp0_iter1_reg;
reg   [18:0] tmp_24_reg_3918;
reg   [18:0] tmp_24_reg_3918_pp0_iter1_reg;
reg   [3:0] rem_2_addr_reg_3923;
reg   [3:0] rem_2_addr_reg_3923_pp0_iter1_reg;
reg   [10:0] tmp_26_reg_3928;
wire   [0:0] trunc_ln301_3_fu_1675_p1;
reg   [0:0] trunc_ln301_3_reg_3933;
reg   [0:0] trunc_ln301_3_reg_3933_pp0_iter1_reg;
wire   [0:0] tmp_31_fu_1679_p3;
reg   [0:0] tmp_31_reg_3937;
reg   [0:0] tmp_31_reg_3937_pp0_iter1_reg;
reg   [18:0] tmp_28_reg_3941;
reg   [18:0] tmp_28_reg_3941_pp0_iter1_reg;
reg   [3:0] rem_3_addr_reg_3946;
reg   [3:0] rem_3_addr_reg_3946_pp0_iter1_reg;
reg   [10:0] tmp_30_reg_3951;
wire   [0:0] trunc_ln301_4_fu_1707_p1;
reg   [0:0] trunc_ln301_4_reg_3956;
reg   [0:0] trunc_ln301_4_reg_3956_pp0_iter1_reg;
wire   [0:0] tmp_35_fu_1711_p3;
reg   [0:0] tmp_35_reg_3960;
reg   [0:0] tmp_35_reg_3960_pp0_iter1_reg;
reg   [18:0] tmp_32_reg_3964;
reg   [18:0] tmp_32_reg_3964_pp0_iter1_reg;
reg   [3:0] rem_4_addr_reg_3969;
reg   [3:0] rem_4_addr_reg_3969_pp0_iter1_reg;
reg   [10:0] tmp_34_reg_3974;
wire   [0:0] trunc_ln301_5_fu_1739_p1;
reg   [0:0] trunc_ln301_5_reg_3979;
reg   [0:0] trunc_ln301_5_reg_3979_pp0_iter1_reg;
wire   [0:0] tmp_39_fu_1743_p3;
reg   [0:0] tmp_39_reg_3983;
reg   [0:0] tmp_39_reg_3983_pp0_iter1_reg;
reg   [18:0] tmp_36_reg_3987;
reg   [18:0] tmp_36_reg_3987_pp0_iter1_reg;
reg   [3:0] rem_5_addr_reg_3992;
reg   [3:0] rem_5_addr_reg_3992_pp0_iter1_reg;
reg   [10:0] tmp_38_reg_3997;
wire   [0:0] trunc_ln301_6_fu_1771_p1;
reg   [0:0] trunc_ln301_6_reg_4002;
reg   [0:0] trunc_ln301_6_reg_4002_pp0_iter1_reg;
wire   [0:0] tmp_43_fu_1775_p3;
reg   [0:0] tmp_43_reg_4006;
reg   [0:0] tmp_43_reg_4006_pp0_iter1_reg;
reg   [18:0] tmp_40_reg_4010;
reg   [18:0] tmp_40_reg_4010_pp0_iter1_reg;
reg   [3:0] rem_6_addr_reg_4015;
reg   [3:0] rem_6_addr_reg_4015_pp0_iter1_reg;
reg   [10:0] tmp_42_reg_4020;
wire   [0:0] trunc_ln301_7_fu_1803_p1;
reg   [0:0] trunc_ln301_7_reg_4025;
reg   [0:0] trunc_ln301_7_reg_4025_pp0_iter1_reg;
wire   [0:0] tmp_47_fu_1807_p3;
reg   [0:0] tmp_47_reg_4029;
reg   [0:0] tmp_47_reg_4029_pp0_iter1_reg;
reg   [18:0] tmp_44_reg_4033;
reg   [18:0] tmp_44_reg_4033_pp0_iter1_reg;
reg   [3:0] rem_7_addr_reg_4038;
reg   [3:0] rem_7_addr_reg_4038_pp0_iter1_reg;
reg   [10:0] tmp_46_reg_4043;
wire   [11:0] sub_ln731_fu_1864_p2;
reg   [11:0] sub_ln731_reg_4048;
wire   [7:0] sub_ln1193_fu_1902_p2;
reg   [7:0] sub_ln1193_reg_4053;
wire   [13:0] mul_ln1118_fu_1916_p2;
reg   [13:0] mul_ln1118_reg_4058;
wire   [11:0] sub_ln703_1_fu_1932_p2;
reg   [11:0] sub_ln703_1_reg_4063;
wire   [11:0] sub_ln731_1_fu_1967_p2;
reg   [11:0] sub_ln731_1_reg_4068;
wire   [7:0] sub_ln1193_1_fu_2005_p2;
reg   [7:0] sub_ln1193_1_reg_4073;
wire   [13:0] mul_ln1118_1_fu_2019_p2;
reg   [13:0] mul_ln1118_1_reg_4078;
wire   [11:0] sub_ln703_3_fu_2035_p2;
reg   [11:0] sub_ln703_3_reg_4083;
wire   [11:0] sub_ln731_2_fu_2070_p2;
reg   [11:0] sub_ln731_2_reg_4088;
wire   [7:0] sub_ln1193_2_fu_2108_p2;
reg   [7:0] sub_ln1193_2_reg_4093;
wire   [13:0] mul_ln1118_2_fu_2122_p2;
reg   [13:0] mul_ln1118_2_reg_4098;
wire   [11:0] sub_ln703_5_fu_2138_p2;
reg   [11:0] sub_ln703_5_reg_4103;
wire   [11:0] sub_ln731_3_fu_2173_p2;
reg   [11:0] sub_ln731_3_reg_4108;
wire   [7:0] sub_ln1193_3_fu_2211_p2;
reg   [7:0] sub_ln1193_3_reg_4113;
wire   [13:0] mul_ln1118_3_fu_2225_p2;
reg   [13:0] mul_ln1118_3_reg_4118;
wire   [11:0] sub_ln703_7_fu_2241_p2;
reg   [11:0] sub_ln703_7_reg_4123;
reg   [9:0] tmp_33_reg_4128;
wire   [11:0] sub_ln731_4_fu_2268_p2;
reg   [11:0] sub_ln731_4_reg_4133;
reg   [6:0] trunc_ln1333_11_reg_4138;
reg   [6:0] trunc_ln1333_4_reg_4145;
reg   [9:0] tmp_37_reg_4152;
wire   [11:0] sub_ln731_5_fu_2315_p2;
reg   [11:0] sub_ln731_5_reg_4157;
reg   [6:0] trunc_ln1333_12_reg_4162;
reg   [6:0] trunc_ln1333_5_reg_4169;
reg   [9:0] tmp_41_reg_4176;
wire   [11:0] sub_ln731_6_fu_2362_p2;
reg   [11:0] sub_ln731_6_reg_4181;
reg   [6:0] trunc_ln1333_13_reg_4186;
reg   [6:0] trunc_ln1333_6_reg_4193;
reg   [9:0] tmp_45_reg_4200;
wire   [11:0] sub_ln731_7_fu_2409_p2;
reg   [11:0] sub_ln731_7_reg_4205;
reg   [6:0] trunc_ln1333_14_reg_4210;
reg   [6:0] trunc_ln1333_7_reg_4217;
reg   [9:0] tmp_1_reg_4224;
reg   [9:0] tmp_3_reg_4229;
reg   [9:0] tmp_5_reg_4234;
reg   [9:0] tmp_7_reg_4239;
wire   [0:0] icmp_ln1494_4_fu_2881_p2;
reg   [0:0] icmp_ln1494_4_reg_4244;
wire   [11:0] sub_ln703_9_fu_2896_p2;
reg   [11:0] sub_ln703_9_reg_4249;
wire   [0:0] icmp_ln1494_5_fu_2952_p2;
reg   [0:0] icmp_ln1494_5_reg_4254;
wire   [11:0] sub_ln703_11_fu_2967_p2;
reg   [11:0] sub_ln703_11_reg_4259;
wire   [0:0] icmp_ln1494_6_fu_3023_p2;
reg   [0:0] icmp_ln1494_6_reg_4264;
wire   [11:0] sub_ln703_13_fu_3038_p2;
reg   [11:0] sub_ln703_13_reg_4269;
wire   [0:0] icmp_ln1494_7_fu_3094_p2;
reg   [0:0] icmp_ln1494_7_reg_4274;
wire   [11:0] sub_ln703_15_fu_3109_p2;
reg   [11:0] sub_ln703_15_reg_4279;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] ISIquan_0_V_address0;
reg    ISIquan_0_V_ce0;
reg    ISIquan_0_V_we0;
wire   [3:0] ISIquan_0_V_q0;
reg   [3:0] ISIquan_0_V_address1;
reg    ISIquan_0_V_ce1;
reg    ISIquan_0_V_we1;
wire   [3:0] ISIquan_0_V_d1;
wire   [3:0] ISIquan_0_V_q1;
reg   [3:0] ISIquan_1_V_address0;
reg    ISIquan_1_V_ce0;
reg    ISIquan_1_V_we0;
wire   [3:0] ISIquan_1_V_q0;
reg   [3:0] ISIquan_1_V_address1;
reg    ISIquan_1_V_ce1;
reg    ISIquan_1_V_we1;
wire   [3:0] ISIquan_1_V_d1;
wire   [3:0] ISIquan_1_V_q1;
reg   [3:0] ISIquan_2_V_address0;
reg    ISIquan_2_V_ce0;
reg    ISIquan_2_V_we0;
wire   [3:0] ISIquan_2_V_q0;
reg   [3:0] ISIquan_2_V_address1;
reg    ISIquan_2_V_ce1;
reg    ISIquan_2_V_we1;
wire   [3:0] ISIquan_2_V_d1;
wire   [3:0] ISIquan_2_V_q1;
reg   [3:0] ISIquan_3_V_address0;
reg    ISIquan_3_V_ce0;
reg    ISIquan_3_V_we0;
wire   [3:0] ISIquan_3_V_q0;
reg   [3:0] ISIquan_3_V_address1;
reg    ISIquan_3_V_ce1;
reg    ISIquan_3_V_we1;
wire   [3:0] ISIquan_3_V_d1;
wire   [3:0] ISIquan_3_V_q1;
reg   [3:0] ISIquan_4_V_address0;
reg    ISIquan_4_V_ce0;
reg    ISIquan_4_V_we0;
reg   [3:0] ISIquan_4_V_d0;
wire   [3:0] ISIquan_4_V_q0;
reg   [3:0] ISIquan_4_V_address1;
reg    ISIquan_4_V_ce1;
wire   [3:0] ISIquan_4_V_q1;
reg   [3:0] ISIquan_5_V_address0;
reg    ISIquan_5_V_ce0;
reg    ISIquan_5_V_we0;
reg   [3:0] ISIquan_5_V_d0;
wire   [3:0] ISIquan_5_V_q0;
reg   [3:0] ISIquan_5_V_address1;
reg    ISIquan_5_V_ce1;
wire   [3:0] ISIquan_5_V_q1;
reg   [3:0] ISIquan_6_V_address0;
reg    ISIquan_6_V_ce0;
reg    ISIquan_6_V_we0;
reg   [3:0] ISIquan_6_V_d0;
wire   [3:0] ISIquan_6_V_q0;
reg   [3:0] ISIquan_6_V_address1;
reg    ISIquan_6_V_ce1;
wire   [3:0] ISIquan_6_V_q1;
reg   [3:0] ISIquan_7_V_address0;
reg    ISIquan_7_V_ce0;
reg    ISIquan_7_V_we0;
reg   [3:0] ISIquan_7_V_d0;
wire   [3:0] ISIquan_7_V_q0;
reg   [3:0] ISIquan_7_V_address1;
reg    ISIquan_7_V_ce1;
wire   [3:0] ISIquan_7_V_q1;
reg   [6:0] ap_phi_mux_j_0_0_phi_fu_1538_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_state13;
wire   [3:0] ISI_q_V_4_fu_3250_p3;
wire   [3:0] ISI_q_V_5_fu_3342_p3;
wire   [3:0] ISI_q_V_6_fu_3434_p3;
wire   [3:0] ISI_q_V_7_fu_3526_p3;
wire   [31:0] or_ln50_6_fu_3535_p9;
wire   [31:0] or_ln50_6_8_fu_3703_p9;
wire   [31:0] or_ln50_6_1_fu_3556_p9;
wire   [31:0] or_ln50_6_9_fu_3724_p9;
wire   [31:0] or_ln50_6_2_fu_3577_p9;
wire   [31:0] or_ln50_6_s_fu_3745_p9;
wire   [31:0] or_ln50_6_3_fu_3598_p9;
wire   [31:0] or_ln50_6_10_fu_3766_p9;
wire   [3:0] lshr_ln_fu_1551_p4;
wire   [9:0] tmp_17_fu_1835_p4;
wire   [11:0] and_ln731_1_fu_1853_p3;
wire   [11:0] trunc_ln731_fu_1860_p1;
wire   [6:0] trunc_ln1333_8_fu_1870_p4;
wire   [6:0] trunc_ln1_fu_1884_p4;
wire   [7:0] zext_ln703_fu_1894_p1;
wire   [7:0] zext_ln703_1_fu_1898_p1;
wire   [6:0] mul_ln1118_fu_1916_p0;
wire   [6:0] mul_ln1118_fu_1916_p1;
wire   [11:0] and_ln_fu_1845_p3;
wire   [11:0] zext_ln1333_fu_1922_p1;
wire   [11:0] sub_ln703_fu_1926_p2;
wire   [11:0] zext_ln1333_8_fu_1880_p1;
wire   [9:0] tmp_21_fu_1938_p4;
wire   [11:0] and_ln731_3_fu_1956_p3;
wire   [11:0] trunc_ln731_1_fu_1963_p1;
wire   [6:0] trunc_ln1333_9_fu_1973_p4;
wire   [6:0] trunc_ln1333_1_fu_1987_p4;
wire   [7:0] zext_ln703_2_fu_1997_p1;
wire   [7:0] zext_ln703_3_fu_2001_p1;
wire   [6:0] mul_ln1118_1_fu_2019_p0;
wire   [6:0] mul_ln1118_1_fu_2019_p1;
wire   [11:0] and_ln731_2_fu_1948_p3;
wire   [11:0] zext_ln1333_1_fu_2025_p1;
wire   [11:0] sub_ln703_2_fu_2029_p2;
wire   [11:0] zext_ln1333_9_fu_1983_p1;
wire   [9:0] tmp_25_fu_2041_p4;
wire   [11:0] and_ln731_5_fu_2059_p3;
wire   [11:0] trunc_ln731_2_fu_2066_p1;
wire   [6:0] trunc_ln1333_s_fu_2076_p4;
wire   [6:0] trunc_ln1333_2_fu_2090_p4;
wire   [7:0] zext_ln703_4_fu_2100_p1;
wire   [7:0] zext_ln703_5_fu_2104_p1;
wire   [6:0] mul_ln1118_2_fu_2122_p0;
wire   [6:0] mul_ln1118_2_fu_2122_p1;
wire   [11:0] and_ln731_4_fu_2051_p3;
wire   [11:0] zext_ln1333_2_fu_2128_p1;
wire   [11:0] sub_ln703_4_fu_2132_p2;
wire   [11:0] zext_ln1333_10_fu_2086_p1;
wire   [9:0] tmp_29_fu_2144_p4;
wire   [11:0] and_ln731_7_fu_2162_p3;
wire   [11:0] trunc_ln731_3_fu_2169_p1;
wire   [6:0] trunc_ln1333_10_fu_2179_p4;
wire   [6:0] trunc_ln1333_3_fu_2193_p4;
wire   [7:0] zext_ln703_6_fu_2203_p1;
wire   [7:0] zext_ln703_7_fu_2207_p1;
wire   [6:0] mul_ln1118_3_fu_2225_p0;
wire   [6:0] mul_ln1118_3_fu_2225_p1;
wire   [11:0] and_ln731_6_fu_2154_p3;
wire   [11:0] zext_ln1333_3_fu_2231_p1;
wire   [11:0] sub_ln703_6_fu_2235_p2;
wire   [11:0] zext_ln1333_11_fu_2189_p1;
wire   [11:0] and_ln731_9_fu_2257_p3;
wire   [11:0] trunc_ln731_4_fu_2264_p1;
wire   [11:0] and_ln731_10_fu_2304_p3;
wire   [11:0] trunc_ln731_5_fu_2311_p1;
wire   [11:0] and_ln731_12_fu_2351_p3;
wire   [11:0] trunc_ln731_6_fu_2358_p1;
wire   [11:0] and_ln731_14_fu_2398_p3;
wire   [11:0] trunc_ln731_7_fu_2405_p1;
wire   [9:0] shl_ln1_fu_2440_p3;
wire  signed [14:0] sext_ln1494_fu_2447_p1;
wire   [14:0] zext_ln1494_fu_2451_p1;
wire   [0:0] icmp_ln1494_fu_2454_p2;
wire   [11:0] shl_ln731_fu_2435_p2;
wire   [11:0] select_ln1494_fu_2460_p3;
wire   [0:0] icmp_ln1495_fu_2477_p2;
wire   [0:0] icmp_ln1497_fu_2483_p2;
wire   [0:0] xor_ln1495_fu_2499_p2;
wire   [0:0] and_ln1497_fu_2505_p2;
wire   [0:0] or_ln1495_fu_2519_p2;
wire   [3:0] select_ln1495_fu_2511_p3;
wire   [3:0] trunc_ln_i_fu_2489_p4;
wire   [9:0] shl_ln728_1_fu_2539_p3;
wire  signed [14:0] sext_ln1494_1_fu_2546_p1;
wire   [14:0] zext_ln1494_1_fu_2550_p1;
wire   [0:0] icmp_ln1494_1_fu_2553_p2;
wire   [11:0] shl_ln731_1_fu_2534_p2;
wire   [11:0] select_ln1494_1_fu_2559_p3;
wire   [0:0] icmp_ln1495_1_fu_2576_p2;
wire   [0:0] icmp_ln1497_1_fu_2582_p2;
wire   [0:0] xor_ln1495_1_fu_2598_p2;
wire   [0:0] and_ln1497_1_fu_2604_p2;
wire   [0:0] or_ln1495_1_fu_2618_p2;
wire   [3:0] select_ln1495_2_fu_2610_p3;
wire   [3:0] trunc_ln_i3_fu_2588_p4;
wire   [9:0] shl_ln728_2_fu_2638_p3;
wire  signed [14:0] sext_ln1494_2_fu_2645_p1;
wire   [14:0] zext_ln1494_2_fu_2649_p1;
wire   [0:0] icmp_ln1494_2_fu_2652_p2;
wire   [11:0] shl_ln731_2_fu_2633_p2;
wire   [11:0] select_ln1494_2_fu_2658_p3;
wire   [0:0] icmp_ln1495_2_fu_2675_p2;
wire   [0:0] icmp_ln1497_2_fu_2681_p2;
wire   [0:0] xor_ln1495_2_fu_2697_p2;
wire   [0:0] and_ln1497_2_fu_2703_p2;
wire   [0:0] or_ln1495_2_fu_2717_p2;
wire   [3:0] select_ln1495_4_fu_2709_p3;
wire   [3:0] trunc_ln_i1_fu_2687_p4;
wire   [9:0] shl_ln728_3_fu_2737_p3;
wire  signed [14:0] sext_ln1494_3_fu_2744_p1;
wire   [14:0] zext_ln1494_3_fu_2748_p1;
wire   [0:0] icmp_ln1494_3_fu_2751_p2;
wire   [11:0] shl_ln731_3_fu_2732_p2;
wire   [11:0] select_ln1494_3_fu_2757_p3;
wire   [0:0] icmp_ln1495_3_fu_2774_p2;
wire   [0:0] icmp_ln1497_3_fu_2780_p2;
wire   [0:0] xor_ln1495_3_fu_2796_p2;
wire   [0:0] and_ln1497_3_fu_2802_p2;
wire   [0:0] or_ln1495_3_fu_2816_p2;
wire   [3:0] select_ln1495_6_fu_2808_p3;
wire   [3:0] trunc_ln_i2_fu_2786_p4;
wire   [7:0] zext_ln703_8_fu_2841_p1;
wire   [7:0] zext_ln703_9_fu_2844_p1;
wire   [6:0] mul_ln1118_4_fu_2859_p0;
wire   [6:0] mul_ln1118_4_fu_2859_p1;
wire   [7:0] sub_ln1193_4_fu_2847_p2;
wire   [9:0] shl_ln728_4_fu_2865_p3;
wire   [13:0] mul_ln1118_4_fu_2859_p2;
wire  signed [14:0] sext_ln1494_4_fu_2873_p1;
wire   [14:0] zext_ln1494_4_fu_2877_p1;
wire   [11:0] and_ln731_8_fu_2831_p3;
wire   [11:0] zext_ln1333_4_fu_2887_p1;
wire   [11:0] sub_ln703_8_fu_2890_p2;
wire   [11:0] zext_ln1333_12_fu_2838_p1;
wire   [7:0] zext_ln703_10_fu_2912_p1;
wire   [7:0] zext_ln703_11_fu_2915_p1;
wire   [6:0] mul_ln1118_5_fu_2930_p0;
wire   [6:0] mul_ln1118_5_fu_2930_p1;
wire   [7:0] sub_ln1193_5_fu_2918_p2;
wire   [9:0] shl_ln728_5_fu_2936_p3;
wire   [13:0] mul_ln1118_5_fu_2930_p2;
wire  signed [14:0] sext_ln1494_5_fu_2944_p1;
wire   [14:0] zext_ln1494_5_fu_2948_p1;
wire   [11:0] and_ln731_s_fu_2902_p3;
wire   [11:0] zext_ln1333_5_fu_2958_p1;
wire   [11:0] sub_ln703_10_fu_2961_p2;
wire   [11:0] zext_ln1333_13_fu_2909_p1;
wire   [7:0] zext_ln703_12_fu_2983_p1;
wire   [7:0] zext_ln703_13_fu_2986_p1;
wire   [6:0] mul_ln1118_6_fu_3001_p0;
wire   [6:0] mul_ln1118_6_fu_3001_p1;
wire   [7:0] sub_ln1193_6_fu_2989_p2;
wire   [9:0] shl_ln728_6_fu_3007_p3;
wire   [13:0] mul_ln1118_6_fu_3001_p2;
wire  signed [14:0] sext_ln1494_6_fu_3015_p1;
wire   [14:0] zext_ln1494_6_fu_3019_p1;
wire   [11:0] and_ln731_11_fu_2973_p3;
wire   [11:0] zext_ln1333_6_fu_3029_p1;
wire   [11:0] sub_ln703_12_fu_3032_p2;
wire   [11:0] zext_ln1333_14_fu_2980_p1;
wire   [7:0] zext_ln703_14_fu_3054_p1;
wire   [7:0] zext_ln703_15_fu_3057_p1;
wire   [6:0] mul_ln1118_7_fu_3072_p0;
wire   [6:0] mul_ln1118_7_fu_3072_p1;
wire   [7:0] sub_ln1193_7_fu_3060_p2;
wire   [9:0] shl_ln728_7_fu_3078_p3;
wire   [13:0] mul_ln1118_7_fu_3072_p2;
wire  signed [14:0] sext_ln1494_7_fu_3086_p1;
wire   [14:0] zext_ln1494_7_fu_3090_p1;
wire   [11:0] and_ln731_13_fu_3044_p3;
wire   [11:0] zext_ln1333_7_fu_3100_p1;
wire   [11:0] sub_ln703_14_fu_3103_p2;
wire   [11:0] zext_ln1333_15_fu_3051_p1;
wire   [29:0] tmp_2_fu_3115_p4;
wire   [29:0] tmp_4_fu_3128_p4;
wire   [29:0] tmp_6_fu_3141_p4;
wire   [29:0] tmp_8_fu_3154_p4;
wire   [11:0] shl_ln731_4_fu_3167_p2;
wire   [11:0] select_ln1494_4_fu_3172_p3;
wire   [9:0] tmp_9_fu_3178_p4;
wire   [29:0] tmp_s_fu_3188_p4;
wire   [0:0] icmp_ln1495_4_fu_3202_p2;
wire   [0:0] icmp_ln1497_4_fu_3208_p2;
wire   [0:0] xor_ln1495_4_fu_3224_p2;
wire   [0:0] and_ln1497_4_fu_3230_p2;
wire   [0:0] or_ln1495_4_fu_3244_p2;
wire   [3:0] select_ln1495_8_fu_3236_p3;
wire   [3:0] trunc_ln_i4_fu_3214_p4;
wire   [11:0] shl_ln731_5_fu_3259_p2;
wire   [11:0] select_ln1494_5_fu_3264_p3;
wire   [9:0] tmp_10_fu_3270_p4;
wire   [29:0] tmp_11_fu_3280_p4;
wire   [0:0] icmp_ln1495_5_fu_3294_p2;
wire   [0:0] icmp_ln1497_5_fu_3300_p2;
wire   [0:0] xor_ln1495_5_fu_3316_p2;
wire   [0:0] and_ln1497_5_fu_3322_p2;
wire   [0:0] or_ln1495_5_fu_3336_p2;
wire   [3:0] select_ln1495_10_fu_3328_p3;
wire   [3:0] trunc_ln_i5_fu_3306_p4;
wire   [11:0] shl_ln731_6_fu_3351_p2;
wire   [11:0] select_ln1494_6_fu_3356_p3;
wire   [9:0] tmp_12_fu_3362_p4;
wire   [29:0] tmp_13_fu_3372_p4;
wire   [0:0] icmp_ln1495_6_fu_3386_p2;
wire   [0:0] icmp_ln1497_6_fu_3392_p2;
wire   [0:0] xor_ln1495_6_fu_3408_p2;
wire   [0:0] and_ln1497_6_fu_3414_p2;
wire   [0:0] or_ln1495_6_fu_3428_p2;
wire   [3:0] select_ln1495_12_fu_3420_p3;
wire   [3:0] trunc_ln_i6_fu_3398_p4;
wire   [11:0] shl_ln731_7_fu_3443_p2;
wire   [11:0] select_ln1494_7_fu_3448_p3;
wire   [9:0] tmp_14_fu_3454_p4;
wire   [29:0] tmp_15_fu_3464_p4;
wire   [0:0] icmp_ln1495_7_fu_3478_p2;
wire   [0:0] icmp_ln1497_7_fu_3484_p2;
wire   [0:0] xor_ln1495_7_fu_3500_p2;
wire   [0:0] and_ln1497_7_fu_3506_p2;
wire   [0:0] or_ln1495_7_fu_3520_p2;
wire   [3:0] select_ln1495_14_fu_3512_p3;
wire   [3:0] trunc_ln_i7_fu_3490_p4;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] mul_ln1118_1_fu_2019_p00;
wire   [13:0] mul_ln1118_1_fu_2019_p10;
wire   [13:0] mul_ln1118_2_fu_2122_p00;
wire   [13:0] mul_ln1118_2_fu_2122_p10;
wire   [13:0] mul_ln1118_3_fu_2225_p00;
wire   [13:0] mul_ln1118_3_fu_2225_p10;
wire   [13:0] mul_ln1118_4_fu_2859_p00;
wire   [13:0] mul_ln1118_4_fu_2859_p10;
wire   [13:0] mul_ln1118_5_fu_2930_p00;
wire   [13:0] mul_ln1118_5_fu_2930_p10;
wire   [13:0] mul_ln1118_6_fu_3001_p00;
wire   [13:0] mul_ln1118_6_fu_3001_p10;
wire   [13:0] mul_ln1118_7_fu_3072_p00;
wire   [13:0] mul_ln1118_7_fu_3072_p10;
wire   [13:0] mul_ln1118_fu_1916_p00;
wire   [13:0] mul_ln1118_fu_1916_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

estimate_ISI_encode_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
estimate_ISI_encode_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .inputs_0_address0(inputs_0_address0),
    .inputs_0_ce0(inputs_0_ce0),
    .inputs_0_q0(inputs_0_q0),
    .inputs_1_address0(inputs_1_address0),
    .inputs_1_ce0(inputs_1_ce0),
    .inputs_1_q0(inputs_1_q0),
    .inputs_2_address0(inputs_2_address0),
    .inputs_2_ce0(inputs_2_ce0),
    .inputs_2_q0(inputs_2_q0),
    .inputs_3_address0(inputs_3_address0),
    .inputs_3_ce0(inputs_3_ce0),
    .inputs_3_q0(inputs_3_q0),
    .inputs_4_address0(inputs_4_address0),
    .inputs_4_ce0(inputs_4_ce0),
    .inputs_4_q0(inputs_4_q0),
    .inputs_5_address0(inputs_5_address0),
    .inputs_5_ce0(inputs_5_ce0),
    .inputs_5_q0(inputs_5_q0),
    .inputs_6_address0(inputs_6_address0),
    .inputs_6_ce0(inputs_6_ce0),
    .inputs_6_q0(inputs_6_q0),
    .inputs_7_address0(inputs_7_address0),
    .inputs_7_ce0(inputs_7_ce0),
    .inputs_7_q0(inputs_7_q0),
    .rem_0_address0(rem_0_address0),
    .rem_0_ce0(rem_0_ce0),
    .rem_0_we0(rem_0_we0),
    .rem_0_d0(rem_0_d0),
    .rem_0_q0(rem_0_q0),
    .rem_1_address0(rem_1_address0),
    .rem_1_ce0(rem_1_ce0),
    .rem_1_we0(rem_1_we0),
    .rem_1_d0(rem_1_d0),
    .rem_1_q0(rem_1_q0),
    .rem_2_address0(rem_2_address0),
    .rem_2_ce0(rem_2_ce0),
    .rem_2_we0(rem_2_we0),
    .rem_2_d0(rem_2_d0),
    .rem_2_q0(rem_2_q0),
    .rem_3_address0(rem_3_address0),
    .rem_3_ce0(rem_3_ce0),
    .rem_3_we0(rem_3_we0),
    .rem_3_d0(rem_3_d0),
    .rem_3_q0(rem_3_q0),
    .rem_4_address0(rem_4_address0),
    .rem_4_ce0(rem_4_ce0),
    .rem_4_we0(rem_4_we0),
    .rem_4_d0(rem_4_d0),
    .rem_4_q0(rem_4_q0),
    .rem_5_address0(rem_5_address0),
    .rem_5_ce0(rem_5_ce0),
    .rem_5_we0(rem_5_we0),
    .rem_5_d0(rem_5_d0),
    .rem_5_q0(rem_5_q0),
    .rem_6_address0(rem_6_address0),
    .rem_6_ce0(rem_6_ce0),
    .rem_6_we0(rem_6_we0),
    .rem_6_d0(rem_6_d0),
    .rem_6_q0(rem_6_q0),
    .rem_7_address0(rem_7_address0),
    .rem_7_ce0(rem_7_ce0),
    .rem_7_we0(rem_7_we0),
    .rem_7_d0(rem_7_d0),
    .rem_7_q0(rem_7_q0),
    .output_0_address0(output_0_address0),
    .output_0_ce0(output_0_ce0),
    .output_0_we0(output_0_we0),
    .output_0_d0(output_0_d0),
    .output_1_address0(output_1_address0),
    .output_1_ce0(output_1_ce0),
    .output_1_we0(output_1_we0),
    .output_1_d0(output_1_d0),
    .output_2_address0(output_2_address0),
    .output_2_ce0(output_2_ce0),
    .output_2_we0(output_2_we0),
    .output_2_d0(output_2_d0),
    .output_3_address0(output_3_address0),
    .output_3_ce0(output_3_ce0),
    .output_3_we0(output_3_we0),
    .output_3_d0(output_3_d0),
    .output_4_address0(output_4_address0),
    .output_4_ce0(output_4_ce0),
    .output_4_we0(output_4_we0),
    .output_4_d0(output_4_d0),
    .output_5_address0(output_5_address0),
    .output_5_ce0(output_5_ce0),
    .output_5_we0(output_5_we0),
    .output_5_d0(output_5_d0),
    .output_6_address0(output_6_address0),
    .output_6_ce0(output_6_ce0),
    .output_6_we0(output_6_we0),
    .output_6_d0(output_6_d0),
    .output_7_address0(output_7_address0),
    .output_7_ce0(output_7_ce0),
    .output_7_we0(output_7_we0),
    .output_7_d0(output_7_d0)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_0_V_address0),
    .ce0(ISIquan_0_V_ce0),
    .we0(ISIquan_0_V_we0),
    .d0(4'd15),
    .q0(ISIquan_0_V_q0),
    .address1(ISIquan_0_V_address1),
    .ce1(ISIquan_0_V_ce1),
    .we1(ISIquan_0_V_we1),
    .d1(ISIquan_0_V_d1),
    .q1(ISIquan_0_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_1_V_address0),
    .ce0(ISIquan_1_V_ce0),
    .we0(ISIquan_1_V_we0),
    .d0(4'd15),
    .q0(ISIquan_1_V_q0),
    .address1(ISIquan_1_V_address1),
    .ce1(ISIquan_1_V_ce1),
    .we1(ISIquan_1_V_we1),
    .d1(ISIquan_1_V_d1),
    .q1(ISIquan_1_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_2_V_address0),
    .ce0(ISIquan_2_V_ce0),
    .we0(ISIquan_2_V_we0),
    .d0(4'd15),
    .q0(ISIquan_2_V_q0),
    .address1(ISIquan_2_V_address1),
    .ce1(ISIquan_2_V_ce1),
    .we1(ISIquan_2_V_we1),
    .d1(ISIquan_2_V_d1),
    .q1(ISIquan_2_V_q1)
);

estimate_ISI_encode_ISIquan_0_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_3_V_address0),
    .ce0(ISIquan_3_V_ce0),
    .we0(ISIquan_3_V_we0),
    .d0(4'd15),
    .q0(ISIquan_3_V_q0),
    .address1(ISIquan_3_V_address1),
    .ce1(ISIquan_3_V_ce1),
    .we1(ISIquan_3_V_we1),
    .d1(ISIquan_3_V_d1),
    .q1(ISIquan_3_V_q1)
);

estimate_ISI_encode_ISIquan_4_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_4_V_address0),
    .ce0(ISIquan_4_V_ce0),
    .we0(ISIquan_4_V_we0),
    .d0(ISIquan_4_V_d0),
    .q0(ISIquan_4_V_q0),
    .address1(ISIquan_4_V_address1),
    .ce1(ISIquan_4_V_ce1),
    .q1(ISIquan_4_V_q1)
);

estimate_ISI_encode_ISIquan_4_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_5_V_address0),
    .ce0(ISIquan_5_V_ce0),
    .we0(ISIquan_5_V_we0),
    .d0(ISIquan_5_V_d0),
    .q0(ISIquan_5_V_q0),
    .address1(ISIquan_5_V_address1),
    .ce1(ISIquan_5_V_ce1),
    .q1(ISIquan_5_V_q1)
);

estimate_ISI_encode_ISIquan_4_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_6_V_address0),
    .ce0(ISIquan_6_V_ce0),
    .we0(ISIquan_6_V_we0),
    .d0(ISIquan_6_V_d0),
    .q0(ISIquan_6_V_q0),
    .address1(ISIquan_6_V_address1),
    .ce1(ISIquan_6_V_ce1),
    .q1(ISIquan_6_V_q1)
);

estimate_ISI_encode_ISIquan_4_V #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ISIquan_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ISIquan_7_V_address0),
    .ce0(ISIquan_7_V_ce0),
    .we0(ISIquan_7_V_we0),
    .d0(ISIquan_7_V_d0),
    .q0(ISIquan_7_V_q0),
    .address1(ISIquan_7_V_address1),
    .ce1(ISIquan_7_V_ce1),
    .q1(ISIquan_7_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_reg_3787 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_0_reg_1534 <= add_ln17_reg_3859;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_0_0_reg_1534 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_fu_1545_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln17_reg_3859 <= add_ln17_fu_1573_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_35_reg_3960 == 1'd1) & (trunc_ln301_4_reg_3956 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1494_4_reg_4244 <= icmp_ln1494_4_fu_2881_p2;
        sub_ln703_9_reg_4249 <= sub_ln703_9_fu_2896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_reg_3983 == 1'd1) & (trunc_ln301_5_reg_3979 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1494_5_reg_4254 <= icmp_ln1494_5_fu_2952_p2;
        sub_ln703_11_reg_4259 <= sub_ln703_11_fu_2967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_43_reg_4006 == 1'd1) & (trunc_ln301_6_reg_4002 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1494_6_reg_4264 <= icmp_ln1494_6_fu_3023_p2;
        sub_ln703_13_reg_4269 <= sub_ln703_13_fu_3038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_47_reg_4029 == 1'd1) & (trunc_ln301_7_reg_4025 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1494_7_reg_4274 <= icmp_ln1494_7_fu_3094_p2;
        sub_ln703_15_reg_4279 <= sub_ln703_15_fu_3109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln17_reg_3787 <= icmp_ln17_fu_1545_p2;
        zext_ln18_reg_3791_pp0_iter1_reg[3 : 0] <= zext_ln18_reg_3791[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_reg_3891 == 1'd1) & (trunc_ln301_1_reg_3887 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1118_1_reg_4078 <= mul_ln1118_1_fu_2019_p2;
        sub_ln1193_1_reg_4073 <= sub_ln1193_1_fu_2005_p2;
        sub_ln703_3_reg_4083 <= sub_ln703_3_fu_2035_p2;
        sub_ln731_1_reg_4068 <= sub_ln731_1_fu_1967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_27_reg_3914 == 1'd1) & (trunc_ln301_2_reg_3910 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1118_2_reg_4098 <= mul_ln1118_2_fu_2122_p2;
        sub_ln1193_2_reg_4093 <= sub_ln1193_2_fu_2108_p2;
        sub_ln703_5_reg_4103 <= sub_ln703_5_fu_2138_p2;
        sub_ln731_2_reg_4088 <= sub_ln731_2_fu_2070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_reg_3937 == 1'd1) & (trunc_ln301_3_reg_3933 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1118_3_reg_4118 <= mul_ln1118_3_fu_2225_p2;
        sub_ln1193_3_reg_4113 <= sub_ln1193_3_fu_2211_p2;
        sub_ln703_7_reg_4123 <= sub_ln703_7_fu_2241_p2;
        sub_ln731_3_reg_4108 <= sub_ln731_3_fu_2173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_reg_3868 == 1'd1) & (trunc_ln301_reg_3864 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1118_reg_4058 <= mul_ln1118_fu_1916_p2;
        sub_ln1193_reg_4053 <= sub_ln1193_fu_1902_p2;
        sub_ln703_1_reg_4063 <= sub_ln703_1_fu_1932_p2;
        sub_ln731_reg_4048 <= sub_ln731_fu_1864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_fu_1583_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_fu_1579_p1 == 1'd1) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_0_addr_reg_3877 <= zext_ln18_reg_3791;
        tmp_16_reg_3872 <= {{inputs_0_q0[21:3]}};
        tmp_18_reg_3882 <= {{inputs_0_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_0_addr_reg_3877_pp0_iter1_reg <= rem_0_addr_reg_3877;
        rem_1_addr_reg_3900_pp0_iter1_reg <= rem_1_addr_reg_3900;
        rem_2_addr_reg_3923_pp0_iter1_reg <= rem_2_addr_reg_3923;
        rem_3_addr_reg_3946_pp0_iter1_reg <= rem_3_addr_reg_3946;
        rem_4_addr_reg_3969_pp0_iter1_reg <= rem_4_addr_reg_3969;
        rem_5_addr_reg_3992_pp0_iter1_reg <= rem_5_addr_reg_3992;
        rem_6_addr_reg_4015_pp0_iter1_reg <= rem_6_addr_reg_4015;
        rem_7_addr_reg_4038_pp0_iter1_reg <= rem_7_addr_reg_4038;
        tmp_16_reg_3872_pp0_iter1_reg <= tmp_16_reg_3872;
        tmp_19_reg_3868_pp0_iter1_reg <= tmp_19_reg_3868;
        tmp_20_reg_3895_pp0_iter1_reg <= tmp_20_reg_3895;
        tmp_23_reg_3891_pp0_iter1_reg <= tmp_23_reg_3891;
        tmp_24_reg_3918_pp0_iter1_reg <= tmp_24_reg_3918;
        tmp_27_reg_3914_pp0_iter1_reg <= tmp_27_reg_3914;
        tmp_28_reg_3941_pp0_iter1_reg <= tmp_28_reg_3941;
        tmp_31_reg_3937_pp0_iter1_reg <= tmp_31_reg_3937;
        tmp_32_reg_3964_pp0_iter1_reg <= tmp_32_reg_3964;
        tmp_35_reg_3960_pp0_iter1_reg <= tmp_35_reg_3960;
        tmp_36_reg_3987_pp0_iter1_reg <= tmp_36_reg_3987;
        tmp_39_reg_3983_pp0_iter1_reg <= tmp_39_reg_3983;
        tmp_40_reg_4010_pp0_iter1_reg <= tmp_40_reg_4010;
        tmp_43_reg_4006_pp0_iter1_reg <= tmp_43_reg_4006;
        tmp_44_reg_4033_pp0_iter1_reg <= tmp_44_reg_4033;
        tmp_47_reg_4029_pp0_iter1_reg <= tmp_47_reg_4029;
        trunc_ln301_1_reg_3887_pp0_iter1_reg <= trunc_ln301_1_reg_3887;
        trunc_ln301_2_reg_3910_pp0_iter1_reg <= trunc_ln301_2_reg_3910;
        trunc_ln301_3_reg_3933_pp0_iter1_reg <= trunc_ln301_3_reg_3933;
        trunc_ln301_4_reg_3956_pp0_iter1_reg <= trunc_ln301_4_reg_3956;
        trunc_ln301_5_reg_3979_pp0_iter1_reg <= trunc_ln301_5_reg_3979;
        trunc_ln301_6_reg_4002_pp0_iter1_reg <= trunc_ln301_6_reg_4002;
        trunc_ln301_7_reg_4025_pp0_iter1_reg <= trunc_ln301_7_reg_4025;
        trunc_ln301_reg_3864_pp0_iter1_reg <= trunc_ln301_reg_3864;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_fu_1615_p3 == 1'd1) & (trunc_ln301_1_fu_1611_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_1_addr_reg_3900 <= zext_ln18_reg_3791;
        tmp_20_reg_3895 <= {{inputs_1_q0[21:3]}};
        tmp_22_reg_3905 <= {{inputs_1_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_27_fu_1647_p3 == 1'd1) & (trunc_ln301_2_fu_1643_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_2_addr_reg_3923 <= zext_ln18_reg_3791;
        tmp_24_reg_3918 <= {{inputs_2_q0[21:3]}};
        tmp_26_reg_3928 <= {{inputs_2_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_fu_1679_p3 == 1'd1) & (trunc_ln301_3_fu_1675_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_3_addr_reg_3946 <= zext_ln18_reg_3791;
        tmp_28_reg_3941 <= {{inputs_3_q0[21:3]}};
        tmp_30_reg_3951 <= {{inputs_3_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_35_fu_1711_p3 == 1'd1) & (trunc_ln301_4_fu_1707_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_4_addr_reg_3969 <= zext_ln18_reg_3791;
        tmp_32_reg_3964 <= {{inputs_4_q0[21:3]}};
        tmp_34_reg_3974 <= {{inputs_4_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_fu_1743_p3 == 1'd1) & (trunc_ln301_5_fu_1739_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_5_addr_reg_3992 <= zext_ln18_reg_3791;
        tmp_36_reg_3987 <= {{inputs_5_q0[21:3]}};
        tmp_38_reg_3997 <= {{inputs_5_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_43_fu_1775_p3 == 1'd1) & (trunc_ln301_6_fu_1771_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_6_addr_reg_4015 <= zext_ln18_reg_3791;
        tmp_40_reg_4010 <= {{inputs_6_q0[21:3]}};
        tmp_42_reg_4020 <= {{inputs_6_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_47_fu_1807_p3 == 1'd1) & (trunc_ln301_7_fu_1803_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rem_7_addr_reg_4038 <= zext_ln18_reg_3791;
        tmp_44_reg_4033 <= {{inputs_7_q0[21:3]}};
        tmp_46_reg_4043 <= {{inputs_7_q0[13:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_35_reg_3960 == 1'd1) & (trunc_ln301_4_reg_3956 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln731_4_reg_4133 <= sub_ln731_4_fu_2268_p2;
        tmp_33_reg_4128 <= {{rem_4_q0[29:20]}};
        trunc_ln1333_11_reg_4138 <= {{sub_ln731_4_fu_2268_p2[9:3]}};
        trunc_ln1333_4_reg_4145 <= {{rem_4_q0[29:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_reg_3983 == 1'd1) & (trunc_ln301_5_reg_3979 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln731_5_reg_4157 <= sub_ln731_5_fu_2315_p2;
        tmp_37_reg_4152 <= {{rem_5_q0[29:20]}};
        trunc_ln1333_12_reg_4162 <= {{sub_ln731_5_fu_2315_p2[9:3]}};
        trunc_ln1333_5_reg_4169 <= {{rem_5_q0[29:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_43_reg_4006 == 1'd1) & (trunc_ln301_6_reg_4002 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln731_6_reg_4181 <= sub_ln731_6_fu_2362_p2;
        tmp_41_reg_4176 <= {{rem_6_q0[29:20]}};
        trunc_ln1333_13_reg_4186 <= {{sub_ln731_6_fu_2362_p2[9:3]}};
        trunc_ln1333_6_reg_4193 <= {{rem_6_q0[29:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_47_reg_4029 == 1'd1) & (trunc_ln301_7_reg_4025 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln731_7_reg_4205 <= sub_ln731_7_fu_2409_p2;
        tmp_45_reg_4200 <= {{rem_7_q0[29:20]}};
        trunc_ln1333_14_reg_4210 <= {{sub_ln731_7_fu_2409_p2[9:3]}};
        trunc_ln1333_7_reg_4217 <= {{rem_7_q0[29:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_19_reg_3868 <= inputs_0_q0[32'd1];
        tmp_23_reg_3891 <= inputs_1_q0[32'd1];
        tmp_27_reg_3914 <= inputs_2_q0[32'd1];
        tmp_31_reg_3937 <= inputs_3_q0[32'd1];
        tmp_35_reg_3960 <= inputs_4_q0[32'd1];
        tmp_39_reg_3983 <= inputs_5_q0[32'd1];
        tmp_43_reg_4006 <= inputs_6_q0[32'd1];
        tmp_47_reg_4029 <= inputs_7_q0[32'd1];
        trunc_ln301_1_reg_3887 <= trunc_ln301_1_fu_1611_p1;
        trunc_ln301_2_reg_3910 <= trunc_ln301_2_fu_1643_p1;
        trunc_ln301_3_reg_3933 <= trunc_ln301_3_fu_1675_p1;
        trunc_ln301_4_reg_3956 <= trunc_ln301_4_fu_1707_p1;
        trunc_ln301_5_reg_3979 <= trunc_ln301_5_fu_1739_p1;
        trunc_ln301_6_reg_4002 <= trunc_ln301_6_fu_1771_p1;
        trunc_ln301_7_reg_4025 <= trunc_ln301_7_fu_1803_p1;
        trunc_ln301_reg_3864 <= trunc_ln301_fu_1579_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_reg_3868 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_reg_3864 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_1_reg_4224 <= {{select_ln1494_fu_2460_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_reg_3891 == 1'd1) & (trunc_ln301_1_reg_3887 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_3_reg_4229 <= {{select_ln1494_1_fu_2559_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_27_reg_3914 == 1'd1) & (trunc_ln301_2_reg_3910 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_5_reg_4234 <= {{select_ln1494_2_fu_2658_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_reg_3937 == 1'd1) & (trunc_ln301_3_reg_3933 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_7_reg_4239 <= {{select_ln1494_3_fu_2757_p3[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_fu_1545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln18_reg_3791[3 : 0] <= zext_ln18_fu_1561_p1[3 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_0_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_0_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_0_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_0_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_0_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_0_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_0_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_0_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_0_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_0_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_0_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_0_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_0_V_address1 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_0_V_address1 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else begin
        ISIquan_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        ISIquan_0_V_ce0 = 1'b1;
    end else begin
        ISIquan_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ISIquan_0_V_ce1 = 1'b1;
    end else begin
        ISIquan_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_19_fu_1583_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_0_V_we0 = 1'b1;
    end else begin
        ISIquan_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_19_reg_3868 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln301_reg_3864 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_0_V_we1 = 1'b1;
    end else begin
        ISIquan_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_1_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_1_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_1_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_1_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_1_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_1_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_1_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_1_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_1_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_1_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_1_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_1_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_1_V_address1 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_1_V_address1 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else begin
        ISIquan_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        ISIquan_1_V_ce0 = 1'b1;
    end else begin
        ISIquan_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ISIquan_1_V_ce1 = 1'b1;
    end else begin
        ISIquan_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_23_fu_1615_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_1_V_we0 = 1'b1;
    end else begin
        ISIquan_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_23_reg_3891 == 1'd1) & (trunc_ln301_1_reg_3887 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_1_V_we1 = 1'b1;
    end else begin
        ISIquan_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_2_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_2_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_2_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_2_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_2_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_2_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_2_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_2_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_2_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_2_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_2_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_2_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_2_V_address1 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_2_V_address1 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else begin
        ISIquan_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        ISIquan_2_V_ce0 = 1'b1;
    end else begin
        ISIquan_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ISIquan_2_V_ce1 = 1'b1;
    end else begin
        ISIquan_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_27_fu_1647_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_2_V_we0 = 1'b1;
    end else begin
        ISIquan_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_27_reg_3914 == 1'd1) & (trunc_ln301_2_reg_3910 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_2_V_we1 = 1'b1;
    end else begin
        ISIquan_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_3_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_3_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_3_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_3_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_3_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_3_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_3_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_3_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_3_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_3_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_3_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_3_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_3_V_address1 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_3_V_address1 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else begin
        ISIquan_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        ISIquan_3_V_ce0 = 1'b1;
    end else begin
        ISIquan_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ISIquan_3_V_ce1 = 1'b1;
    end else begin
        ISIquan_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_31_fu_1679_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_3_V_we0 = 1'b1;
    end else begin
        ISIquan_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_31_reg_3937 == 1'd1) & (trunc_ln301_3_reg_3933 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ISIquan_3_V_we1 = 1'b1;
    end else begin
        ISIquan_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_4_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_4_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_4_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_4_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_4_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_4_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_4_V_address0 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_4_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_4_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_4_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_4_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_4_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_4_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_4_V_address1 = 64'd1;
    end else begin
        ISIquan_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_4_V_ce0 = 1'b1;
    end else begin
        ISIquan_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_4_V_ce1 = 1'b1;
    end else begin
        ISIquan_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_4_V_d0 = ISI_q_V_4_fu_3250_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_4_V_d0 = 4'd15;
    end else begin
        ISIquan_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_fu_1711_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_35_reg_3960_pp0_iter1_reg == 1'd1) & (trunc_ln301_4_reg_3956_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_4_V_we0 = 1'b1;
    end else begin
        ISIquan_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_5_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_5_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_5_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_5_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_5_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_5_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_5_V_address0 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_5_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_5_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_5_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_5_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_5_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_5_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_5_V_address1 = 64'd1;
    end else begin
        ISIquan_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_5_V_ce0 = 1'b1;
    end else begin
        ISIquan_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_5_V_ce1 = 1'b1;
    end else begin
        ISIquan_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_5_V_d0 = ISI_q_V_5_fu_3342_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_5_V_d0 = 4'd15;
    end else begin
        ISIquan_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_39_fu_1743_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_39_reg_3983_pp0_iter1_reg == 1'd1) & (trunc_ln301_5_reg_3979_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_5_V_we0 = 1'b1;
    end else begin
        ISIquan_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_6_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_6_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_6_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_6_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_6_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_6_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_6_V_address0 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_6_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_6_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_6_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_6_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_6_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_6_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_6_V_address1 = 64'd1;
    end else begin
        ISIquan_6_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_6_V_ce0 = 1'b1;
    end else begin
        ISIquan_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_6_V_ce1 = 1'b1;
    end else begin
        ISIquan_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_6_V_d0 = ISI_q_V_6_fu_3434_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_6_V_d0 = 4'd15;
    end else begin
        ISIquan_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_43_fu_1775_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_43_reg_4006_pp0_iter1_reg == 1'd1) & (trunc_ln301_6_reg_4002_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_6_V_we0 = 1'b1;
    end else begin
        ISIquan_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_7_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_7_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_7_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_7_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_7_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_7_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_7_V_address0 = zext_ln18_reg_3791_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_7_V_address0 = zext_ln18_reg_3791;
    end else begin
        ISIquan_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ISIquan_7_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ISIquan_7_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ISIquan_7_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ISIquan_7_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ISIquan_7_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ISIquan_7_V_address1 = 64'd1;
    end else begin
        ISIquan_7_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_7_V_ce0 = 1'b1;
    end else begin
        ISIquan_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ISIquan_7_V_ce1 = 1'b1;
    end else begin
        ISIquan_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ISIquan_7_V_d0 = ISI_q_V_7_fu_3526_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ISIquan_7_V_d0 = 4'd15;
    end else begin
        ISIquan_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_47_fu_1807_p3 == 1'd0) & (icmp_ln17_reg_3787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_47_reg_4029_pp0_iter1_reg == 1'd1) & (trunc_ln301_7_reg_4025_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ISIquan_7_V_we0 = 1'b1;
    end else begin
        ISIquan_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln17_fu_1545_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln17_reg_3787 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_0_0_phi_fu_1538_p4 = add_ln17_reg_3859;
    end else begin
        ap_phi_mux_j_0_0_phi_fu_1538_p4 = j_0_0_reg_1534;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_0_ce0 = 1'b1;
    end else begin
        inputs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_1_ce0 = 1'b1;
    end else begin
        inputs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_2_ce0 = 1'b1;
    end else begin
        inputs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_3_ce0 = 1'b1;
    end else begin
        inputs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_4_ce0 = 1'b1;
    end else begin
        inputs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_5_ce0 = 1'b1;
    end else begin
        inputs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_6_ce0 = 1'b1;
    end else begin
        inputs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_7_ce0 = 1'b1;
    end else begin
        inputs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_0_address0 = 64'd0;
    end else begin
        output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_d0 = or_ln50_6_8_fu_3703_p9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_0_d0 = or_ln50_6_fu_3535_p9;
    end else begin
        output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_1_address0 = 64'd0;
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_d0 = or_ln50_6_9_fu_3724_p9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_1_d0 = or_ln50_6_1_fu_3556_p9;
    end else begin
        output_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_2_address0 = 64'd0;
    end else begin
        output_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13))) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_2_d0 = or_ln50_6_s_fu_3745_p9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_2_d0 = or_ln50_6_2_fu_3577_p9;
    end else begin
        output_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13))) begin
        output_2_we0 = 1'b1;
    end else begin
        output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_3_address0 = 64'd0;
    end else begin
        output_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13))) begin
        output_3_ce0 = 1'b1;
    end else begin
        output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_3_d0 = or_ln50_6_10_fu_3766_p9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_3_d0 = or_ln50_6_3_fu_3598_p9;
    end else begin
        output_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13))) begin
        output_3_we0 = 1'b1;
    end else begin
        output_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        output_4_ce0 = 1'b1;
    end else begin
        output_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        output_4_we0 = 1'b1;
    end else begin
        output_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        output_5_ce0 = 1'b1;
    end else begin
        output_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        output_5_we0 = 1'b1;
    end else begin
        output_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        output_6_ce0 = 1'b1;
    end else begin
        output_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        output_6_we0 = 1'b1;
    end else begin
        output_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        output_7_ce0 = 1'b1;
    end else begin
        output_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        output_7_we0 = 1'b1;
    end else begin
        output_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_0_address0 = rem_0_addr_reg_3877_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_0_address0 = zext_ln18_reg_3791;
    end else begin
        rem_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_0_ce0 = 1'b1;
    end else begin
        rem_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_19_reg_3868_pp0_iter1_reg == 1'd1) & (trunc_ln301_reg_3864_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_0_we0 = 1'b1;
    end else begin
        rem_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_1_address0 = rem_1_addr_reg_3900_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_1_address0 = zext_ln18_reg_3791;
    end else begin
        rem_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_1_ce0 = 1'b1;
    end else begin
        rem_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_23_reg_3891_pp0_iter1_reg == 1'd1) & (trunc_ln301_1_reg_3887_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_1_we0 = 1'b1;
    end else begin
        rem_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_2_address0 = rem_2_addr_reg_3923_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_2_address0 = zext_ln18_reg_3791;
    end else begin
        rem_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_2_ce0 = 1'b1;
    end else begin
        rem_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_27_reg_3914_pp0_iter1_reg == 1'd1) & (trunc_ln301_2_reg_3910_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_2_we0 = 1'b1;
    end else begin
        rem_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_3_address0 = rem_3_addr_reg_3946_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_3_address0 = zext_ln18_reg_3791;
    end else begin
        rem_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_3_ce0 = 1'b1;
    end else begin
        rem_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_31_reg_3937_pp0_iter1_reg == 1'd1) & (trunc_ln301_3_reg_3933_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_3_we0 = 1'b1;
    end else begin
        rem_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_4_address0 = rem_4_addr_reg_3969_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_4_address0 = zext_ln18_reg_3791;
    end else begin
        rem_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_4_ce0 = 1'b1;
    end else begin
        rem_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_3960_pp0_iter1_reg == 1'd1) & (trunc_ln301_4_reg_3956_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_4_we0 = 1'b1;
    end else begin
        rem_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_5_address0 = rem_5_addr_reg_3992_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_5_address0 = zext_ln18_reg_3791;
    end else begin
        rem_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_5_ce0 = 1'b1;
    end else begin
        rem_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_39_reg_3983_pp0_iter1_reg == 1'd1) & (trunc_ln301_5_reg_3979_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_5_we0 = 1'b1;
    end else begin
        rem_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_6_address0 = rem_6_addr_reg_4015_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_6_address0 = zext_ln18_reg_3791;
    end else begin
        rem_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_6_ce0 = 1'b1;
    end else begin
        rem_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_43_reg_4006_pp0_iter1_reg == 1'd1) & (trunc_ln301_6_reg_4002_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_6_we0 = 1'b1;
    end else begin
        rem_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_7_address0 = rem_7_addr_reg_4038_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_7_address0 = zext_ln18_reg_3791;
    end else begin
        rem_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rem_7_ce0 = 1'b1;
    end else begin
        rem_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_47_reg_4029_pp0_iter1_reg == 1'd1) & (trunc_ln301_7_reg_4025_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rem_7_we0 = 1'b1;
    end else begin
        rem_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln17_fu_1545_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln17_fu_1545_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ISI_q_V_4_fu_3250_p3 = ((or_ln1495_4_fu_3244_p2[0:0] === 1'b1) ? select_ln1495_8_fu_3236_p3 : trunc_ln_i4_fu_3214_p4);

assign ISI_q_V_5_fu_3342_p3 = ((or_ln1495_5_fu_3336_p2[0:0] === 1'b1) ? select_ln1495_10_fu_3328_p3 : trunc_ln_i5_fu_3306_p4);

assign ISI_q_V_6_fu_3434_p3 = ((or_ln1495_6_fu_3428_p2[0:0] === 1'b1) ? select_ln1495_12_fu_3420_p3 : trunc_ln_i6_fu_3398_p4);

assign ISI_q_V_7_fu_3526_p3 = ((or_ln1495_7_fu_3520_p2[0:0] === 1'b1) ? select_ln1495_14_fu_3512_p3 : trunc_ln_i7_fu_3490_p4);

assign ISIquan_0_V_d1 = ((or_ln1495_fu_2519_p2[0:0] === 1'b1) ? select_ln1495_fu_2511_p3 : trunc_ln_i_fu_2489_p4);

assign ISIquan_1_V_d1 = ((or_ln1495_1_fu_2618_p2[0:0] === 1'b1) ? select_ln1495_2_fu_2610_p3 : trunc_ln_i3_fu_2588_p4);

assign ISIquan_2_V_d1 = ((or_ln1495_2_fu_2717_p2[0:0] === 1'b1) ? select_ln1495_4_fu_2709_p3 : trunc_ln_i1_fu_2687_p4);

assign ISIquan_3_V_d1 = ((or_ln1495_3_fu_2816_p2[0:0] === 1'b1) ? select_ln1495_6_fu_2808_p3 : trunc_ln_i2_fu_2786_p4);

assign add_ln17_fu_1573_p2 = (ap_phi_mux_j_0_0_phi_fu_1538_p4 + 7'd8);

assign and_ln1497_1_fu_2604_p2 = (xor_ln1495_1_fu_2598_p2 & icmp_ln1497_1_fu_2582_p2);

assign and_ln1497_2_fu_2703_p2 = (xor_ln1495_2_fu_2697_p2 & icmp_ln1497_2_fu_2681_p2);

assign and_ln1497_3_fu_2802_p2 = (xor_ln1495_3_fu_2796_p2 & icmp_ln1497_3_fu_2780_p2);

assign and_ln1497_4_fu_3230_p2 = (xor_ln1495_4_fu_3224_p2 & icmp_ln1497_4_fu_3208_p2);

assign and_ln1497_5_fu_3322_p2 = (xor_ln1495_5_fu_3316_p2 & icmp_ln1497_5_fu_3300_p2);

assign and_ln1497_6_fu_3414_p2 = (xor_ln1495_6_fu_3408_p2 & icmp_ln1497_6_fu_3392_p2);

assign and_ln1497_7_fu_3506_p2 = (xor_ln1495_7_fu_3500_p2 & icmp_ln1497_7_fu_3484_p2);

assign and_ln1497_fu_2505_p2 = (xor_ln1495_fu_2499_p2 & icmp_ln1497_fu_2483_p2);

assign and_ln731_10_fu_2304_p3 = {{tmp_38_reg_3997}, {1'd0}};

assign and_ln731_11_fu_2973_p3 = {{tmp_41_reg_4176}, {2'd0}};

assign and_ln731_12_fu_2351_p3 = {{tmp_42_reg_4020}, {1'd0}};

assign and_ln731_13_fu_3044_p3 = {{tmp_45_reg_4200}, {2'd0}};

assign and_ln731_14_fu_2398_p3 = {{tmp_46_reg_4043}, {1'd0}};

assign and_ln731_1_fu_1853_p3 = {{tmp_18_reg_3882}, {1'd0}};

assign and_ln731_2_fu_1948_p3 = {{tmp_21_fu_1938_p4}, {2'd0}};

assign and_ln731_3_fu_1956_p3 = {{tmp_22_reg_3905}, {1'd0}};

assign and_ln731_4_fu_2051_p3 = {{tmp_25_fu_2041_p4}, {2'd0}};

assign and_ln731_5_fu_2059_p3 = {{tmp_26_reg_3928}, {1'd0}};

assign and_ln731_6_fu_2154_p3 = {{tmp_29_fu_2144_p4}, {2'd0}};

assign and_ln731_7_fu_2162_p3 = {{tmp_30_reg_3951}, {1'd0}};

assign and_ln731_8_fu_2831_p3 = {{tmp_33_reg_4128}, {2'd0}};

assign and_ln731_9_fu_2257_p3 = {{tmp_34_reg_3974}, {1'd0}};

assign and_ln731_s_fu_2902_p3 = {{tmp_37_reg_4152}, {2'd0}};

assign and_ln_fu_1845_p3 = {{tmp_17_fu_1835_p4}, {2'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign icmp_ln1494_1_fu_2553_p2 = (($signed(sext_ln1494_1_fu_2546_p1) > $signed(zext_ln1494_1_fu_2550_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_2652_p2 = (($signed(sext_ln1494_2_fu_2645_p1) > $signed(zext_ln1494_2_fu_2649_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_2751_p2 = (($signed(sext_ln1494_3_fu_2744_p1) > $signed(zext_ln1494_3_fu_2748_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_2881_p2 = (($signed(sext_ln1494_4_fu_2873_p1) > $signed(zext_ln1494_4_fu_2877_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_2952_p2 = (($signed(sext_ln1494_5_fu_2944_p1) > $signed(zext_ln1494_5_fu_2948_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_3023_p2 = (($signed(sext_ln1494_6_fu_3015_p1) > $signed(zext_ln1494_6_fu_3019_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_3094_p2 = (($signed(sext_ln1494_7_fu_3086_p1) > $signed(zext_ln1494_7_fu_3090_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_2454_p2 = (($signed(sext_ln1494_fu_2447_p1) > $signed(zext_ln1494_fu_2451_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1495_1_fu_2576_p2 = ((select_ln1494_1_fu_2559_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_2_fu_2675_p2 = ((select_ln1494_2_fu_2658_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_2774_p2 = ((select_ln1494_3_fu_2757_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_4_fu_3202_p2 = ((select_ln1494_4_fu_3172_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_5_fu_3294_p2 = ((select_ln1494_5_fu_3264_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_6_fu_3386_p2 = ((select_ln1494_6_fu_3356_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_7_fu_3478_p2 = ((select_ln1494_7_fu_3448_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_2477_p2 = ((select_ln1494_fu_2460_p3 < 12'd40) ? 1'b1 : 1'b0);

assign icmp_ln1497_1_fu_2582_p2 = ((select_ln1494_1_fu_2559_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_2_fu_2681_p2 = ((select_ln1494_2_fu_2658_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_3_fu_2780_p2 = ((select_ln1494_3_fu_2757_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_4_fu_3208_p2 = ((select_ln1494_4_fu_3172_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_5_fu_3300_p2 = ((select_ln1494_5_fu_3264_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_6_fu_3392_p2 = ((select_ln1494_6_fu_3356_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_7_fu_3484_p2 = ((select_ln1494_7_fu_3448_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln1497_fu_2483_p2 = ((select_ln1494_fu_2460_p3 > 12'd400) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_1545_p2 = ((ap_phi_mux_j_0_0_phi_fu_1538_p4 == 7'd96) ? 1'b1 : 1'b0);

assign inputs_0_address0 = zext_ln18_fu_1561_p1;

assign inputs_1_address0 = zext_ln18_fu_1561_p1;

assign inputs_2_address0 = zext_ln18_fu_1561_p1;

assign inputs_3_address0 = zext_ln18_fu_1561_p1;

assign inputs_4_address0 = zext_ln18_fu_1561_p1;

assign inputs_5_address0 = zext_ln18_fu_1561_p1;

assign inputs_6_address0 = zext_ln18_fu_1561_p1;

assign inputs_7_address0 = zext_ln18_fu_1561_p1;

assign lshr_ln_fu_1551_p4 = {{ap_phi_mux_j_0_0_phi_fu_1538_p4[6:3]}};

assign mul_ln1118_1_fu_2019_p0 = mul_ln1118_1_fu_2019_p00;

assign mul_ln1118_1_fu_2019_p00 = trunc_ln1333_1_fu_1987_p4;

assign mul_ln1118_1_fu_2019_p1 = mul_ln1118_1_fu_2019_p10;

assign mul_ln1118_1_fu_2019_p10 = trunc_ln1333_9_fu_1973_p4;

assign mul_ln1118_1_fu_2019_p2 = (mul_ln1118_1_fu_2019_p0 * mul_ln1118_1_fu_2019_p1);

assign mul_ln1118_2_fu_2122_p0 = mul_ln1118_2_fu_2122_p00;

assign mul_ln1118_2_fu_2122_p00 = trunc_ln1333_2_fu_2090_p4;

assign mul_ln1118_2_fu_2122_p1 = mul_ln1118_2_fu_2122_p10;

assign mul_ln1118_2_fu_2122_p10 = trunc_ln1333_s_fu_2076_p4;

assign mul_ln1118_2_fu_2122_p2 = (mul_ln1118_2_fu_2122_p0 * mul_ln1118_2_fu_2122_p1);

assign mul_ln1118_3_fu_2225_p0 = mul_ln1118_3_fu_2225_p00;

assign mul_ln1118_3_fu_2225_p00 = trunc_ln1333_3_fu_2193_p4;

assign mul_ln1118_3_fu_2225_p1 = mul_ln1118_3_fu_2225_p10;

assign mul_ln1118_3_fu_2225_p10 = trunc_ln1333_10_fu_2179_p4;

assign mul_ln1118_3_fu_2225_p2 = (mul_ln1118_3_fu_2225_p0 * mul_ln1118_3_fu_2225_p1);

assign mul_ln1118_4_fu_2859_p0 = mul_ln1118_4_fu_2859_p00;

assign mul_ln1118_4_fu_2859_p00 = trunc_ln1333_4_reg_4145;

assign mul_ln1118_4_fu_2859_p1 = mul_ln1118_4_fu_2859_p10;

assign mul_ln1118_4_fu_2859_p10 = trunc_ln1333_11_reg_4138;

assign mul_ln1118_4_fu_2859_p2 = (mul_ln1118_4_fu_2859_p0 * mul_ln1118_4_fu_2859_p1);

assign mul_ln1118_5_fu_2930_p0 = mul_ln1118_5_fu_2930_p00;

assign mul_ln1118_5_fu_2930_p00 = trunc_ln1333_5_reg_4169;

assign mul_ln1118_5_fu_2930_p1 = mul_ln1118_5_fu_2930_p10;

assign mul_ln1118_5_fu_2930_p10 = trunc_ln1333_12_reg_4162;

assign mul_ln1118_5_fu_2930_p2 = (mul_ln1118_5_fu_2930_p0 * mul_ln1118_5_fu_2930_p1);

assign mul_ln1118_6_fu_3001_p0 = mul_ln1118_6_fu_3001_p00;

assign mul_ln1118_6_fu_3001_p00 = trunc_ln1333_6_reg_4193;

assign mul_ln1118_6_fu_3001_p1 = mul_ln1118_6_fu_3001_p10;

assign mul_ln1118_6_fu_3001_p10 = trunc_ln1333_13_reg_4186;

assign mul_ln1118_6_fu_3001_p2 = (mul_ln1118_6_fu_3001_p0 * mul_ln1118_6_fu_3001_p1);

assign mul_ln1118_7_fu_3072_p0 = mul_ln1118_7_fu_3072_p00;

assign mul_ln1118_7_fu_3072_p00 = trunc_ln1333_7_reg_4217;

assign mul_ln1118_7_fu_3072_p1 = mul_ln1118_7_fu_3072_p10;

assign mul_ln1118_7_fu_3072_p10 = trunc_ln1333_14_reg_4210;

assign mul_ln1118_7_fu_3072_p2 = (mul_ln1118_7_fu_3072_p0 * mul_ln1118_7_fu_3072_p1);

assign mul_ln1118_fu_1916_p0 = mul_ln1118_fu_1916_p00;

assign mul_ln1118_fu_1916_p00 = trunc_ln1_fu_1884_p4;

assign mul_ln1118_fu_1916_p1 = mul_ln1118_fu_1916_p10;

assign mul_ln1118_fu_1916_p10 = trunc_ln1333_8_fu_1870_p4;

assign mul_ln1118_fu_1916_p2 = (mul_ln1118_fu_1916_p0 * mul_ln1118_fu_1916_p1);

assign or_ln1495_1_fu_2618_p2 = (icmp_ln1495_1_fu_2576_p2 | and_ln1497_1_fu_2604_p2);

assign or_ln1495_2_fu_2717_p2 = (icmp_ln1495_2_fu_2675_p2 | and_ln1497_2_fu_2703_p2);

assign or_ln1495_3_fu_2816_p2 = (icmp_ln1495_3_fu_2774_p2 | and_ln1497_3_fu_2802_p2);

assign or_ln1495_4_fu_3244_p2 = (icmp_ln1495_4_fu_3202_p2 | and_ln1497_4_fu_3230_p2);

assign or_ln1495_5_fu_3336_p2 = (icmp_ln1495_5_fu_3294_p2 | and_ln1497_5_fu_3322_p2);

assign or_ln1495_6_fu_3428_p2 = (icmp_ln1495_6_fu_3386_p2 | and_ln1497_6_fu_3414_p2);

assign or_ln1495_7_fu_3520_p2 = (icmp_ln1495_7_fu_3478_p2 | and_ln1497_7_fu_3506_p2);

assign or_ln1495_fu_2519_p2 = (icmp_ln1495_fu_2477_p2 | and_ln1497_fu_2505_p2);

assign or_ln50_6_10_fu_3766_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_1_fu_3556_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_2_fu_3577_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_3_fu_3598_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_8_fu_3703_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_9_fu_3724_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign or_ln50_6_fu_3535_p9 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign or_ln50_6_s_fu_3745_p9 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign output_4_address0 = 64'd0;

assign output_4_d0 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign output_5_address0 = 64'd0;

assign output_5_d0 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign output_6_address0 = 64'd0;

assign output_6_d0 = {{{{{{{{ISIquan_7_V_q1}, {ISIquan_6_V_q1}}, {ISIquan_5_V_q1}}, {ISIquan_4_V_q1}}, {ISIquan_3_V_q0}}, {ISIquan_2_V_q0}}, {ISIquan_1_V_q0}}, {ISIquan_0_V_q0}};

assign output_7_address0 = 64'd0;

assign output_7_d0 = {{{{{{{{ISIquan_7_V_q0}, {ISIquan_6_V_q0}}, {ISIquan_5_V_q0}}, {ISIquan_4_V_q0}}, {ISIquan_3_V_q1}}, {ISIquan_2_V_q1}}, {ISIquan_1_V_q1}}, {ISIquan_0_V_q1}};

assign rem_0_d0 = tmp_2_fu_3115_p4;

assign rem_1_d0 = tmp_4_fu_3128_p4;

assign rem_2_d0 = tmp_6_fu_3141_p4;

assign rem_3_d0 = tmp_8_fu_3154_p4;

assign rem_4_d0 = tmp_s_fu_3188_p4;

assign rem_5_d0 = tmp_11_fu_3280_p4;

assign rem_6_d0 = tmp_13_fu_3372_p4;

assign rem_7_d0 = tmp_15_fu_3464_p4;

assign select_ln1494_1_fu_2559_p3 = ((icmp_ln1494_1_fu_2553_p2[0:0] === 1'b1) ? sub_ln703_3_reg_4083 : shl_ln731_1_fu_2534_p2);

assign select_ln1494_2_fu_2658_p3 = ((icmp_ln1494_2_fu_2652_p2[0:0] === 1'b1) ? sub_ln703_5_reg_4103 : shl_ln731_2_fu_2633_p2);

assign select_ln1494_3_fu_2757_p3 = ((icmp_ln1494_3_fu_2751_p2[0:0] === 1'b1) ? sub_ln703_7_reg_4123 : shl_ln731_3_fu_2732_p2);

assign select_ln1494_4_fu_3172_p3 = ((icmp_ln1494_4_reg_4244[0:0] === 1'b1) ? sub_ln703_9_reg_4249 : shl_ln731_4_fu_3167_p2);

assign select_ln1494_5_fu_3264_p3 = ((icmp_ln1494_5_reg_4254[0:0] === 1'b1) ? sub_ln703_11_reg_4259 : shl_ln731_5_fu_3259_p2);

assign select_ln1494_6_fu_3356_p3 = ((icmp_ln1494_6_reg_4264[0:0] === 1'b1) ? sub_ln703_13_reg_4269 : shl_ln731_6_fu_3351_p2);

assign select_ln1494_7_fu_3448_p3 = ((icmp_ln1494_7_reg_4274[0:0] === 1'b1) ? sub_ln703_15_reg_4279 : shl_ln731_7_fu_3443_p2);

assign select_ln1494_fu_2460_p3 = ((icmp_ln1494_fu_2454_p2[0:0] === 1'b1) ? sub_ln703_1_reg_4063 : shl_ln731_fu_2435_p2);

assign select_ln1495_10_fu_3328_p3 = ((icmp_ln1495_5_fu_3294_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_12_fu_3420_p3 = ((icmp_ln1495_6_fu_3386_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_14_fu_3512_p3 = ((icmp_ln1495_7_fu_3478_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_2_fu_2610_p3 = ((icmp_ln1495_1_fu_2576_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_4_fu_2709_p3 = ((icmp_ln1495_2_fu_2675_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_6_fu_2808_p3 = ((icmp_ln1495_3_fu_2774_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_8_fu_3236_p3 = ((icmp_ln1495_4_fu_3202_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign select_ln1495_fu_2511_p3 = ((icmp_ln1495_fu_2477_p2[0:0] === 1'b1) ? 4'd13 : 4'd14);

assign sext_ln1494_1_fu_2546_p1 = $signed(shl_ln728_1_fu_2539_p3);

assign sext_ln1494_2_fu_2645_p1 = $signed(shl_ln728_2_fu_2638_p3);

assign sext_ln1494_3_fu_2744_p1 = $signed(shl_ln728_3_fu_2737_p3);

assign sext_ln1494_4_fu_2873_p1 = $signed(shl_ln728_4_fu_2865_p3);

assign sext_ln1494_5_fu_2944_p1 = $signed(shl_ln728_5_fu_2936_p3);

assign sext_ln1494_6_fu_3015_p1 = $signed(shl_ln728_6_fu_3007_p3);

assign sext_ln1494_7_fu_3086_p1 = $signed(shl_ln728_7_fu_3078_p3);

assign sext_ln1494_fu_2447_p1 = $signed(shl_ln1_fu_2440_p3);

assign shl_ln1_fu_2440_p3 = {{sub_ln1193_reg_4053}, {2'd0}};

assign shl_ln728_1_fu_2539_p3 = {{sub_ln1193_1_reg_4073}, {2'd0}};

assign shl_ln728_2_fu_2638_p3 = {{sub_ln1193_2_reg_4093}, {2'd0}};

assign shl_ln728_3_fu_2737_p3 = {{sub_ln1193_3_reg_4113}, {2'd0}};

assign shl_ln728_4_fu_2865_p3 = {{sub_ln1193_4_fu_2847_p2}, {2'd0}};

assign shl_ln728_5_fu_2936_p3 = {{sub_ln1193_5_fu_2918_p2}, {2'd0}};

assign shl_ln728_6_fu_3007_p3 = {{sub_ln1193_6_fu_2989_p2}, {2'd0}};

assign shl_ln728_7_fu_3078_p3 = {{sub_ln1193_7_fu_3060_p2}, {2'd0}};

assign shl_ln731_1_fu_2534_p2 = sub_ln731_1_reg_4068 << 12'd2;

assign shl_ln731_2_fu_2633_p2 = sub_ln731_2_reg_4088 << 12'd2;

assign shl_ln731_3_fu_2732_p2 = sub_ln731_3_reg_4108 << 12'd2;

assign shl_ln731_4_fu_3167_p2 = sub_ln731_4_reg_4133 << 12'd2;

assign shl_ln731_5_fu_3259_p2 = sub_ln731_5_reg_4157 << 12'd2;

assign shl_ln731_6_fu_3351_p2 = sub_ln731_6_reg_4181 << 12'd2;

assign shl_ln731_7_fu_3443_p2 = sub_ln731_7_reg_4205 << 12'd2;

assign shl_ln731_fu_2435_p2 = sub_ln731_reg_4048 << 12'd2;

assign sub_ln1193_1_fu_2005_p2 = (zext_ln703_2_fu_1997_p1 - zext_ln703_3_fu_2001_p1);

assign sub_ln1193_2_fu_2108_p2 = (zext_ln703_4_fu_2100_p1 - zext_ln703_5_fu_2104_p1);

assign sub_ln1193_3_fu_2211_p2 = (zext_ln703_6_fu_2203_p1 - zext_ln703_7_fu_2207_p1);

assign sub_ln1193_4_fu_2847_p2 = (zext_ln703_8_fu_2841_p1 - zext_ln703_9_fu_2844_p1);

assign sub_ln1193_5_fu_2918_p2 = (zext_ln703_10_fu_2912_p1 - zext_ln703_11_fu_2915_p1);

assign sub_ln1193_6_fu_2989_p2 = (zext_ln703_12_fu_2983_p1 - zext_ln703_13_fu_2986_p1);

assign sub_ln1193_7_fu_3060_p2 = (zext_ln703_14_fu_3054_p1 - zext_ln703_15_fu_3057_p1);

assign sub_ln1193_fu_1902_p2 = (zext_ln703_fu_1894_p1 - zext_ln703_1_fu_1898_p1);

assign sub_ln703_10_fu_2961_p2 = (and_ln731_s_fu_2902_p3 - zext_ln1333_5_fu_2958_p1);

assign sub_ln703_11_fu_2967_p2 = (sub_ln703_10_fu_2961_p2 - zext_ln1333_13_fu_2909_p1);

assign sub_ln703_12_fu_3032_p2 = (and_ln731_11_fu_2973_p3 - zext_ln1333_6_fu_3029_p1);

assign sub_ln703_13_fu_3038_p2 = (sub_ln703_12_fu_3032_p2 - zext_ln1333_14_fu_2980_p1);

assign sub_ln703_14_fu_3103_p2 = (and_ln731_13_fu_3044_p3 - zext_ln1333_7_fu_3100_p1);

assign sub_ln703_15_fu_3109_p2 = (sub_ln703_14_fu_3103_p2 - zext_ln1333_15_fu_3051_p1);

assign sub_ln703_1_fu_1932_p2 = (sub_ln703_fu_1926_p2 - zext_ln1333_8_fu_1880_p1);

assign sub_ln703_2_fu_2029_p2 = (and_ln731_2_fu_1948_p3 - zext_ln1333_1_fu_2025_p1);

assign sub_ln703_3_fu_2035_p2 = (sub_ln703_2_fu_2029_p2 - zext_ln1333_9_fu_1983_p1);

assign sub_ln703_4_fu_2132_p2 = (and_ln731_4_fu_2051_p3 - zext_ln1333_2_fu_2128_p1);

assign sub_ln703_5_fu_2138_p2 = (sub_ln703_4_fu_2132_p2 - zext_ln1333_10_fu_2086_p1);

assign sub_ln703_6_fu_2235_p2 = (and_ln731_6_fu_2154_p3 - zext_ln1333_3_fu_2231_p1);

assign sub_ln703_7_fu_2241_p2 = (sub_ln703_6_fu_2235_p2 - zext_ln1333_11_fu_2189_p1);

assign sub_ln703_8_fu_2890_p2 = (and_ln731_8_fu_2831_p3 - zext_ln1333_4_fu_2887_p1);

assign sub_ln703_9_fu_2896_p2 = (sub_ln703_8_fu_2890_p2 - zext_ln1333_12_fu_2838_p1);

assign sub_ln703_fu_1926_p2 = (and_ln_fu_1845_p3 - zext_ln1333_fu_1922_p1);

assign sub_ln731_1_fu_1967_p2 = (and_ln731_3_fu_1956_p3 - trunc_ln731_1_fu_1963_p1);

assign sub_ln731_2_fu_2070_p2 = (and_ln731_5_fu_2059_p3 - trunc_ln731_2_fu_2066_p1);

assign sub_ln731_3_fu_2173_p2 = (and_ln731_7_fu_2162_p3 - trunc_ln731_3_fu_2169_p1);

assign sub_ln731_4_fu_2268_p2 = (and_ln731_9_fu_2257_p3 - trunc_ln731_4_fu_2264_p1);

assign sub_ln731_5_fu_2315_p2 = (and_ln731_10_fu_2304_p3 - trunc_ln731_5_fu_2311_p1);

assign sub_ln731_6_fu_2362_p2 = (and_ln731_12_fu_2351_p3 - trunc_ln731_6_fu_2358_p1);

assign sub_ln731_7_fu_2409_p2 = (and_ln731_14_fu_2398_p3 - trunc_ln731_7_fu_2405_p1);

assign sub_ln731_fu_1864_p2 = (and_ln731_1_fu_1853_p3 - trunc_ln731_fu_1860_p1);

assign tmp_10_fu_3270_p4 = {{select_ln1494_5_fu_3264_p3[11:2]}};

assign tmp_11_fu_3280_p4 = {{{tmp_10_fu_3270_p4}, {tmp_36_reg_3987_pp0_iter1_reg}}, {1'd0}};

assign tmp_12_fu_3362_p4 = {{select_ln1494_6_fu_3356_p3[11:2]}};

assign tmp_13_fu_3372_p4 = {{{tmp_12_fu_3362_p4}, {tmp_40_reg_4010_pp0_iter1_reg}}, {1'd0}};

assign tmp_14_fu_3454_p4 = {{select_ln1494_7_fu_3448_p3[11:2]}};

assign tmp_15_fu_3464_p4 = {{{tmp_14_fu_3454_p4}, {tmp_44_reg_4033_pp0_iter1_reg}}, {1'd0}};

assign tmp_17_fu_1835_p4 = {{rem_0_q0[29:20]}};

assign tmp_19_fu_1583_p3 = inputs_0_q0[32'd1];

assign tmp_21_fu_1938_p4 = {{rem_1_q0[29:20]}};

assign tmp_23_fu_1615_p3 = inputs_1_q0[32'd1];

assign tmp_25_fu_2041_p4 = {{rem_2_q0[29:20]}};

assign tmp_27_fu_1647_p3 = inputs_2_q0[32'd1];

assign tmp_29_fu_2144_p4 = {{rem_3_q0[29:20]}};

assign tmp_2_fu_3115_p4 = {{{tmp_1_reg_4224}, {tmp_16_reg_3872_pp0_iter1_reg}}, {1'd0}};

assign tmp_31_fu_1679_p3 = inputs_3_q0[32'd1];

assign tmp_35_fu_1711_p3 = inputs_4_q0[32'd1];

assign tmp_39_fu_1743_p3 = inputs_5_q0[32'd1];

assign tmp_43_fu_1775_p3 = inputs_6_q0[32'd1];

assign tmp_47_fu_1807_p3 = inputs_7_q0[32'd1];

assign tmp_4_fu_3128_p4 = {{{tmp_3_reg_4229}, {tmp_20_reg_3895_pp0_iter1_reg}}, {1'd0}};

assign tmp_6_fu_3141_p4 = {{{tmp_5_reg_4234}, {tmp_24_reg_3918_pp0_iter1_reg}}, {1'd0}};

assign tmp_8_fu_3154_p4 = {{{tmp_7_reg_4239}, {tmp_28_reg_3941_pp0_iter1_reg}}, {1'd0}};

assign tmp_9_fu_3178_p4 = {{select_ln1494_4_fu_3172_p3[11:2]}};

assign tmp_s_fu_3188_p4 = {{{tmp_9_fu_3178_p4}, {tmp_32_reg_3964_pp0_iter1_reg}}, {1'd0}};

assign trunc_ln1333_10_fu_2179_p4 = {{sub_ln731_3_fu_2173_p2[9:3]}};

assign trunc_ln1333_1_fu_1987_p4 = {{rem_1_q0[29:23]}};

assign trunc_ln1333_2_fu_2090_p4 = {{rem_2_q0[29:23]}};

assign trunc_ln1333_3_fu_2193_p4 = {{rem_3_q0[29:23]}};

assign trunc_ln1333_8_fu_1870_p4 = {{sub_ln731_fu_1864_p2[9:3]}};

assign trunc_ln1333_9_fu_1973_p4 = {{sub_ln731_1_fu_1967_p2[9:3]}};

assign trunc_ln1333_s_fu_2076_p4 = {{sub_ln731_2_fu_2070_p2[9:3]}};

assign trunc_ln1_fu_1884_p4 = {{rem_0_q0[29:23]}};

assign trunc_ln301_1_fu_1611_p1 = inputs_1_q0[0:0];

assign trunc_ln301_2_fu_1643_p1 = inputs_2_q0[0:0];

assign trunc_ln301_3_fu_1675_p1 = inputs_3_q0[0:0];

assign trunc_ln301_4_fu_1707_p1 = inputs_4_q0[0:0];

assign trunc_ln301_5_fu_1739_p1 = inputs_5_q0[0:0];

assign trunc_ln301_6_fu_1771_p1 = inputs_6_q0[0:0];

assign trunc_ln301_7_fu_1803_p1 = inputs_7_q0[0:0];

assign trunc_ln301_fu_1579_p1 = inputs_0_q0[0:0];

assign trunc_ln731_1_fu_1963_p1 = rem_1_q0[11:0];

assign trunc_ln731_2_fu_2066_p1 = rem_2_q0[11:0];

assign trunc_ln731_3_fu_2169_p1 = rem_3_q0[11:0];

assign trunc_ln731_4_fu_2264_p1 = rem_4_q0[11:0];

assign trunc_ln731_5_fu_2311_p1 = rem_5_q0[11:0];

assign trunc_ln731_6_fu_2358_p1 = rem_6_q0[11:0];

assign trunc_ln731_7_fu_2405_p1 = rem_7_q0[11:0];

assign trunc_ln731_fu_1860_p1 = rem_0_q0[11:0];

assign trunc_ln_i1_fu_2687_p4 = {{select_ln1494_2_fu_2658_p3[8:5]}};

assign trunc_ln_i2_fu_2786_p4 = {{select_ln1494_3_fu_2757_p3[8:5]}};

assign trunc_ln_i3_fu_2588_p4 = {{select_ln1494_1_fu_2559_p3[8:5]}};

assign trunc_ln_i4_fu_3214_p4 = {{select_ln1494_4_fu_3172_p3[8:5]}};

assign trunc_ln_i5_fu_3306_p4 = {{select_ln1494_5_fu_3264_p3[8:5]}};

assign trunc_ln_i6_fu_3398_p4 = {{select_ln1494_6_fu_3356_p3[8:5]}};

assign trunc_ln_i7_fu_3490_p4 = {{select_ln1494_7_fu_3448_p3[8:5]}};

assign trunc_ln_i_fu_2489_p4 = {{select_ln1494_fu_2460_p3[8:5]}};

assign xor_ln1495_1_fu_2598_p2 = (icmp_ln1495_1_fu_2576_p2 ^ 1'd1);

assign xor_ln1495_2_fu_2697_p2 = (icmp_ln1495_2_fu_2675_p2 ^ 1'd1);

assign xor_ln1495_3_fu_2796_p2 = (icmp_ln1495_3_fu_2774_p2 ^ 1'd1);

assign xor_ln1495_4_fu_3224_p2 = (icmp_ln1495_4_fu_3202_p2 ^ 1'd1);

assign xor_ln1495_5_fu_3316_p2 = (icmp_ln1495_5_fu_3294_p2 ^ 1'd1);

assign xor_ln1495_6_fu_3408_p2 = (icmp_ln1495_6_fu_3386_p2 ^ 1'd1);

assign xor_ln1495_7_fu_3500_p2 = (icmp_ln1495_7_fu_3478_p2 ^ 1'd1);

assign xor_ln1495_fu_2499_p2 = (icmp_ln1495_fu_2477_p2 ^ 1'd1);

assign zext_ln1333_10_fu_2086_p1 = trunc_ln1333_s_fu_2076_p4;

assign zext_ln1333_11_fu_2189_p1 = trunc_ln1333_10_fu_2179_p4;

assign zext_ln1333_12_fu_2838_p1 = trunc_ln1333_11_reg_4138;

assign zext_ln1333_13_fu_2909_p1 = trunc_ln1333_12_reg_4162;

assign zext_ln1333_14_fu_2980_p1 = trunc_ln1333_13_reg_4186;

assign zext_ln1333_15_fu_3051_p1 = trunc_ln1333_14_reg_4210;

assign zext_ln1333_1_fu_2025_p1 = trunc_ln1333_1_fu_1987_p4;

assign zext_ln1333_2_fu_2128_p1 = trunc_ln1333_2_fu_2090_p4;

assign zext_ln1333_3_fu_2231_p1 = trunc_ln1333_3_fu_2193_p4;

assign zext_ln1333_4_fu_2887_p1 = trunc_ln1333_4_reg_4145;

assign zext_ln1333_5_fu_2958_p1 = trunc_ln1333_5_reg_4169;

assign zext_ln1333_6_fu_3029_p1 = trunc_ln1333_6_reg_4193;

assign zext_ln1333_7_fu_3100_p1 = trunc_ln1333_7_reg_4217;

assign zext_ln1333_8_fu_1880_p1 = trunc_ln1333_8_fu_1870_p4;

assign zext_ln1333_9_fu_1983_p1 = trunc_ln1333_9_fu_1973_p4;

assign zext_ln1333_fu_1922_p1 = trunc_ln1_fu_1884_p4;

assign zext_ln1494_1_fu_2550_p1 = mul_ln1118_1_reg_4078;

assign zext_ln1494_2_fu_2649_p1 = mul_ln1118_2_reg_4098;

assign zext_ln1494_3_fu_2748_p1 = mul_ln1118_3_reg_4118;

assign zext_ln1494_4_fu_2877_p1 = mul_ln1118_4_fu_2859_p2;

assign zext_ln1494_5_fu_2948_p1 = mul_ln1118_5_fu_2930_p2;

assign zext_ln1494_6_fu_3019_p1 = mul_ln1118_6_fu_3001_p2;

assign zext_ln1494_7_fu_3090_p1 = mul_ln1118_7_fu_3072_p2;

assign zext_ln1494_fu_2451_p1 = mul_ln1118_reg_4058;

assign zext_ln18_fu_1561_p1 = lshr_ln_fu_1551_p4;

assign zext_ln703_10_fu_2912_p1 = trunc_ln1333_5_reg_4169;

assign zext_ln703_11_fu_2915_p1 = trunc_ln1333_12_reg_4162;

assign zext_ln703_12_fu_2983_p1 = trunc_ln1333_6_reg_4193;

assign zext_ln703_13_fu_2986_p1 = trunc_ln1333_13_reg_4186;

assign zext_ln703_14_fu_3054_p1 = trunc_ln1333_7_reg_4217;

assign zext_ln703_15_fu_3057_p1 = trunc_ln1333_14_reg_4210;

assign zext_ln703_1_fu_1898_p1 = trunc_ln1333_8_fu_1870_p4;

assign zext_ln703_2_fu_1997_p1 = trunc_ln1333_1_fu_1987_p4;

assign zext_ln703_3_fu_2001_p1 = trunc_ln1333_9_fu_1973_p4;

assign zext_ln703_4_fu_2100_p1 = trunc_ln1333_2_fu_2090_p4;

assign zext_ln703_5_fu_2104_p1 = trunc_ln1333_s_fu_2076_p4;

assign zext_ln703_6_fu_2203_p1 = trunc_ln1333_3_fu_2193_p4;

assign zext_ln703_7_fu_2207_p1 = trunc_ln1333_10_fu_2179_p4;

assign zext_ln703_8_fu_2841_p1 = trunc_ln1333_4_reg_4145;

assign zext_ln703_9_fu_2844_p1 = trunc_ln1333_11_reg_4138;

assign zext_ln703_fu_1894_p1 = trunc_ln1_fu_1884_p4;

always @ (posedge ap_clk) begin
    zext_ln18_reg_3791[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_3791_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //estimate_ISI_encode
