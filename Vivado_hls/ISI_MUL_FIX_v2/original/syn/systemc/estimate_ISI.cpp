// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "estimate_ISI.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic estimate_ISI::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic estimate_ISI::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> estimate_ISI::ap_ST_fsm_state1 = "1";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state2 = "10";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state3 = "100";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state4 = "1000";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state5 = "10000";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state6 = "100000";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> estimate_ISI::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> estimate_ISI::ap_const_lv32_0 = "00000000000000000000000000000000";
const int estimate_ISI::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> estimate_ISI::ap_const_lv32_1 = "1";
const sc_lv<1> estimate_ISI::ap_const_lv1_0 = "0";
const sc_lv<32> estimate_ISI::ap_const_lv32_2 = "10";
const sc_lv<1> estimate_ISI::ap_const_lv1_1 = "1";
const sc_lv<32> estimate_ISI::ap_const_lv32_3 = "11";
const sc_lv<32> estimate_ISI::ap_const_lv32_5 = "101";
const sc_lv<32> estimate_ISI::ap_const_lv32_6 = "110";
const sc_lv<32> estimate_ISI::ap_const_lv32_4 = "100";
const sc_lv<7> estimate_ISI::ap_const_lv7_0 = "0000000";
const sc_lv<32> estimate_ISI::ap_const_lv32_7 = "111";
const sc_lv<6> estimate_ISI::ap_const_lv6_0 = "000000";
const sc_lv<10> estimate_ISI::ap_const_lv10_3E8 = "1111101000";
const sc_lv<7> estimate_ISI::ap_const_lv7_60 = "1100000";
const sc_lv<7> estimate_ISI::ap_const_lv7_1 = "1";
const sc_lv<32> estimate_ISI::ap_const_lv32_15 = "10101";
const sc_lv<32> estimate_ISI::ap_const_lv32_B = "1011";
const sc_lv<32> estimate_ISI::ap_const_lv32_14 = "10100";
const sc_lv<32> estimate_ISI::ap_const_lv32_1D = "11101";
const sc_lv<32> estimate_ISI::ap_const_lv32_9 = "1001";
const sc_lv<32> estimate_ISI::ap_const_lv32_16 = "10110";
const sc_lv<32> estimate_ISI::ap_const_lv32_A = "1010";
const sc_lv<32> estimate_ISI::ap_const_lv32_19 = "11001";
const sc_lv<2> estimate_ISI::ap_const_lv2_0 = "00";
const sc_lv<6> estimate_ISI::ap_const_lv6_20 = "100000";
const sc_lv<6> estimate_ISI::ap_const_lv6_1 = "1";
const sc_lv<8> estimate_ISI::ap_const_lv8_1 = "1";
const sc_lv<8> estimate_ISI::ap_const_lv8_2 = "10";
const bool estimate_ISI::ap_const_boolean_1 = true;

estimate_ISI::estimate_ISI(sc_module_name name) : sc_module(name), mVcdFile(0) {
    estimate_ISI_AXILiteS_s_axi_U = new estimate_ISI_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("estimate_ISI_AXILiteS_s_axi_U");
    estimate_ISI_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    estimate_ISI_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    estimate_ISI_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    estimate_ISI_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    estimate_ISI_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    estimate_ISI_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    estimate_ISI_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    estimate_ISI_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    estimate_ISI_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    estimate_ISI_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    estimate_ISI_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    estimate_ISI_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    estimate_ISI_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    estimate_ISI_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    estimate_ISI_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    estimate_ISI_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    estimate_ISI_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    estimate_ISI_AXILiteS_s_axi_U->ACLK(ap_clk);
    estimate_ISI_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    estimate_ISI_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    estimate_ISI_AXILiteS_s_axi_U->ap_start(ap_start);
    estimate_ISI_AXILiteS_s_axi_U->interrupt(interrupt);
    estimate_ISI_AXILiteS_s_axi_U->ap_ready(ap_ready);
    estimate_ISI_AXILiteS_s_axi_U->ap_done(ap_done);
    estimate_ISI_AXILiteS_s_axi_U->ap_idle(ap_idle);
    estimate_ISI_AXILiteS_s_axi_U->inputs_address0(inputs_address0);
    estimate_ISI_AXILiteS_s_axi_U->inputs_ce0(inputs_ce0);
    estimate_ISI_AXILiteS_s_axi_U->inputs_q0(inputs_q0);
    estimate_ISI_AXILiteS_s_axi_U->rem_r_address0(rem_r_address0);
    estimate_ISI_AXILiteS_s_axi_U->rem_r_ce0(rem_r_ce0);
    estimate_ISI_AXILiteS_s_axi_U->rem_r_we0(rem_r_we0);
    estimate_ISI_AXILiteS_s_axi_U->rem_r_d0(rem_r_d0);
    estimate_ISI_AXILiteS_s_axi_U->rem_r_q0(rem_r_q0);
    estimate_ISI_AXILiteS_s_axi_U->output_r_address0(output_r_address0);
    estimate_ISI_AXILiteS_s_axi_U->output_r_ce0(output_r_ce0);
    estimate_ISI_AXILiteS_s_axi_U->output_r_we0(output_r_we0);
    estimate_ISI_AXILiteS_s_axi_U->output_r_d0(output_r_d0);
    ISI_V_U = new estimate_ISI_ISI_V("ISI_V_U");
    ISI_V_U->clk(ap_clk);
    ISI_V_U->reset(ap_rst_n_inv);
    ISI_V_U->address0(ISI_V_address0);
    ISI_V_U->ce0(ISI_V_ce0);
    ISI_V_U->we0(ISI_V_we0);
    ISI_V_U->d0(ISI_V_d0);
    ISI_V_U->q0(ISI_V_q0);
    ISI_V_U->address1(ISI_V_address1);
    ISI_V_U->ce1(ISI_V_ce1);
    ISI_V_U->q1(ISI_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ISIPre_V_fu_282_p4);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_ISIPre_n_V_fu_319_p4);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_ISI_V_addr_4_gep_fu_165_p3);
    sensitive << ( zext_ln16_reg_546 );
    sensitive << ( trunc_ln301_reg_558 );
    sensitive << ( tmp_2_reg_562 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ISI_V_address0);
    sensitive << ( zext_ln16_reg_546 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ISI_V_addr_4_gep_fu_165_p3 );
    sensitive << ( zext_ln39_fu_486_p1 );
    sensitive << ( zext_ln40_fu_500_p1 );

    SC_METHOD(thread_ISI_V_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln41_fu_514_p1 );

    SC_METHOD(thread_ISI_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ISI_V_ce1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ISI_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln891_fu_423_p3 );

    SC_METHOD(thread_ISI_V_we0);
    sensitive << ( trunc_ln301_reg_558 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_fu_254_p3 );
    sensitive << ( tmp_2_reg_562 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ISI_n_V_fu_309_p4);
    sensitive << ( sub_ln214_fu_303_p2 );

    SC_METHOD(thread_add_ln40_fu_491_p2);
    sensitive << ( sub_ln39_reg_609 );

    SC_METHOD(thread_add_ln41_fu_505_p2);
    sensitive << ( sub_ln39_reg_609 );

    SC_METHOD(thread_and_ln1_fu_407_p3);
    sensitive << ( tmp_5_reg_591 );

    SC_METHOD(thread_and_ln_fu_292_p3);
    sensitive << ( tmp_4_reg_576 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln38_fu_448_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln38_fu_448_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_i_fu_454_p2);
    sensitive << ( i_0_reg_221 );

    SC_METHOD(thread_icmp_ln15_fu_233_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_reg_210 );

    SC_METHOD(thread_icmp_ln38_fu_448_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_0_reg_221 );

    SC_METHOD(thread_icmp_ln891_fu_418_p2);
    sensitive << ( trunc_ln301_reg_558 );
    sensitive << ( tmp_2_reg_562 );
    sensitive << ( ret_V_reg_586 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln891_fu_414_p1 );

    SC_METHOD(thread_inputs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln16_fu_245_p1 );

    SC_METHOD(thread_inputs_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_j_fu_239_p2);
    sensitive << ( j_0_reg_210 );

    SC_METHOD(thread_lhs_V_fu_329_p1);
    sensitive << ( ISIPre_n_V_fu_319_p4 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln42_1_fu_533_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_fu_519_p4 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_r_V_1_fu_381_p4);
    sensitive << ( sub_ln214_fu_303_p2 );

    SC_METHOD(thread_r_V_2_fu_391_p1);
    sensitive << ( r_V_1_fu_381_p4 );

    SC_METHOD(thread_r_V_fu_377_p1);
    sensitive << ( trunc_ln1503_1_fu_367_p4 );

    SC_METHOD(thread_rem_r_address0);
    sensitive << ( zext_ln16_reg_546 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( rem_addr_reg_566 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rem_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rem_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_430_p4 );

    SC_METHOD(thread_rem_r_we0);
    sensitive << ( trunc_ln301_reg_558 );
    sensitive << ( tmp_2_reg_562 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ret_V_1_fu_351_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ret_V_1_fu_351_p00 );

    SC_METHOD(thread_ret_V_1_fu_351_p00);
    sensitive << ( ISIPre_n_V_fu_319_p4 );

    SC_METHOD(thread_ret_V_1_fu_351_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ret_V_1_fu_351_p10 );

    SC_METHOD(thread_ret_V_1_fu_351_p10);
    sensitive << ( ISI_n_V_fu_309_p4 );

    SC_METHOD(thread_ret_V_1_fu_351_p2);
    sensitive << ( ret_V_1_fu_351_p0 );
    sensitive << ( ret_V_1_fu_351_p1 );

    SC_METHOD(thread_ret_V_fu_337_p2);
    sensitive << ( lhs_V_fu_329_p1 );
    sensitive << ( rhs_V_fu_333_p1 );

    SC_METHOD(thread_rhs_V_fu_333_p1);
    sensitive << ( ISI_n_V_fu_309_p4 );

    SC_METHOD(thread_select_ln891_fu_423_p3);
    sensitive << ( sub_ln214_reg_581 );
    sensitive << ( sub_ln214_1_reg_596 );
    sensitive << ( icmp_ln891_fu_418_p2 );

    SC_METHOD(thread_sext_ln39_fu_482_p1);
    sensitive << ( sub_ln39_fu_476_p2 );

    SC_METHOD(thread_sext_ln40_fu_496_p1);
    sensitive << ( add_ln40_fu_491_p2 );

    SC_METHOD(thread_sext_ln41_fu_510_p1);
    sensitive << ( add_ln41_fu_505_p2 );

    SC_METHOD(thread_shl_ln_fu_464_p3);
    sensitive << ( trunc_ln39_fu_460_p1 );

    SC_METHOD(thread_sub_ln1354_fu_395_p2);
    sensitive << ( ISIPre_V_fu_282_p4 );
    sensitive << ( r_V_2_fu_391_p1 );

    SC_METHOD(thread_sub_ln214_1_fu_401_p2);
    sensitive << ( sub_ln1354_fu_395_p2 );
    sensitive << ( r_V_fu_377_p1 );

    SC_METHOD(thread_sub_ln214_fu_303_p2);
    sensitive << ( and_ln_fu_292_p3 );
    sensitive << ( trunc_ln214_fu_299_p1 );

    SC_METHOD(thread_sub_ln39_fu_476_p2);
    sensitive << ( zext_ln39_1_fu_472_p1 );
    sensitive << ( zext_ln38_fu_444_p1 );

    SC_METHOD(thread_tmp_1_fu_430_p4);
    sensitive << ( tmp_3_reg_571 );
    sensitive << ( select_ln891_fu_423_p3 );

    SC_METHOD(thread_tmp_2_fu_254_p3);
    sensitive << ( inputs_q0 );

    SC_METHOD(thread_tmp_fu_519_p4);
    sensitive << ( ISI_V_q0 );
    sensitive << ( ISI_V_load_reg_620 );
    sensitive << ( ISI_V_q1 );

    SC_METHOD(thread_trunc_ln1503_1_fu_367_p4);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_trunc_ln214_fu_299_p1);
    sensitive << ( rem_r_q0 );

    SC_METHOD(thread_trunc_ln301_fu_250_p1);
    sensitive << ( inputs_q0 );

    SC_METHOD(thread_trunc_ln39_fu_460_p1);
    sensitive << ( i_0_reg_221 );

    SC_METHOD(thread_zext_ln16_fu_245_p1);
    sensitive << ( j_0_reg_210 );

    SC_METHOD(thread_zext_ln38_fu_444_p1);
    sensitive << ( i_0_reg_221 );

    SC_METHOD(thread_zext_ln39_1_fu_472_p1);
    sensitive << ( shl_ln_fu_464_p3 );

    SC_METHOD(thread_zext_ln39_fu_486_p1);
    sensitive << ( sext_ln39_fu_482_p1 );

    SC_METHOD(thread_zext_ln40_fu_500_p1);
    sensitive << ( sext_ln40_fu_496_p1 );

    SC_METHOD(thread_zext_ln41_fu_514_p1);
    sensitive << ( sext_ln41_fu_510_p1 );

    SC_METHOD(thread_zext_ln42_1_fu_533_p1);
    sensitive << ( i_0_reg_221 );

    SC_METHOD(thread_zext_ln891_fu_414_p1);
    sensitive << ( and_ln1_fu_407_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln15_fu_233_p2 );
    sensitive << ( trunc_ln301_fu_250_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_fu_254_p3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln38_fu_448_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "estimate_ISI_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inputs_address0, "inputs_address0");
    sc_trace(mVcdFile, inputs_ce0, "inputs_ce0");
    sc_trace(mVcdFile, inputs_q0, "inputs_q0");
    sc_trace(mVcdFile, rem_r_address0, "rem_r_address0");
    sc_trace(mVcdFile, rem_r_ce0, "rem_r_ce0");
    sc_trace(mVcdFile, rem_r_we0, "rem_r_we0");
    sc_trace(mVcdFile, rem_r_d0, "rem_r_d0");
    sc_trace(mVcdFile, rem_r_q0, "rem_r_q0");
    sc_trace(mVcdFile, output_r_address0, "output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "output_r_d0");
    sc_trace(mVcdFile, j_fu_239_p2, "j_fu_239_p2");
    sc_trace(mVcdFile, j_reg_541, "j_reg_541");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln16_fu_245_p1, "zext_ln16_fu_245_p1");
    sc_trace(mVcdFile, zext_ln16_reg_546, "zext_ln16_reg_546");
    sc_trace(mVcdFile, icmp_ln15_fu_233_p2, "icmp_ln15_fu_233_p2");
    sc_trace(mVcdFile, trunc_ln301_fu_250_p1, "trunc_ln301_fu_250_p1");
    sc_trace(mVcdFile, trunc_ln301_reg_558, "trunc_ln301_reg_558");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_fu_254_p3, "tmp_2_fu_254_p3");
    sc_trace(mVcdFile, tmp_2_reg_562, "tmp_2_reg_562");
    sc_trace(mVcdFile, rem_addr_reg_566, "rem_addr_reg_566");
    sc_trace(mVcdFile, tmp_3_reg_571, "tmp_3_reg_571");
    sc_trace(mVcdFile, tmp_4_reg_576, "tmp_4_reg_576");
    sc_trace(mVcdFile, sub_ln214_fu_303_p2, "sub_ln214_fu_303_p2");
    sc_trace(mVcdFile, sub_ln214_reg_581, "sub_ln214_reg_581");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ret_V_fu_337_p2, "ret_V_fu_337_p2");
    sc_trace(mVcdFile, ret_V_reg_586, "ret_V_reg_586");
    sc_trace(mVcdFile, tmp_5_reg_591, "tmp_5_reg_591");
    sc_trace(mVcdFile, sub_ln214_1_fu_401_p2, "sub_ln214_1_fu_401_p2");
    sc_trace(mVcdFile, sub_ln214_1_reg_596, "sub_ln214_1_reg_596");
    sc_trace(mVcdFile, i_fu_454_p2, "i_fu_454_p2");
    sc_trace(mVcdFile, i_reg_604, "i_reg_604");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, sub_ln39_fu_476_p2, "sub_ln39_fu_476_p2");
    sc_trace(mVcdFile, sub_ln39_reg_609, "sub_ln39_reg_609");
    sc_trace(mVcdFile, icmp_ln38_fu_448_p2, "icmp_ln38_fu_448_p2");
    sc_trace(mVcdFile, ISI_V_q0, "ISI_V_q0");
    sc_trace(mVcdFile, ISI_V_load_reg_620, "ISI_V_load_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ISI_V_address0, "ISI_V_address0");
    sc_trace(mVcdFile, ISI_V_ce0, "ISI_V_ce0");
    sc_trace(mVcdFile, ISI_V_we0, "ISI_V_we0");
    sc_trace(mVcdFile, ISI_V_d0, "ISI_V_d0");
    sc_trace(mVcdFile, ISI_V_address1, "ISI_V_address1");
    sc_trace(mVcdFile, ISI_V_ce1, "ISI_V_ce1");
    sc_trace(mVcdFile, ISI_V_q1, "ISI_V_q1");
    sc_trace(mVcdFile, j_0_reg_210, "j_0_reg_210");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_0_reg_221, "i_0_reg_221");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ISI_V_addr_4_gep_fu_165_p3, "ISI_V_addr_4_gep_fu_165_p3");
    sc_trace(mVcdFile, zext_ln39_fu_486_p1, "zext_ln39_fu_486_p1");
    sc_trace(mVcdFile, zext_ln40_fu_500_p1, "zext_ln40_fu_500_p1");
    sc_trace(mVcdFile, zext_ln41_fu_514_p1, "zext_ln41_fu_514_p1");
    sc_trace(mVcdFile, zext_ln42_1_fu_533_p1, "zext_ln42_1_fu_533_p1");
    sc_trace(mVcdFile, select_ln891_fu_423_p3, "select_ln891_fu_423_p3");
    sc_trace(mVcdFile, and_ln_fu_292_p3, "and_ln_fu_292_p3");
    sc_trace(mVcdFile, trunc_ln214_fu_299_p1, "trunc_ln214_fu_299_p1");
    sc_trace(mVcdFile, ISIPre_n_V_fu_319_p4, "ISIPre_n_V_fu_319_p4");
    sc_trace(mVcdFile, ISI_n_V_fu_309_p4, "ISI_n_V_fu_309_p4");
    sc_trace(mVcdFile, lhs_V_fu_329_p1, "lhs_V_fu_329_p1");
    sc_trace(mVcdFile, rhs_V_fu_333_p1, "rhs_V_fu_333_p1");
    sc_trace(mVcdFile, ret_V_1_fu_351_p0, "ret_V_1_fu_351_p0");
    sc_trace(mVcdFile, ret_V_1_fu_351_p1, "ret_V_1_fu_351_p1");
    sc_trace(mVcdFile, ret_V_1_fu_351_p2, "ret_V_1_fu_351_p2");
    sc_trace(mVcdFile, trunc_ln1503_1_fu_367_p4, "trunc_ln1503_1_fu_367_p4");
    sc_trace(mVcdFile, r_V_1_fu_381_p4, "r_V_1_fu_381_p4");
    sc_trace(mVcdFile, ISIPre_V_fu_282_p4, "ISIPre_V_fu_282_p4");
    sc_trace(mVcdFile, r_V_2_fu_391_p1, "r_V_2_fu_391_p1");
    sc_trace(mVcdFile, sub_ln1354_fu_395_p2, "sub_ln1354_fu_395_p2");
    sc_trace(mVcdFile, r_V_fu_377_p1, "r_V_fu_377_p1");
    sc_trace(mVcdFile, and_ln1_fu_407_p3, "and_ln1_fu_407_p3");
    sc_trace(mVcdFile, zext_ln891_fu_414_p1, "zext_ln891_fu_414_p1");
    sc_trace(mVcdFile, icmp_ln891_fu_418_p2, "icmp_ln891_fu_418_p2");
    sc_trace(mVcdFile, tmp_1_fu_430_p4, "tmp_1_fu_430_p4");
    sc_trace(mVcdFile, trunc_ln39_fu_460_p1, "trunc_ln39_fu_460_p1");
    sc_trace(mVcdFile, shl_ln_fu_464_p3, "shl_ln_fu_464_p3");
    sc_trace(mVcdFile, zext_ln39_1_fu_472_p1, "zext_ln39_1_fu_472_p1");
    sc_trace(mVcdFile, zext_ln38_fu_444_p1, "zext_ln38_fu_444_p1");
    sc_trace(mVcdFile, sext_ln39_fu_482_p1, "sext_ln39_fu_482_p1");
    sc_trace(mVcdFile, add_ln40_fu_491_p2, "add_ln40_fu_491_p2");
    sc_trace(mVcdFile, sext_ln40_fu_496_p1, "sext_ln40_fu_496_p1");
    sc_trace(mVcdFile, add_ln41_fu_505_p2, "add_ln41_fu_505_p2");
    sc_trace(mVcdFile, sext_ln41_fu_510_p1, "sext_ln41_fu_510_p1");
    sc_trace(mVcdFile, tmp_fu_519_p4, "tmp_fu_519_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ret_V_1_fu_351_p00, "ret_V_1_fu_351_p00");
    sc_trace(mVcdFile, ret_V_1_fu_351_p10, "ret_V_1_fu_351_p10");
#endif

    }
    mHdltvinHandle.open("estimate_ISI.hdltvin.dat");
    mHdltvoutHandle.open("estimate_ISI.hdltvout.dat");
}

estimate_ISI::~estimate_ISI() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete estimate_ISI_AXILiteS_s_axi_U;
    delete ISI_V_U;
}

void estimate_ISI::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void estimate_ISI::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_fu_233_p2.read(), ap_const_lv1_1))) {
        i_0_reg_221 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_0_reg_221 = i_reg_604.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_210 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_210 = j_reg_541.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISI_V_load_reg_620 = ISI_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_604 = i_fu_454_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_reg_541 = j_fu_239_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_2_fu_254_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(trunc_ln301_fu_250_p1.read(), ap_const_lv1_1))) {
        rem_addr_reg_566 =  (sc_lv<7>) (zext_ln16_reg_546.read());
        tmp_3_reg_571 = inputs_q0.read().range(21, 3);
        tmp_4_reg_576 = inputs_q0.read().range(11, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ret_V_reg_586 = ret_V_fu_337_p2.read();
        sub_ln214_1_reg_596 = sub_ln214_1_fu_401_p2.read();
        sub_ln214_reg_581 = sub_ln214_fu_303_p2.read();
        tmp_5_reg_591 = ret_V_1_fu_351_p2.read().range(10, 5);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln38_fu_448_p2.read()))) {
        sub_ln39_reg_609 = sub_ln39_fu_476_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_2_reg_562 = inputs_q0.read().range(1, 1);
        trunc_ln301_reg_558 = trunc_ln301_fu_250_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln15_fu_233_p2.read(), ap_const_lv1_0))) {
        zext_ln16_reg_546 = zext_ln16_fu_245_p1.read();
    }
}

void estimate_ISI::thread_ISIPre_V_fu_282_p4() {
    ISIPre_V_fu_282_p4 = rem_r_q0.read().range(29, 20);
}

void estimate_ISI::thread_ISIPre_n_V_fu_319_p4() {
    ISIPre_n_V_fu_319_p4 = rem_r_q0.read().range(29, 22);
}

void estimate_ISI::thread_ISI_V_addr_4_gep_fu_165_p3() {
    ISI_V_addr_4_gep_fu_165_p3 =  (sc_lv<7>) (zext_ln16_reg_546.read());
}

void estimate_ISI::thread_ISI_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISI_V_address0 =  (sc_lv<7>) (zext_ln40_fu_500_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ISI_V_address0 =  (sc_lv<7>) (zext_ln39_fu_486_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ISI_V_address0 = ISI_V_addr_4_gep_fu_165_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ISI_V_address0 =  (sc_lv<7>) (zext_ln16_reg_546.read());
    } else {
        ISI_V_address0 = "XXXXXXX";
    }
}

void estimate_ISI::thread_ISI_V_address1() {
    ISI_V_address1 =  (sc_lv<7>) (zext_ln41_fu_514_p1.read());
}

void estimate_ISI::thread_ISI_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ISI_V_ce0 = ap_const_logic_1;
    } else {
        ISI_V_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ISI_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ISI_V_ce1 = ap_const_logic_1;
    } else {
        ISI_V_ce1 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ISI_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ISI_V_d0 = select_ln891_fu_423_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ISI_V_d0 = ap_const_lv10_3E8;
    } else {
        ISI_V_d0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void estimate_ISI::thread_ISI_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_254_p3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_562.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(trunc_ln301_reg_558.read(), ap_const_lv1_1)))) {
        ISI_V_we0 = ap_const_logic_1;
    } else {
        ISI_V_we0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ISI_n_V_fu_309_p4() {
    ISI_n_V_fu_309_p4 = sub_ln214_fu_303_p2.read().range(9, 2);
}

void estimate_ISI::thread_add_ln40_fu_491_p2() {
    add_ln40_fu_491_p2 = (!ap_const_lv8_1.is_01() || !sub_ln39_reg_609.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_bigint<8>(sub_ln39_reg_609.read()));
}

void estimate_ISI::thread_add_ln41_fu_505_p2() {
    add_ln41_fu_505_p2 = (!ap_const_lv8_2.is_01() || !sub_ln39_reg_609.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_2) + sc_bigint<8>(sub_ln39_reg_609.read()));
}

void estimate_ISI::thread_and_ln1_fu_407_p3() {
    and_ln1_fu_407_p3 = esl_concat<6,2>(tmp_5_reg_591.read(), ap_const_lv2_0);
}

void estimate_ISI::thread_and_ln_fu_292_p3() {
    and_ln_fu_292_p3 = esl_concat<9,1>(tmp_4_reg_576.read(), ap_const_lv1_0);
}

void estimate_ISI::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void estimate_ISI::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void estimate_ISI::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void estimate_ISI::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void estimate_ISI::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void estimate_ISI::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void estimate_ISI::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void estimate_ISI::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void estimate_ISI::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_448_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_448_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void estimate_ISI::thread_i_fu_454_p2() {
    i_fu_454_p2 = (!i_0_reg_221.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_221.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void estimate_ISI::thread_icmp_ln15_fu_233_p2() {
    icmp_ln15_fu_233_p2 = (!j_0_reg_210.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_210.read() == ap_const_lv7_60);
}

void estimate_ISI::thread_icmp_ln38_fu_448_p2() {
    icmp_ln38_fu_448_p2 = (!i_0_reg_221.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_221.read() == ap_const_lv6_20);
}

void estimate_ISI::thread_icmp_ln891_fu_418_p2() {
    icmp_ln891_fu_418_p2 = (!ret_V_reg_586.read().is_01() || !zext_ln891_fu_414_p1.read().is_01())? sc_lv<1>(): (sc_bigint<9>(ret_V_reg_586.read()) < sc_bigint<9>(zext_ln891_fu_414_p1.read()));
}

void estimate_ISI::thread_inputs_address0() {
    inputs_address0 =  (sc_lv<7>) (zext_ln16_fu_245_p1.read());
}

void estimate_ISI::thread_inputs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inputs_ce0 = ap_const_logic_1;
    } else {
        inputs_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_j_fu_239_p2() {
    j_fu_239_p2 = (!j_0_reg_210.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_210.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_ISI::thread_lhs_V_fu_329_p1() {
    lhs_V_fu_329_p1 = esl_zext<9,8>(ISIPre_n_V_fu_319_p4.read());
}

void estimate_ISI::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<5>) (zext_ln42_1_fu_533_p1.read());
}

void estimate_ISI::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_output_r_d0() {
    output_r_d0 = esl_zext<32,30>(tmp_fu_519_p4.read());
}

void estimate_ISI::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_r_V_1_fu_381_p4() {
    r_V_1_fu_381_p4 = sub_ln214_fu_303_p2.read().range(9, 5);
}

void estimate_ISI::thread_r_V_2_fu_391_p1() {
    r_V_2_fu_391_p1 = esl_zext<10,5>(r_V_1_fu_381_p4.read());
}

void estimate_ISI::thread_r_V_fu_377_p1() {
    r_V_fu_377_p1 = esl_zext<10,5>(trunc_ln1503_1_fu_367_p4.read());
}

void estimate_ISI::thread_rem_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        rem_r_address0 = rem_addr_reg_566.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        rem_r_address0 =  (sc_lv<7>) (zext_ln16_reg_546.read());
    } else {
        rem_r_address0 = "XXXXXXX";
    }
}

void estimate_ISI::thread_rem_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        rem_r_ce0 = ap_const_logic_1;
    } else {
        rem_r_ce0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_rem_r_d0() {
    rem_r_d0 = esl_zext<32,30>(tmp_1_fu_430_p4.read());
}

void estimate_ISI::thread_rem_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_562.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(trunc_ln301_reg_558.read(), ap_const_lv1_1))) {
        rem_r_we0 = ap_const_logic_1;
    } else {
        rem_r_we0 = ap_const_logic_0;
    }
}

void estimate_ISI::thread_ret_V_1_fu_351_p0() {
    ret_V_1_fu_351_p0 =  (sc_lv<8>) (ret_V_1_fu_351_p00.read());
}

void estimate_ISI::thread_ret_V_1_fu_351_p00() {
    ret_V_1_fu_351_p00 = esl_zext<11,8>(ISIPre_n_V_fu_319_p4.read());
}

void estimate_ISI::thread_ret_V_1_fu_351_p1() {
    ret_V_1_fu_351_p1 =  (sc_lv<8>) (ret_V_1_fu_351_p10.read());
}

void estimate_ISI::thread_ret_V_1_fu_351_p10() {
    ret_V_1_fu_351_p10 = esl_zext<11,8>(ISI_n_V_fu_309_p4.read());
}

void estimate_ISI::thread_ret_V_1_fu_351_p2() {
    ret_V_1_fu_351_p2 = (!ret_V_1_fu_351_p0.read().is_01() || !ret_V_1_fu_351_p1.read().is_01())? sc_lv<11>(): sc_biguint<8>(ret_V_1_fu_351_p0.read()) * sc_biguint<8>(ret_V_1_fu_351_p1.read());
}

void estimate_ISI::thread_ret_V_fu_337_p2() {
    ret_V_fu_337_p2 = (!lhs_V_fu_329_p1.read().is_01() || !rhs_V_fu_333_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_fu_329_p1.read()) - sc_biguint<9>(rhs_V_fu_333_p1.read()));
}

void estimate_ISI::thread_rhs_V_fu_333_p1() {
    rhs_V_fu_333_p1 = esl_zext<9,8>(ISI_n_V_fu_309_p4.read());
}

void estimate_ISI::thread_select_ln891_fu_423_p3() {
    select_ln891_fu_423_p3 = (!icmp_ln891_fu_418_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln891_fu_418_p2.read()[0].to_bool())? sub_ln214_reg_581.read(): sub_ln214_1_reg_596.read());
}

void estimate_ISI::thread_sext_ln39_fu_482_p1() {
    sext_ln39_fu_482_p1 = esl_sext<32,8>(sub_ln39_fu_476_p2.read());
}

void estimate_ISI::thread_sext_ln40_fu_496_p1() {
    sext_ln40_fu_496_p1 = esl_sext<32,8>(add_ln40_fu_491_p2.read());
}

void estimate_ISI::thread_sext_ln41_fu_510_p1() {
    sext_ln41_fu_510_p1 = esl_sext<32,8>(add_ln41_fu_505_p2.read());
}

void estimate_ISI::thread_shl_ln_fu_464_p3() {
    shl_ln_fu_464_p3 = esl_concat<5,2>(trunc_ln39_fu_460_p1.read(), ap_const_lv2_0);
}

void estimate_ISI::thread_sub_ln1354_fu_395_p2() {
    sub_ln1354_fu_395_p2 = (!ISIPre_V_fu_282_p4.read().is_01() || !r_V_2_fu_391_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ISIPre_V_fu_282_p4.read()) - sc_biguint<10>(r_V_2_fu_391_p1.read()));
}

void estimate_ISI::thread_sub_ln214_1_fu_401_p2() {
    sub_ln214_1_fu_401_p2 = (!sub_ln1354_fu_395_p2.read().is_01() || !r_V_fu_377_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sub_ln1354_fu_395_p2.read()) - sc_biguint<10>(r_V_fu_377_p1.read()));
}

void estimate_ISI::thread_sub_ln214_fu_303_p2() {
    sub_ln214_fu_303_p2 = (!and_ln_fu_292_p3.read().is_01() || !trunc_ln214_fu_299_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(and_ln_fu_292_p3.read()) - sc_biguint<10>(trunc_ln214_fu_299_p1.read()));
}

void estimate_ISI::thread_sub_ln39_fu_476_p2() {
    sub_ln39_fu_476_p2 = (!zext_ln39_1_fu_472_p1.read().is_01() || !zext_ln38_fu_444_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln39_1_fu_472_p1.read()) - sc_biguint<8>(zext_ln38_fu_444_p1.read()));
}

void estimate_ISI::thread_tmp_1_fu_430_p4() {
    tmp_1_fu_430_p4 = esl_concat<29,1>(esl_concat<10,19>(select_ln891_fu_423_p3.read(), tmp_3_reg_571.read()), ap_const_lv1_0);
}

void estimate_ISI::thread_tmp_2_fu_254_p3() {
    tmp_2_fu_254_p3 = inputs_q0.read().range(1, 1);
}

void estimate_ISI::thread_tmp_fu_519_p4() {
    tmp_fu_519_p4 = esl_concat<20,10>(esl_concat<10,10>(ISI_V_q1.read(), ISI_V_q0.read()), ISI_V_load_reg_620.read());
}

void estimate_ISI::thread_trunc_ln1503_1_fu_367_p4() {
    trunc_ln1503_1_fu_367_p4 = rem_r_q0.read().range(29, 25);
}

void estimate_ISI::thread_trunc_ln214_fu_299_p1() {
    trunc_ln214_fu_299_p1 = rem_r_q0.read().range(10-1, 0);
}

void estimate_ISI::thread_trunc_ln301_fu_250_p1() {
    trunc_ln301_fu_250_p1 = inputs_q0.read().range(1-1, 0);
}

void estimate_ISI::thread_trunc_ln39_fu_460_p1() {
    trunc_ln39_fu_460_p1 = i_0_reg_221.read().range(5-1, 0);
}

void estimate_ISI::thread_zext_ln16_fu_245_p1() {
    zext_ln16_fu_245_p1 = esl_zext<64,7>(j_0_reg_210.read());
}

void estimate_ISI::thread_zext_ln38_fu_444_p1() {
    zext_ln38_fu_444_p1 = esl_zext<8,6>(i_0_reg_221.read());
}

void estimate_ISI::thread_zext_ln39_1_fu_472_p1() {
    zext_ln39_1_fu_472_p1 = esl_zext<8,7>(shl_ln_fu_464_p3.read());
}

void estimate_ISI::thread_zext_ln39_fu_486_p1() {
    zext_ln39_fu_486_p1 = esl_zext<64,32>(sext_ln39_fu_482_p1.read());
}

void estimate_ISI::thread_zext_ln40_fu_500_p1() {
    zext_ln40_fu_500_p1 = esl_zext<64,32>(sext_ln40_fu_496_p1.read());
}

void estimate_ISI::thread_zext_ln41_fu_514_p1() {
    zext_ln41_fu_514_p1 = esl_zext<64,32>(sext_ln41_fu_510_p1.read());
}

void estimate_ISI::thread_zext_ln42_1_fu_533_p1() {
    zext_ln42_1_fu_533_p1 = esl_zext<64,6>(i_0_reg_221.read());
}

void estimate_ISI::thread_zext_ln891_fu_414_p1() {
    zext_ln891_fu_414_p1 = esl_zext<9,8>(and_ln1_fu_407_p3.read());
}

void estimate_ISI::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln15_fu_233_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_2_fu_254_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(trunc_ln301_fu_250_p1.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_448_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void estimate_ISI::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

