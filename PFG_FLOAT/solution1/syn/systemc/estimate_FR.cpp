// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "estimate_FR.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic estimate_FR::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic estimate_FR::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<62> estimate_FR::ap_ST_fsm_state1 = "1";
const sc_lv<62> estimate_FR::ap_ST_fsm_state2 = "10";
const sc_lv<62> estimate_FR::ap_ST_fsm_state3 = "100";
const sc_lv<62> estimate_FR::ap_ST_fsm_state4 = "1000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state5 = "10000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state6 = "100000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state7 = "1000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state8 = "10000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state9 = "100000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state10 = "1000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state11 = "10000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state12 = "100000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<62> estimate_FR::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> estimate_FR::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> estimate_FR::ap_const_lv32_7 = "111";
const sc_lv<32> estimate_FR::ap_const_lv32_2E = "101110";
const sc_lv<32> estimate_FR::ap_const_lv32_1 = "1";
const sc_lv<1> estimate_FR::ap_const_lv1_0 = "0";
const sc_lv<32> estimate_FR::ap_const_lv32_2 = "10";
const sc_lv<32> estimate_FR::ap_const_lv32_9 = "1001";
const sc_lv<32> estimate_FR::ap_const_lv32_A = "1010";
const sc_lv<32> estimate_FR::ap_const_lv32_29 = "101001";
const sc_lv<32> estimate_FR::ap_const_lv32_2F = "101111";
const sc_lv<32> estimate_FR::ap_const_lv32_30 = "110000";
const sc_lv<32> estimate_FR::ap_const_lv32_31 = "110001";
const sc_lv<32> estimate_FR::ap_const_lv32_37 = "110111";
const sc_lv<32> estimate_FR::ap_const_lv32_3C = "111100";
const sc_lv<32> estimate_FR::ap_const_lv32_3D = "111101";
const sc_lv<7> estimate_FR::ap_const_lv7_0 = "0000000";
const sc_lv<32> estimate_FR::ap_const_lv32_8 = "1000";
const sc_lv<64> estimate_FR::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> estimate_FR::ap_const_lv1_1 = "1";
const sc_lv<7> estimate_FR::ap_const_lv7_1 = "1";
const sc_lv<32> estimate_FR::ap_const_lv32_3 = "11";
const sc_lv<32> estimate_FR::ap_const_lv32_2A = "101010";
const sc_lv<32> estimate_FR::ap_const_lv32_38 = "111000";
const sc_lv<64> estimate_FR::ap_const_lv64_3FA0000000000000 = "11111110100000000000000000000000000000000000000000000000000000";
const sc_lv<32> estimate_FR::ap_const_lv32_32 = "110010";
const sc_lv<64> estimate_FR::ap_const_lv64_3FEF000000000000 = "11111111101111000000000000000000000000000000000000000000000000";
const sc_lv<64> estimate_FR::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<32> estimate_FR::ap_const_lv32_B = "1011";
const sc_lv<64> estimate_FR::ap_const_lv64_403E000000000000 = "100000000111110000000000000000000000000000000000000000000000000";
const sc_lv<7> estimate_FR::ap_const_lv7_4A = "1001010";
const sc_lv<32> estimate_FR::ap_const_lv32_34 = "110100";
const sc_lv<32> estimate_FR::ap_const_lv32_3E = "111110";
const sc_lv<11> estimate_FR::ap_const_lv11_7FF = "11111111111";
const sc_lv<52> estimate_FR::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<7> estimate_FR::ap_const_lv7_7F = "1111111";
const sc_lv<2> estimate_FR::ap_const_lv2_0 = "00";
const sc_lv<2> estimate_FR::ap_const_lv2_1 = "1";
const sc_lv<5> estimate_FR::ap_const_lv5_2 = "10";
const bool estimate_FR::ap_const_boolean_1 = true;

estimate_FR::estimate_FR(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ISI_U = new estimate_FR_ISI("ISI_U");
    ISI_U->clk(ap_clk);
    ISI_U->reset(ap_rst);
    ISI_U->address0(ISI_address0);
    ISI_U->ce0(ISI_ce0);
    ISI_U->we0(ISI_we0);
    ISI_U->d0(reg_205);
    ISI_U->q0(ISI_q0);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1 = new estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>("estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1");
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->clk(ap_clk);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->reset(ap_rst);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->din0(grp_fu_180_p0);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->din1(grp_fu_180_p1);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->opcode(grp_fu_180_opcode);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->ce(ap_var_for_const0);
    estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1->dout(grp_fu_180_p2);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2 = new estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>("estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2");
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2->clk(ap_clk);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2->reset(ap_rst);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2->din0(tmp_1_reg_354);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2->din1(ap_var_for_const1);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2->ce(ap_var_for_const0);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2->dout(grp_fu_185_p2);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3 = new estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>("estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3");
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3->clk(ap_clk);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3->reset(ap_rst);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3->din0(FR_load_reg_381);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3->din1(ap_var_for_const2);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3->ce(ap_var_for_const0);
    estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3->dout(grp_fu_190_p2);
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4 = new estimate_FR_ddiv_64ns_64ns_64_31_1<1,31,64,64,64>("estimate_FR_ddiv_64ns_64ns_64_31_1_U4");
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4->clk(ap_clk);
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4->reset(ap_rst);
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4->din0(ap_var_for_const3);
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4->din1(ISI_load_reg_349);
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4->ce(ap_var_for_const0);
    estimate_FR_ddiv_64ns_64ns_64_31_1_U4->dout(grp_fu_195_p2);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5 = new estimate_FR_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>("estimate_FR_dcmp_64ns_64ns_1_2_1_U5");
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->clk(ap_clk);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->reset(ap_rst);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->din0(reg_205);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->din1(ap_var_for_const4);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->ce(ap_var_for_const0);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->opcode(ap_var_for_const5);
    estimate_FR_dcmp_64ns_64ns_1_2_1_U5->dout(grp_fu_200_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FR_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( FR_addr_1_reg_343 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_FR_address1);
    sensitive << ( FR_addr_1_reg_343 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( zext_ln15_fu_281_p1 );

    SC_METHOD(thread_FR_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_FR_ce1);
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state62 );

    SC_METHOD(thread_FR_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_reg_354 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_FR_d1);
    sensitive << ( tmp_6_reg_396 );
    sensitive << ( ap_CS_fsm_state62 );

    SC_METHOD(thread_FR_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_FR_we1);
    sensitive << ( and_ln15_reg_377 );
    sensitive << ( ap_CS_fsm_state62 );

    SC_METHOD(thread_ISI_address0);
    sensitive << ( zext_ln11_1_reg_315 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln14_fu_239_p1 );

    SC_METHOD(thread_ISI_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ISI_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_add_ln15_fu_275_p2);
    sensitive << ( j_0_reg_157 );

    SC_METHOD(thread_and_ln15_fu_290_p2);
    sensitive << ( or_ln15_fu_286_p2 );
    sensitive << ( grp_fu_200_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln13_fu_233_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_empty_7_phi_fu_173_p4);
    sensitive << ( and_ln15_reg_377 );
    sensitive << ( tmp_6_reg_396 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( empty_7_reg_169 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln13_fu_233_p2 );

    SC_METHOD(thread_bitcast_ln15_fu_245_p1);
    sensitive << ( reg_205 );

    SC_METHOD(thread_grp_fu_180_opcode);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_grp_fu_180_p0);
    sensitive << ( spksTime_load_reg_325 );
    sensitive << ( tmp_1_reg_354 );
    sensitive << ( tmp_4_reg_386 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_grp_fu_180_p1);
    sensitive << ( spksTime_load_1_reg_330 );
    sensitive << ( tmp_5_reg_391 );
    sensitive << ( empty_5_reg_145 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_i_fu_217_p2);
    sensitive << ( i_0_reg_134 );

    SC_METHOD(thread_icmp_ln10_fu_211_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_134 );

    SC_METHOD(thread_icmp_ln13_fu_233_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_0_reg_157 );

    SC_METHOD(thread_icmp_ln15_1_fu_269_p2);
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( trunc_ln15_fu_259_p1 );

    SC_METHOD(thread_icmp_ln15_fu_263_p2);
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( tmp_3_fu_249_p4 );

    SC_METHOD(thread_j_fu_296_p2);
    sensitive << ( j_0_reg_157 );

    SC_METHOD(thread_or_ln15_fu_286_p2);
    sensitive << ( icmp_ln15_reg_362 );
    sensitive << ( icmp_ln15_1_reg_367 );

    SC_METHOD(thread_spksTime_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln11_fu_223_p1 );

    SC_METHOD(thread_spksTime_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln11_1_fu_228_p1 );

    SC_METHOD(thread_spksTime_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_spksTime_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_3_fu_249_p4);
    sensitive << ( bitcast_ln15_fu_245_p1 );

    SC_METHOD(thread_trunc_ln15_fu_259_p1);
    sensitive << ( bitcast_ln15_fu_245_p1 );

    SC_METHOD(thread_zext_ln11_1_fu_228_p1);
    sensitive << ( i_0_reg_134 );

    SC_METHOD(thread_zext_ln11_fu_223_p1);
    sensitive << ( i_fu_217_p2 );

    SC_METHOD(thread_zext_ln14_fu_239_p1);
    sensitive << ( j_0_reg_157 );

    SC_METHOD(thread_zext_ln15_fu_281_p1);
    sensitive << ( add_ln15_fu_275_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln10_fu_211_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln13_fu_233_p2 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( and_ln15_fu_290_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "estimate_FR_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, spksTime_address0, "(port)spksTime_address0");
    sc_trace(mVcdFile, spksTime_ce0, "(port)spksTime_ce0");
    sc_trace(mVcdFile, spksTime_q0, "(port)spksTime_q0");
    sc_trace(mVcdFile, spksTime_address1, "(port)spksTime_address1");
    sc_trace(mVcdFile, spksTime_ce1, "(port)spksTime_ce1");
    sc_trace(mVcdFile, spksTime_q1, "(port)spksTime_q1");
    sc_trace(mVcdFile, FR_address0, "(port)FR_address0");
    sc_trace(mVcdFile, FR_ce0, "(port)FR_ce0");
    sc_trace(mVcdFile, FR_we0, "(port)FR_we0");
    sc_trace(mVcdFile, FR_d0, "(port)FR_d0");
    sc_trace(mVcdFile, FR_address1, "(port)FR_address1");
    sc_trace(mVcdFile, FR_ce1, "(port)FR_ce1");
    sc_trace(mVcdFile, FR_we1, "(port)FR_we1");
    sc_trace(mVcdFile, FR_d1, "(port)FR_d1");
    sc_trace(mVcdFile, FR_q1, "(port)FR_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_180_p2, "grp_fu_180_p2");
    sc_trace(mVcdFile, reg_205, "reg_205");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, i_fu_217_p2, "i_fu_217_p2");
    sc_trace(mVcdFile, i_reg_305, "i_reg_305");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln10_fu_211_p2, "icmp_ln10_fu_211_p2");
    sc_trace(mVcdFile, zext_ln11_1_fu_228_p1, "zext_ln11_1_fu_228_p1");
    sc_trace(mVcdFile, zext_ln11_1_reg_315, "zext_ln11_1_reg_315");
    sc_trace(mVcdFile, spksTime_load_reg_325, "spksTime_load_reg_325");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, spksTime_load_1_reg_330, "spksTime_load_1_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln13_fu_233_p2, "icmp_ln13_fu_233_p2");
    sc_trace(mVcdFile, FR_addr_1_reg_343, "FR_addr_1_reg_343");
    sc_trace(mVcdFile, ISI_q0, "ISI_q0");
    sc_trace(mVcdFile, ISI_load_reg_349, "ISI_load_reg_349");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_195_p2, "grp_fu_195_p2");
    sc_trace(mVcdFile, tmp_1_reg_354, "tmp_1_reg_354");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, icmp_ln15_fu_263_p2, "icmp_ln15_fu_263_p2");
    sc_trace(mVcdFile, icmp_ln15_reg_362, "icmp_ln15_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, icmp_ln15_1_fu_269_p2, "icmp_ln15_1_fu_269_p2");
    sc_trace(mVcdFile, icmp_ln15_1_reg_367, "icmp_ln15_1_reg_367");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, and_ln15_fu_290_p2, "and_ln15_fu_290_p2");
    sc_trace(mVcdFile, and_ln15_reg_377, "and_ln15_reg_377");
    sc_trace(mVcdFile, FR_load_reg_381, "FR_load_reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, grp_fu_185_p2, "grp_fu_185_p2");
    sc_trace(mVcdFile, tmp_4_reg_386, "tmp_4_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, grp_fu_190_p2, "grp_fu_190_p2");
    sc_trace(mVcdFile, tmp_5_reg_391, "tmp_5_reg_391");
    sc_trace(mVcdFile, tmp_6_reg_396, "tmp_6_reg_396");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, j_fu_296_p2, "j_fu_296_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ISI_address0, "ISI_address0");
    sc_trace(mVcdFile, ISI_ce0, "ISI_ce0");
    sc_trace(mVcdFile, ISI_we0, "ISI_we0");
    sc_trace(mVcdFile, i_0_reg_134, "i_0_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_phi_mux_empty_7_phi_fu_173_p4, "ap_phi_mux_empty_7_phi_fu_173_p4");
    sc_trace(mVcdFile, empty_5_reg_145, "empty_5_reg_145");
    sc_trace(mVcdFile, j_0_reg_157, "j_0_reg_157");
    sc_trace(mVcdFile, empty_7_reg_169, "empty_7_reg_169");
    sc_trace(mVcdFile, zext_ln11_fu_223_p1, "zext_ln11_fu_223_p1");
    sc_trace(mVcdFile, zext_ln14_fu_239_p1, "zext_ln14_fu_239_p1");
    sc_trace(mVcdFile, zext_ln15_fu_281_p1, "zext_ln15_fu_281_p1");
    sc_trace(mVcdFile, grp_fu_180_p0, "grp_fu_180_p0");
    sc_trace(mVcdFile, grp_fu_180_p1, "grp_fu_180_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, bitcast_ln15_fu_245_p1, "bitcast_ln15_fu_245_p1");
    sc_trace(mVcdFile, tmp_3_fu_249_p4, "tmp_3_fu_249_p4");
    sc_trace(mVcdFile, trunc_ln15_fu_259_p1, "trunc_ln15_fu_259_p1");
    sc_trace(mVcdFile, add_ln15_fu_275_p2, "add_ln15_fu_275_p2");
    sc_trace(mVcdFile, or_ln15_fu_286_p2, "or_ln15_fu_286_p2");
    sc_trace(mVcdFile, grp_fu_200_p2, "grp_fu_200_p2");
    sc_trace(mVcdFile, grp_fu_180_opcode, "grp_fu_180_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("estimate_FR.hdltvin.dat");
    mHdltvoutHandle.open("estimate_FR.hdltvout.dat");
}

estimate_FR::~estimate_FR() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ISI_U;
    delete estimate_FR_dadddsub_64ns_64ns_64_5_full_dsp_1_U1;
    delete estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U2;
    delete estimate_FR_dmul_64ns_64ns_64_6_max_dsp_1_U3;
    delete estimate_FR_ddiv_64ns_64ns_64_31_1_U4;
    delete estimate_FR_dcmp_64ns_64ns_1_2_1_U5;
}

void estimate_FR::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void estimate_FR::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FA0000000000000;
}

void estimate_FR::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_3FEF000000000000;
}

void estimate_FR::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv64_3FF0000000000000;
}

void estimate_FR::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv64_403E000000000000;
}

void estimate_FR::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv5_2;
}

void estimate_FR::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_211_p2.read(), ap_const_lv1_1))) {
        empty_5_reg_145 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        empty_5_reg_145 = ap_phi_mux_empty_7_phi_fu_173_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_290_p2.read()))) {
        empty_7_reg_169 = tmp_1_reg_354.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
                esl_seteq<1,1,1>(and_ln15_reg_377.read(), ap_const_lv1_1))) {
        empty_7_reg_169 = tmp_6_reg_396.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_reg_134 = i_reg_305.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_134 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_211_p2.read(), ap_const_lv1_1))) {
        j_0_reg_157 = ap_const_lv7_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        j_0_reg_157 = j_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_233_p2.read()))) {
        FR_addr_1_reg_343 =  (sc_lv<7>) (zext_ln14_fu_239_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        FR_load_reg_381 = FR_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ISI_load_reg_349 = ISI_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        and_ln15_reg_377 = and_ln15_fu_290_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_305 = i_fu_217_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        icmp_ln15_1_reg_367 = icmp_ln15_1_fu_269_p2.read();
        icmp_ln15_reg_362 = icmp_ln15_fu_263_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        reg_205 = grp_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        spksTime_load_1_reg_330 = spksTime_q1.read();
        spksTime_load_reg_325 = spksTime_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        tmp_1_reg_354 = grp_fu_195_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        tmp_4_reg_386 = grp_fu_185_p2.read();
        tmp_5_reg_391 = grp_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        tmp_6_reg_396 = grp_fu_180_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_211_p2.read(), ap_const_lv1_0))) {
        zext_ln11_1_reg_315 = zext_ln11_1_fu_228_p1.read();
    }
}

void estimate_FR::thread_FR_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        FR_address0 = FR_addr_1_reg_343.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        FR_address0 =  (sc_lv<7>) (ap_const_lv64_0);
    } else {
        FR_address0 = "XXXXXXX";
    }
}

void estimate_FR::thread_FR_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        FR_address1 = FR_addr_1_reg_343.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        FR_address1 =  (sc_lv<7>) (zext_ln15_fu_281_p1.read());
    } else {
        FR_address1 = "XXXXXXX";
    }
}

void estimate_FR::thread_FR_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        FR_ce0 = ap_const_logic_1;
    } else {
        FR_ce0 = ap_const_logic_0;
    }
}

void estimate_FR::thread_FR_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()))) {
        FR_ce1 = ap_const_logic_1;
    } else {
        FR_ce1 = ap_const_logic_0;
    }
}

void estimate_FR::thread_FR_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        FR_d0 = tmp_1_reg_354.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        FR_d0 = ap_const_lv64_0;
    } else {
        FR_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_FR::thread_FR_d1() {
    FR_d1 = tmp_6_reg_396.read();
}

void estimate_FR::thread_FR_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        FR_we0 = ap_const_logic_1;
    } else {
        FR_we0 = ap_const_logic_0;
    }
}

void estimate_FR::thread_FR_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
         esl_seteq<1,1,1>(and_ln15_reg_377.read(), ap_const_lv1_1))) {
        FR_we1 = ap_const_logic_1;
    } else {
        FR_we1 = ap_const_logic_0;
    }
}

void estimate_FR::thread_ISI_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ISI_address0 =  (sc_lv<7>) (zext_ln14_fu_239_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ISI_address0 =  (sc_lv<7>) (zext_ln11_1_reg_315.read());
    } else {
        ISI_address0 = "XXXXXXX";
    }
}

void estimate_FR::thread_ISI_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ISI_ce0 = ap_const_logic_1;
    } else {
        ISI_ce0 = ap_const_logic_0;
    }
}

void estimate_FR::thread_ISI_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ISI_we0 = ap_const_logic_1;
    } else {
        ISI_we0 = ap_const_logic_0;
    }
}

void estimate_FR::thread_add_ln15_fu_275_p2() {
    add_ln15_fu_275_p2 = (!ap_const_lv7_7F.is_01() || !j_0_reg_157.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7F) + sc_biguint<7>(j_0_reg_157.read()));
}

void estimate_FR::thread_and_ln15_fu_290_p2() {
    and_ln15_fu_290_p2 = (or_ln15_fu_286_p2.read() & grp_fu_200_p2.read());
}

void estimate_FR::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void estimate_FR::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void estimate_FR::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void estimate_FR::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void estimate_FR::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void estimate_FR::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void estimate_FR::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void estimate_FR::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void estimate_FR::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void estimate_FR::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void estimate_FR::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void estimate_FR::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void estimate_FR::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void estimate_FR::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void estimate_FR::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void estimate_FR::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void estimate_FR::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void estimate_FR::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void estimate_FR::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void estimate_FR::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void estimate_FR::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_233_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void estimate_FR::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void estimate_FR::thread_ap_phi_mux_empty_7_phi_fu_173_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
         esl_seteq<1,1,1>(and_ln15_reg_377.read(), ap_const_lv1_1))) {
        ap_phi_mux_empty_7_phi_fu_173_p4 = tmp_6_reg_396.read();
    } else {
        ap_phi_mux_empty_7_phi_fu_173_p4 = empty_7_reg_169.read();
    }
}

void estimate_FR::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_233_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void estimate_FR::thread_bitcast_ln15_fu_245_p1() {
    bitcast_ln15_fu_245_p1 = reg_205.read();
}

void estimate_FR::thread_grp_fu_180_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_180_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_180_opcode = ap_const_lv2_0;
    } else {
        grp_fu_180_opcode =  (sc_lv<2>) ("XX");
    }
}

void estimate_FR::thread_grp_fu_180_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_180_p0 = tmp_4_reg_386.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_180_p0 = tmp_1_reg_354.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_180_p0 = spksTime_load_reg_325.read();
    } else {
        grp_fu_180_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_FR::thread_grp_fu_180_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_180_p1 = tmp_5_reg_391.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_180_p1 = empty_5_reg_145.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_180_p1 = spksTime_load_1_reg_330.read();
    } else {
        grp_fu_180_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void estimate_FR::thread_i_fu_217_p2() {
    i_fu_217_p2 = (!i_0_reg_134.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_134.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_FR::thread_icmp_ln10_fu_211_p2() {
    icmp_ln10_fu_211_p2 = (!i_0_reg_134.read().is_01() || !ap_const_lv7_4A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_134.read() == ap_const_lv7_4A);
}

void estimate_FR::thread_icmp_ln13_fu_233_p2() {
    icmp_ln13_fu_233_p2 = (!j_0_reg_157.read().is_01() || !ap_const_lv7_4A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_157.read() == ap_const_lv7_4A);
}

void estimate_FR::thread_icmp_ln15_1_fu_269_p2() {
    icmp_ln15_1_fu_269_p2 = (!trunc_ln15_fu_259_p1.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln15_fu_259_p1.read() == ap_const_lv52_0);
}

void estimate_FR::thread_icmp_ln15_fu_263_p2() {
    icmp_ln15_fu_263_p2 = (!tmp_3_fu_249_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_249_p4.read() != ap_const_lv11_7FF);
}

void estimate_FR::thread_j_fu_296_p2() {
    j_fu_296_p2 = (!j_0_reg_157.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_157.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void estimate_FR::thread_or_ln15_fu_286_p2() {
    or_ln15_fu_286_p2 = (icmp_ln15_1_reg_367.read() | icmp_ln15_reg_362.read());
}

void estimate_FR::thread_spksTime_address0() {
    spksTime_address0 =  (sc_lv<7>) (zext_ln11_fu_223_p1.read());
}

void estimate_FR::thread_spksTime_address1() {
    spksTime_address1 =  (sc_lv<7>) (zext_ln11_1_fu_228_p1.read());
}

void estimate_FR::thread_spksTime_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        spksTime_ce0 = ap_const_logic_1;
    } else {
        spksTime_ce0 = ap_const_logic_0;
    }
}

void estimate_FR::thread_spksTime_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        spksTime_ce1 = ap_const_logic_1;
    } else {
        spksTime_ce1 = ap_const_logic_0;
    }
}

void estimate_FR::thread_tmp_3_fu_249_p4() {
    tmp_3_fu_249_p4 = bitcast_ln15_fu_245_p1.read().range(62, 52);
}

void estimate_FR::thread_trunc_ln15_fu_259_p1() {
    trunc_ln15_fu_259_p1 = bitcast_ln15_fu_245_p1.read().range(52-1, 0);
}

void estimate_FR::thread_zext_ln11_1_fu_228_p1() {
    zext_ln11_1_fu_228_p1 = esl_zext<64,7>(i_0_reg_134.read());
}

void estimate_FR::thread_zext_ln11_fu_223_p1() {
    zext_ln11_fu_223_p1 = esl_zext<64,7>(i_fu_217_p2.read());
}

void estimate_FR::thread_zext_ln14_fu_239_p1() {
    zext_ln14_fu_239_p1 = esl_zext<64,7>(j_0_reg_157.read());
}

void estimate_FR::thread_zext_ln15_fu_281_p1() {
    zext_ln15_fu_281_p1 = esl_zext<64,7>(add_ln15_fu_275_p2.read());
}

void estimate_FR::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_211_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_233_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln15_fu_290_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state62;
            } else {
                ap_NS_fsm = ap_ST_fsm_state50;
            }
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_fsm_state54;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state55;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_fsm_state57;
            break;
        case 72057594037927936 : 
            ap_NS_fsm = ap_ST_fsm_state58;
            break;
        case 144115188075855872 : 
            ap_NS_fsm = ap_ST_fsm_state59;
            break;
        case 288230376151711744 : 
            ap_NS_fsm = ap_ST_fsm_state60;
            break;
        case 576460752303423488 : 
            ap_NS_fsm = ap_ST_fsm_state61;
            break;
        case 1152921504606846976 : 
            ap_NS_fsm = ap_ST_fsm_state62;
            break;
        case 2305843009213693952 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<62>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void estimate_FR::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_address0\" :  \"" << spksTime_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_ce0\" :  \"" << spksTime_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"spksTime_q0\" :  \"" << spksTime_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_address1\" :  \"" << spksTime_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spksTime_ce1\" :  \"" << spksTime_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"spksTime_q1\" :  \"" << spksTime_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_address0\" :  \"" << FR_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_ce0\" :  \"" << FR_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_we0\" :  \"" << FR_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_d0\" :  \"" << FR_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_address1\" :  \"" << FR_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_ce1\" :  \"" << FR_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_we1\" :  \"" << FR_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FR_d1\" :  \"" << FR_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"FR_q1\" :  \"" << FR_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

